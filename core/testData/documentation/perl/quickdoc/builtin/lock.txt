<p><a href="psi_element://pod%3A%3Aperlfunc">pod::perlfunc</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FDESCRIPTION">DESCRIPTION</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FAlphabetical+Listing+of+Perl+Functions">Alphabetical Listing of Perl Functions</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">lock THING</dt><dd style="padding-top:6px;">
<p style="padding-bottom: 10px;">This function places an advisory lock on a shared variable or referenced
object contained in <i>THING</i> until the lock goes out of scope.</p>
<p style="padding-bottom: 10px;">The value returned is the scalar itself, if the argument is a scalar, or a
reference, if the argument is a hash, array or subroutine.</p>
<p style="padding-bottom: 10px;"><a href="psi_element://pod%3A%3Aperlfunc%2Flock+THING">C<lock></a> is a &quot;weak keyword&quot;; this means that if you've
defined a function
by this name (before any calls to it), that function will be called
instead.  If you are not under <code>use threads::shared</code> this does nothing.
See <a href="psi_element://threads%3A%3Ashared" style="color:red">threads::shared</a>.</p></dd></dl>
