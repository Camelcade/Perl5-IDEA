<p><a href="psi_element://pod%3A%3Aperlfunc">pod::perlfunc</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FDESCRIPTION">DESCRIPTION</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FAlphabetical+Listing+of+Perl+Functions">Alphabetical Listing of Perl Functions</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">my VARLIST</dt>
<dt style="padding-bottom:4px;font-weight:bold;">my TYPE VARLIST</dt>
<dt style="padding-bottom:4px;font-weight:bold;">my VARLIST : ATTRS</dt>
<dt style="padding-bottom:4px;font-weight:bold;">my TYPE VARLIST : ATTRS</dt><dd style="padding-top:6px;">
<p style="padding-bottom: 10px;">A <a href="psi_element://pod%3A%3Aperlfunc%2Fmy+VARLIST"><code>my</code></a> declares the listed variables to be local
(lexically) to the enclosing block, file, or <a href="psi_element://pod%3A%3Aperlfunc%2Feval+EXPR"><code>eval</code></a>.  If
more than one variable is listed, the list must be placed in
parentheses.</p>
<p style="padding-bottom: 10px;">The exact semantics and interface of TYPE and ATTRS are still
evolving.  TYPE may be a bareword, a constant declared
with <a href="psi_element://constant" style="color:red"><code>use constant</code></a>, or <a href="psi_element://pod%3A%3Aperlfunc%2F__PACKAGE__"><code>__PACKAGE__</code></a>.  It
is
currently bound to the use of the <a href="psi_element://fields" style="color:red">fields</a> pragma,
and attributes are handled using the <a href="psi_element://attributes" style="color:red">attributes</a> pragma, or starting
from Perl 5.8.0 also via the <a href="psi_element://Attribute%3A%3AHandlers" style="color:red">Attribute::Handlers</a> module.  See
<a href="psi_element://perlsub%2FPrivate+Variables+via+my%28%29">Private Variables via my() in perlsub</a> for details.</p>
<p style="padding-bottom: 10px;">Note that with a parenthesised list, <a href="psi_element://pod%3A%3Aperlfunc%2Fundef+EXPR"><code>undef</code></a> can be used
as a dummy placeholder, for example to skip assignment of initial
values:</p>
<div style="padding-bottom: 10px;"><pre><code>    my ( undef, $min, $hour ) = localtime;</code></pre></div></dd></dl>
