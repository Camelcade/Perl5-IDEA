<p><a href="psi_element://pod%3A%3Aperlfunc">pod::perlfunc</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FDESCRIPTION">DESCRIPTION</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FAlphabetical+Listing+of+Perl+Functions">Alphabetical Listing of Perl Functions</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">unshift ARRAY,LIST</dt><dd style="padding-top:6px;">
<p style="padding-bottom: 10px;">Does the opposite of a <a href="psi_element://pod%3A%3Aperlfunc%2Fshift+ARRAY">C<shift></a>.  Or the opposite of a
<a href="psi_element://pod%3A%3Aperlfunc%2Fpush+ARRAY%2CLIST">C<push></a>,
depending on how you look at it.  Prepends list to the front of the
array and returns the new number of elements in the array.</p>
<div style="padding-bottom: 10px;"><pre><code>    unshift(@ARGV, '-e') unless $ARGV[0] =~ /^-/;</code></pre></div>
<p style="padding-bottom: 10px;">Note the LIST is prepended whole, not one element at a time, so the
prepended elements stay in the same order.  Use
<a href="psi_element://pod%3A%3Aperlfunc%2Freverse+LIST">C<reverse></a> to do the reverse.</p>
<p style="padding-bottom: 10px;">Starting with Perl 5.14, an experimental feature allowed
<a href="psi_element://pod%3A%3Aperlfunc%2Funshift+ARRAY%2CLIST">C<unshift></a> to take
a scalar expression. This experiment has been deemed unsuccessful, and was
removed as of Perl 5.24.</p></dd></dl>
