<p><a href="psi_element://pod%3A%3Aperlfunc">pod::perlfunc</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FDESCRIPTION">DESCRIPTION</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FAlphabetical+Listing+of+Perl+Functions">Alphabetical Listing of Perl Functions</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">return EXPR</dt>
<dt style="padding-bottom:4px;font-weight:bold;">return</dt><dd style="padding-top:6px;">
<p style="padding-bottom: 10px;">Returns from a subroutine, <a href="psi_element://pod%3A%3Aperlfunc%2Feval+EXPR">C<eval></a>,
<a href="psi_element://pod%3A%3Aperlfunc%2Fdo+EXPR">C<do FILE></a>, <a href="psi_element://pod%3A%3Aperlfunc%2Fsort+SUBNAME+LIST">C<sort></a> block or regex
eval block (but not a <a href="psi_element://pod%3A%3Aperlfunc%2Fgrep+BLOCK+LIST">C<grep></a> or
<a href="psi_element://pod%3A%3Aperlfunc%2Fmap+BLOCK+LIST">C<map></a> block) with the value
given in EXPR.  Evaluation of EXPR may be in list, scalar, or void
context, depending on how the return value will be used, and the context
may vary from one execution to the next (see
<a href="psi_element://pod%3A%3Aperlfunc%2Fwantarray">C<wantarray></a>).  If no EXPR
is given, returns an empty list in list context, the undefined value in
scalar context, and (of course) nothing at all in void context.</p>
<p style="padding-bottom: 10px;">(In the absence of an explicit <a href="psi_element://pod%3A%3Aperlfunc%2Freturn+EXPR">C<return></a>, a subroutine,
<a href="psi_element://pod%3A%3Aperlfunc%2Feval+EXPR">C<eval></a>,
or <a href="psi_element://pod%3A%3Aperlfunc%2Fdo+EXPR">C<do FILE></a> automatically returns the value of the last expression
evaluated.)</p>
<p style="padding-bottom: 10px;">Unlike most named operators, this is also exempt from the
looks-like-a-function rule, so <code>return (&quot;foo&quot;).&quot;bar&quot;</code> will
cause <code>&quot;bar&quot;</code> to be part of the argument to <a href="psi_element://pod%3A%3Aperlfunc%2Freturn+EXPR">C<return></a>.</p></dd></dl>
