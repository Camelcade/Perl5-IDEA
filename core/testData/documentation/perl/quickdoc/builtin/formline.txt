<p><a href="psi_element://pod%3A%3Aperlfunc">pod::perlfunc</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FDESCRIPTION">DESCRIPTION</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FAlphabetical+Listing+of+Perl+Functions">Alphabetical Listing of Perl Functions</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">formline PICTURE,LIST</dt><dd style="padding-top:6px;">
<p style="padding-bottom: 10px;">This is an internal function used by <a href="psi_element://pod%3A%3Aperlfunc%2Fformat">C<format></a>s, though you
may call it, too.  It formats (see <a href="psi_element://perlform">perlform</a>) a list of values
according to the contents of PICTURE, placing the output into the format
output accumulator, <a href="psi_element://perlvar%2F%24%5EA">C<$^A></a> (or <code>$ACCUMULATOR</code> in
<a href="psi_element://English" style="color:red">English</a>).  Eventually, when a <a href="psi_element://pod%3A%3Aperlfunc%2Fwrite+FILEHANDLE">C<write></a> is done,
the contents of <a href="psi_element://perlvar%2F%24%5EA">C<$^A></a> are written to some filehandle.
You could also read <a href="psi_element://perlvar%2F%24%5EA">C<$^A></a> and then set
<a href="psi_element://perlvar%2F%24%5EA">C<$^A></a> back to <code>&quot;&quot;</code>.  Note that a format typically does
one <a href="psi_element://pod%3A%3Aperlfunc%2Fformline+PICTURE%2CLIST">C<formline></a> per line of form, but the
<a href="psi_element://pod%3A%3Aperlfunc%2Fformline+PICTURE%2CLIST">C<formline></a> function itself doesn't care how
many newlines are embedded in the PICTURE.  This means that the <code>~</code> and
<code>~~</code> tokens treat the entire PICTURE as a single line.  You may
therefore need to use multiple formlines to implement a single record
format, just like the <a href="psi_element://pod%3A%3Aperlfunc%2Fformat">C<format></a> compiler.</p>
<p style="padding-bottom: 10px;">Be careful if you put double quotes around the picture, because an <code>@</code>
character may be taken to mean the beginning of an array name.
<a href="psi_element://pod%3A%3Aperlfunc%2Fformline+PICTURE%2CLIST">C<formline></a> always returns true.  See
<a href="psi_element://perlform">perlform</a> for other examples.</p>
<p style="padding-bottom: 10px;">If you are trying to use this instead of <a href="psi_element://pod%3A%3Aperlfunc%2Fwrite+FILEHANDLE">C<write></a>
to capture the output, you may find it easier to open a filehandle to a
scalar (<code>open my $fh, &quot;&gt;&quot;, \$output</code>) and write to that instead.</p></dd></dl>
