<p><a href="psi_element://pod%3A%3Aperlfunc">pod::perlfunc</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FDESCRIPTION">DESCRIPTION</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FAlphabetical+Listing+of+Perl+Functions">Alphabetical Listing of Perl Functions</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">opendir DIRHANDLE,EXPR</dt><dd style="padding-top:6px;">
<p style="padding-bottom: 10px;">Opens a directory named EXPR for processing by
<a href="psi_element://pod%3A%3Aperlfunc%2Freaddir+DIRHANDLE"><code>readdir</code></a>, <a href="psi_element://pod%3A%3Aperlfunc%2Ftelldir+DIRHANDLE"><code>telldir</code></a>,
<a href="psi_element://pod%3A%3Aperlfunc%2Fseekdir+DIRHANDLE%2CPOS"><code>seekdir</code></a>,
<a href="psi_element://pod%3A%3Aperlfunc%2Frewinddir+DIRHANDLE"><code>rewinddir</code></a>, and
<a href="psi_element://pod%3A%3Aperlfunc%2Fclosedir+DIRHANDLE"><code>closedir</code></a>.  Returns true if successful.
DIRHANDLE may be an expression whose value can be used as an indirect
dirhandle, usually the real dirhandle name.  If DIRHANDLE is an undefined
scalar variable (or array or hash element), the variable is assigned a
reference to a new anonymous dirhandle; that is, it's autovivified.
Dirhandles are the same objects as filehandles; an I/O object can only
be open as one of these handle types at once.</p>
<p style="padding-bottom: 10px;">See the example at <a href="psi_element://pod%3A%3Aperlfunc%2Freaddir+DIRHANDLE"><code>readdir</code></a>.</p></dd></dl>
