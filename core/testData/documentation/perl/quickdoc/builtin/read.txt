<p><a href="psi_element://pod%3A%3Aperlfunc">pod::perlfunc</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FDESCRIPTION">DESCRIPTION</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FAlphabetical+Listing+of+Perl+Functions">Alphabetical Listing of Perl Functions</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">read FILEHANDLE,SCALAR,LENGTH,OFFSET
 </dt>
<dt style="padding-bottom:4px;font-weight:bold;">read FILEHANDLE,SCALAR,LENGTH</dt><dd style="padding-top:6px;">
<p style="padding-bottom: 10px;">Attempts to read LENGTH <i>characters</i> of data into variable SCALAR
from the specified FILEHANDLE.  Returns the number of characters
actually read, <code>0</code> at end of file, or undef if there was an error (in
the latter case <a href="psi_element://perlvar%2F%24%21">C<$!></a> is also set).  SCALAR will be grown
or shrunk
so that the last character actually read is the last character of the
scalar after the read.</p>
<p style="padding-bottom: 10px;">An OFFSET may be specified to place the read data at some place in the
string other than the beginning.  A negative OFFSET specifies
placement at that many characters counting backwards from the end of
the string.  A positive OFFSET greater than the length of SCALAR
results in the string being padded to the required size with <code>&quot;\0&quot;</code>
bytes before the result of the read is appended.</p>
<p style="padding-bottom: 10px;">The call is implemented in terms of either Perl's or your system's native
<a href="psi_element://fread%283%29" style="color:red">fread(3)</a> library function.  To get a true <a href="psi_element://read%282%29" style="color:red">read(2)</a> system call, see
<a href="psi_element://pod%3A%3Aperlfunc%2Fsysread+FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET">sysread</a>.</p>
<p style="padding-bottom: 10px;">Note the <i>characters</i>: depending on the status of the filehandle,
either (8-bit) bytes or characters are read.  By default, all
filehandles operate on bytes, but for example if the filehandle has
been opened with the <code>:utf8</code> I/O layer (see
<a href="psi_element://pod%3A%3Aperlfunc%2Fopen+FILEHANDLE%2CEXPR">C<open></a>, and the <a href="psi_element://open" style="color:red">open</a>
pragma), the I/O will operate on UTF8-encoded Unicode
characters, not bytes.  Similarly for the <code>:encoding</code> layer:
in that case pretty much any characters can be read.</p></dd></dl>
