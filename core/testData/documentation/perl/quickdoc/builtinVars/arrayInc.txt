<p><a href="psi_element://pod%3A%3Aperlvar">pod::perlvar</a>: <a href="psi_element://pod%3A%3Aperlvar%2FSPECIAL+VARIABLES">SPECIAL VARIABLES</a>: <a href="psi_element://pod%3A%3Aperlvar%2FGeneral+Variables">General Variables</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">@INC</dt><dd style="padding-top:6px;"><p style="padding-bottom: 10px;">The array <code>@INC</code> contains the list of places that the <code>do EXPR</code>,
<code>require</code>, or <code>use</code> constructs look for their library files.  It
initially consists of the arguments to any <B>-I</B> command-line
switches, followed by the default Perl library, probably
<i>/usr/local/lib/perl</i>, followed by &quot;.&quot;, to represent the current
directory.  (&quot;.&quot; will not be appended if taint checks are enabled,
either by <code>-T</code> or by <code>-t</code>, or if configured not to do so by the
<code>-Ddefault_inc_excludes_dot</code> compile time option.)  If you need to
modify this at runtime, you should use the <code>use lib</code> pragma to get
the machine-dependent library properly loaded also:</p>
<div style="padding-bottom: 10px;"><pre><code>    use lib '/mypath/libdir/';
    use SomeMod;</code></pre></div>
<p style="padding-bottom: 10px;">You can also insert hooks into the file inclusion system by putting Perl
code directly into <code>@INC</code>.  Those hooks may be subroutine references,
array references or blessed objects.  See <a href="psi_element://perlfunc%2Frequire">require in perlfunc</a> for details.</p></dd></dl>
