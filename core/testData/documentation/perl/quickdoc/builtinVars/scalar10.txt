<p><a href="psi_element://pod%3A%3Aperlvar">pod::perlvar</a>: <a href="psi_element://pod%3A%3Aperlvar%2FSPECIAL+VARIABLES">SPECIAL VARIABLES</a>: <a href="psi_element://pod%3A%3Aperlvar%2FVariables+related+to+regular+expressions">Variables related to regular expressions</a>: <a href="psi_element://pod%3A%3Aperlvar%2FPerformance+issues">Performance issues</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">$&lt;<i>digits</i>&gt; ($1, $2, ...)
   </dt><dd style="padding-top:6px;"><p style="padding-bottom: 10px;">Contains the subpattern from the corresponding set of capturing
parentheses from the last successful pattern match, not counting patterns
matched in nested blocks that have been exited already.</p>
<p style="padding-bottom: 10px;">Note there is a distinction between a capture buffer which matches
the empty string a capture buffer which is optional. Eg, <code>(x?)</code> and
<code>(x)?</code> The latter may be undef, the former not.</p>
<p style="padding-bottom: 10px;">These variables are read-only and dynamically-scoped.</p>
<p style="padding-bottom: 10px;">Mnemonic: like \digits.</p></dd></dl>
