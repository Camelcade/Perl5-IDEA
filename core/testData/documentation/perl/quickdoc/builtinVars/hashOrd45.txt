<p><a href="psi_element://pod%3A%3Aperlvar">pod::perlvar</a>: <a href="psi_element://pod%3A%3Aperlvar%2FSPECIAL+VARIABLES">SPECIAL VARIABLES</a>: <a href="psi_element://pod%3A%3Aperlvar%2FVariables+related+to+regular+expressions">Variables related to regular expressions</a>: <a href="psi_element://pod%3A%3Aperlvar%2FPerformance+issues">Performance issues</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">%{^CAPTURE_ALL}</dt>
<dt style="padding-bottom:4px;font-weight:bold;">%-</dt><dd style="padding-top:6px;"><p style="padding-bottom: 10px;">Similar to <code>%+</code>, this variable allows access to the named capture groups
in the last successful match in the currently active dynamic scope.  To
each capture group name found in the regular expression, it associates a
reference to an array containing the list of values captured by all
buffers with that name (should there be several of them), in the order
where they appear.</p>
<p style="padding-bottom: 10px;">Here's an example:</p>
<div style="padding-bottom: 10px;"><pre><code>    if ('1234' =~ /(?&lt;A&gt;1)(?&lt;B&gt;2)(?&lt;A&gt;3)(?&lt;B&gt;4)/) {
        foreach my $bufname (sort keys %-) {
            my $ary = $-{$bufname};
            foreach my $idx (0..$#$ary) {
                print &quot;\$-{$bufname}[$idx] : &quot;,
                      (defined($ary-&gt;[$idx])
                          ? &quot;'$ary-&gt;[$idx]'&quot;
                          : &quot;undef&quot;),
                      &quot;\n&quot;;
            }
        }
    }</code></pre></div>
<p style="padding-bottom: 10px;">would print out:</p>
<div style="padding-bottom: 10px;"><pre><code>    $-{A}[0] : '1'
    $-{A}[1] : '3'
    $-{B}[0] : '2'
    $-{B}[1] : '4'</code></pre></div>
<p style="padding-bottom: 10px;">The keys of the <code>%-</code> hash correspond to all buffer names found in
the regular expression.</p>
<p style="padding-bottom: 10px;">The behaviour of <code>%-</code> is implemented via the
<a href="psi_element://Tie%3A%3AHash%3A%3ANamedCapture" style="color:red">Tie::Hash::NamedCapture</a> module.</p>
<p style="padding-bottom: 10px;"><B>Note:</B> <code>%-</code> and <code>%+</code> are tied views into a common internal hash
associated with the last successful regular expression.  Therefore mixing
iterative access to them via <code>each</code> may have unpredictable results.
Likewise, if the last successful match changes, then the results may be
surprising.</p>
<p style="padding-bottom: 10px;">This variable was added in Perl v5.10.0. The <code>%{^CAPTURE_ALL}</code> alias was
added in 5.25.7.</p>
<p style="padding-bottom: 10px;">This variable is read-only and dynamically-scoped.</p></dd></dl>
