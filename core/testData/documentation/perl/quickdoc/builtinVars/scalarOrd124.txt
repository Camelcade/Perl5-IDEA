<p><a href="psi_element://pod%3A%3Aperlvar">pod::perlvar</a>: <a href="psi_element://pod%3A%3Aperlvar%2FSPECIAL+VARIABLES">SPECIAL VARIABLES</a>: <a href="psi_element://pod%3A%3Aperlvar%2FVariables+related+to+filehandles">Variables related to filehandles</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">HANDLE-&gt;autoflush( EXPR )</dt>
<dt style="padding-bottom:4px;font-weight:bold;">$OUTPUT_AUTOFLUSH</dt>
<dt style="padding-bottom:4px;font-weight:bold;">$|
   </dt><dd style="padding-top:6px;"><p style="padding-bottom: 10px;">If set to nonzero, forces a flush right away and after every write or
print on the currently selected output channel.  Default is 0
(regardless of whether the channel is really buffered by the system or
not; <code>$|</code> tells you only whether you've asked Perl explicitly to
flush after each write).  STDOUT will typically be line buffered if
output is to the terminal and block buffered otherwise.  Setting this
variable is useful primarily when you are outputting to a pipe or
socket, such as when you are running a Perl program under <B>rsh</B> and
want to see the output as it's happening.  This has no effect on input
buffering.  See <a href="psi_element://perlfunc%2Fgetc">getc in perlfunc</a> for that.  See <a href="psi_element://perlfunc%2Fselect">select in perlfunc</a> on
how to select the output channel.  See also <a href="psi_element://IO%3A%3AHandle" style="color:red">IO::Handle</a>.</p>
<p style="padding-bottom: 10px;">Mnemonic: when you want your pipes to be piping hot.</p></dd></dl>
