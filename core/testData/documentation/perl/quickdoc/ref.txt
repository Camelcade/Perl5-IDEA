<p><a href="psi_element://pod%3A%3Aperlfunc">pod::perlfunc</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FDESCRIPTION">DESCRIPTION</a>: <a href="psi_element://pod%3A%3Aperlfunc%2FAlphabetical+Listing+of+Perl+Functions">Alphabetical Listing of Perl Functions</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">ref EXPR
 </dt>
<dt style="padding-bottom:4px;font-weight:bold;">ref</dt><dd style="padding-top:6px;">
<p style="padding-bottom: 10px;">Returns a non-empty string if EXPR is a reference, the empty
string otherwise.  If EXPR is not specified, <a href="psi_element://perlvar%2F%24_">C<$_></a> will be
used.  The value returned depends on the type of thing the reference is
a reference to.</p>
<p style="padding-bottom: 10px;">Builtin types include:</p>
<div style="padding-bottom: 10px;"><pre><code>    SCALAR
    ARRAY
    HASH
    CODE
    REF
    GLOB
    LVALUE
    FORMAT
    IO
    VSTRING
    Regexp</code></pre></div>
<p style="padding-bottom: 10px;">You can think of <a href="psi_element://pod%3A%3Aperlfunc%2Fref+EXPR">C<ref></a> as a <code>typeof</code> operator.</p>
<div style="padding-bottom: 10px;"><pre><code>    if (ref($r) eq &quot;HASH&quot;) {
        print &quot;r is a reference to a hash.\n&quot;;
    }
    unless (ref($r)) {
        print &quot;r is not a reference at all.\n&quot;;
    }</code></pre></div>
<p style="padding-bottom: 10px;">The return value <code>LVALUE</code> indicates a reference to an lvalue that is not
a variable.  You get this from taking the reference of function calls like
<a href="psi_element://pod%3A%3Aperlfunc%2Fpos+SCALAR">C<pos></a> or
<a href="psi_element://pod%3A%3Aperlfunc%2Fsubstr+EXPR%2COFFSET%2CLENGTH%2CREPLACEMENT">C<substr></a>.  <code>VSTRING</code> is
returned if the reference points to a
<a href="psi_element://perldata%2FVersion+Strings">version string</a>.</p>
<p style="padding-bottom: 10px;">The result <code>Regexp</code> indicates that the argument is a regular expression
resulting from <a href="psi_element://pod%3A%3Aperlfunc%2FqrE%3Csol%3ESTRINGE%3Csol%3E" style="color:red">C<qrE<sol>E<sol>></a>.</p>
<p style="padding-bottom: 10px;">If the referenced object has been blessed into a package, then that package
name is returned instead.  But don't use that, as it's now considered
&quot;bad practice&quot;.  For one reason, an object could be using a class called
<code>Regexp</code> or <code>IO</code>, or even <code>HASH</code>.  Also, <a href="psi_element://pod%3A%3Aperlfunc%2Fref+EXPR">C<ref></a> doesn't
take into account subclasses, like
<a href="psi_element://UNIVERSAL%2FC%3C%3C+%24obj-%3Eisa%28+TYPE+%29+%3E%3E" style="color:red">C<isa></a> does.</p>
<p style="padding-bottom: 10px;">Instead, use <a href="psi_element://Scalar%3A%3AUtil%2Fblessed" style="color:red">C<blessed></a> (in the <a href="psi_element://Scalar%3A%3AUtil" style="color:red">Scalar::Util</a>
module) for boolean checks, <a href="psi_element://UNIVERSAL%2FC%3C%3C+%24obj-%3Eisa%28+TYPE+%29+%3E%3E" style="color:red">C<isa></a>
for specific class checks and <a href="psi_element://Scalar%3A%3AUtil%2Freftype" style="color:red">C<reftype></a> (also
from <a href="psi_element://Scalar%3A%3AUtil" style="color:red">Scalar::Util</a>) for type checks.  (See <a href="psi_element://perlobj">perlobj</a> for details and
a <a href="psi_element://Scalar%3A%3AUtil%2Fblessed" style="color:red">C<blessed></a>/<a href="psi_element://UNIVERSAL%2FC%3C%3C+%24obj-%3Eisa%28+TYPE+%29+%3E%3E" style="color:red">C<isa></a>
example.)</p>
<p style="padding-bottom: 10px;">See also <a href="psi_element://perlref">perlref</a>.</p></dd></dl>
