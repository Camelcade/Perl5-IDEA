POD file
  PsiForSectionImpl(Perl5 POD: FOR_SECTION)
    PsiElement(Perl5 POD: =begin)('=begin')
    PsiPodSectionFormatImpl(Perl5 POD: POD_SECTION_FORMAT)
      PsiElement(Perl5 POD: format_name)('comment')
    PsiForSectionContentImpl(Perl5 POD: FOR_SECTION_CONTENT)
      <empty list>
    PsiElement(Perl5 POD: NL)('\n')
  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
    PsiElement(Perl5 POD: symbol)('#')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PodIdentifierImpl(Perl5 POD: identifier)('DO')
    PodIdentifierImpl(Perl5 POD: identifier)('NOT')
    PodIdentifierImpl(Perl5 POD: identifier)('EDIT')
    PodIdentifierImpl(Perl5 POD: identifier)('THIS')
    PodIdentifierImpl(Perl5 POD: identifier)('FILE')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: symbol)('#')
    PodIdentifierImpl(Perl5 POD: identifier)('This')
    PodIdentifierImpl(Perl5 POD: identifier)('file')
    PodIdentifierImpl(Perl5 POD: identifier)('is')
    PodIdentifierImpl(Perl5 POD: identifier)('machine')
    PsiElement(Perl5 POD: symbol)('-')
    PodIdentifierImpl(Perl5 POD: identifier)('generated')
    PodIdentifierImpl(Perl5 POD: identifier)('by')
    PodIdentifierImpl(Perl5 POD: identifier)('lib')
    PsiElement(Perl5 POD: symbol)('/')
    PodIdentifierImpl(Perl5 POD: identifier)('unicore')
    PsiElement(Perl5 POD: symbol)('/')
    PodIdentifierImpl(Perl5 POD: identifier)('mktables')
    PodIdentifierImpl(Perl5 POD: identifier)('from')
    PodIdentifierImpl(Perl5 POD: identifier)('the')
    PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
    PsiElement(Perl5 POD: symbol)('#')
    PodIdentifierImpl(Perl5 POD: identifier)('database')
    PsiElement(Perl5 POD: symbol)(',')
    PodIdentifierImpl(Perl5 POD: identifier)('Version')
    PsiElement(Perl5 POD: number)('10.0')
    PsiElement(Perl5 POD: number)('.0')
    PsiElement(Perl5 POD: number)('.')
    PodIdentifierImpl(Perl5 POD: identifier)('Any')
    PodIdentifierImpl(Perl5 POD: identifier)('changes')
    PodIdentifierImpl(Perl5 POD: identifier)('made')
    PodIdentifierImpl(Perl5 POD: identifier)('here')
    PodIdentifierImpl(Perl5 POD: identifier)('will')
    PodIdentifierImpl(Perl5 POD: identifier)('be')
    PodIdentifierImpl(Perl5 POD: identifier)('lost')
    PsiElement(Perl5 POD: symbol)('!')
    PsiElement(Perl5 POD: NL)('\n')
  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
    PodIdentifierImpl(Perl5 POD: identifier)('To')
    PodIdentifierImpl(Perl5 POD: identifier)('change')
    PodIdentifierImpl(Perl5 POD: identifier)('this')
    PodIdentifierImpl(Perl5 POD: identifier)('file')
    PsiElement(Perl5 POD: symbol)(',')
    PodIdentifierImpl(Perl5 POD: identifier)('edit')
    PodIdentifierImpl(Perl5 POD: identifier)('lib')
    PsiElement(Perl5 POD: symbol)('/')
    PodIdentifierImpl(Perl5 POD: identifier)('unicore')
    PsiElement(Perl5 POD: symbol)('/')
    PodIdentifierImpl(Perl5 POD: identifier)('mktables')
    PodIdentifierImpl(Perl5 POD: identifier)('instead')
    PsiElement(Perl5 POD: number)('.')
    PsiElement(Perl5 POD: NL)('\n')
  PsiForSectionImpl(Perl5 POD: FOR_SECTION)
    PsiElement(Perl5 POD: =end)('=end')
    PsiPodSectionFormatImpl(Perl5 POD: POD_SECTION_FORMAT)
      PsiElement(Perl5 POD: format_name)('comment')
    PsiForSectionContentImpl(Perl5 POD: FOR_SECTION_CONTENT)
      <empty list>
    PsiElement(Perl5 POD: NL)('\n')
  PsiHead1SectionImpl(Perl5 POD: HEAD_1_SECTION)
    PsiElement(Perl5 POD: =head1)('=head1')
    PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
      PodIdentifierImpl(Perl5 POD: identifier)('NAME')
    PsiElement(Perl5 POD: NL)('\n')
    PsiHead1SectionContentImpl(Perl5 POD: HEAD_1_SECTION_CONTENT)
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('perluniprops')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('Index')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('Version')
        PsiElement(Perl5 POD: number)('10.0')
        PsiElement(Perl5 POD: number)('.0')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PsiElement(Perl5 POD: NL)('\n')
  PsiHead1SectionImpl(Perl5 POD: HEAD_1_SECTION)
    PsiElement(Perl5 POD: =head1)('=head1')
    PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
      PodIdentifierImpl(Perl5 POD: identifier)('DESCRIPTION')
    PsiElement(Perl5 POD: NL)('\n')
    PsiHead1SectionContentImpl(Perl5 POD: HEAD_1_SECTION_CONTENT)
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('This')
        PodIdentifierImpl(Perl5 POD: identifier)('document')
        PodIdentifierImpl(Perl5 POD: identifier)('provides')
        PodIdentifierImpl(Perl5 POD: identifier)('information')
        PodIdentifierImpl(Perl5 POD: identifier)('about')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('portion')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('database')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('deals')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('portion')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('defined')
        PodIdentifierImpl(Perl5 POD: identifier)('on')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('points')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ()('(')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('Other')
              PodIdentifierImpl(Perl5 POD: identifier)('information')
              PodIdentifierImpl(Perl5 POD: identifier)('in')
              PodIdentifierImpl(Perl5 POD: identifier)('the')
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PodIdentifierImpl(Perl5 POD: identifier)('data')
              PodIdentifierImpl(Perl5 POD: identifier)('base')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('below')
        PodIdentifierImpl(Perl5 POD: identifier)('briefly')
        PodIdentifierImpl(Perl5 POD: identifier)('mentions')
        PodIdentifierImpl(Perl5 POD: identifier)('other')
        PodIdentifierImpl(Perl5 POD: identifier)('data')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('provides')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('can')
        PodIdentifierImpl(Perl5 POD: identifier)('provide')
        PodIdentifierImpl(Perl5 POD: identifier)('access')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('non')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('provisional')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('though')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('enabled')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('default')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('omitted')
        PodIdentifierImpl(Perl5 POD: identifier)('ones')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unihan')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('accessible')
        PodIdentifierImpl(Perl5 POD: identifier)('via')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('CPAN')
        PodIdentifierImpl(Perl5 POD: identifier)('module')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('Unihan')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ))(')')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('certain')
        PodIdentifierImpl(Perl5 POD: identifier)('deprecated')
        PodIdentifierImpl(Perl5 POD: identifier)('or')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('internal')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('An')
        PodIdentifierImpl(Perl5 POD: identifier)('installation')
        PodIdentifierImpl(Perl5 POD: identifier)('may')
        PodIdentifierImpl(Perl5 POD: identifier)('choose')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('recompile')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('s')
        PodIdentifierImpl(Perl5 POD: identifier)('tables')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('change')
        PodIdentifierImpl(Perl5 POD: identifier)('this')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('See')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PodIdentifierImpl(Perl5 POD: identifier)('character')
              PodIdentifierImpl(Perl5 POD: identifier)('properties')
              PodIdentifierImpl(Perl5 POD: identifier)('that')
              PodIdentifierImpl(Perl5 POD: identifier)('are')
              PodIdentifierImpl(Perl5 POD: identifier)('NOT')
              PodIdentifierImpl(Perl5 POD: identifier)('accepted')
              PodIdentifierImpl(Perl5 POD: identifier)('by')
              PodIdentifierImpl(Perl5 POD: identifier)('Perl')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('For')
        PodIdentifierImpl(Perl5 POD: identifier)('most')
        PodIdentifierImpl(Perl5 POD: identifier)('purposes')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('access')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('from')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('core')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('through')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expression')
        PodIdentifierImpl(Perl5 POD: identifier)('matches')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('described')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('next')
        PodIdentifierImpl(Perl5 POD: identifier)('section')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('For')
        PodIdentifierImpl(Perl5 POD: identifier)('some')
        PodIdentifierImpl(Perl5 POD: identifier)('special')
        PodIdentifierImpl(Perl5 POD: identifier)('purposes')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('access')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('suitable')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expression')
        PodIdentifierImpl(Perl5 POD: identifier)('matching')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('handles')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('accessible')
        PodIdentifierImpl(Perl5 POD: identifier)('via')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('standard')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('UCD')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('module')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('described')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('section')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('Properties')
              PodIdentifierImpl(Perl5 POD: identifier)('accessible')
              PodIdentifierImpl(Perl5 POD: identifier)('through')
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('UCD')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('provides')
        PodIdentifierImpl(Perl5 POD: identifier)('some')
        PodIdentifierImpl(Perl5 POD: identifier)('additional')
        PodIdentifierImpl(Perl5 POD: identifier)('extensions')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('short')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('cut')
        PodIdentifierImpl(Perl5 POD: identifier)('synonyms')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('This')
        PodIdentifierImpl(Perl5 POD: identifier)('document')
        PodIdentifierImpl(Perl5 POD: identifier)('merely')
        PodIdentifierImpl(Perl5 POD: identifier)('lists')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('available')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('does')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('attempt')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('explain')
        PodIdentifierImpl(Perl5 POD: identifier)('what')
        PodIdentifierImpl(Perl5 POD: identifier)('each')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('really')
        PodIdentifierImpl(Perl5 POD: identifier)('means')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('There')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('brief')
        PodIdentifierImpl(Perl5 POD: identifier)('description')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('each')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('extension')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('see')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('perlunicode')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('Other')
              PodIdentifierImpl(Perl5 POD: identifier)('Properties')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('more')
        PodIdentifierImpl(Perl5 POD: identifier)('information')
        PodIdentifierImpl(Perl5 POD: identifier)('on')
        PodIdentifierImpl(Perl5 POD: identifier)('these')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('There')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('some')
        PodIdentifierImpl(Perl5 POD: identifier)('detail')
        PodIdentifierImpl(Perl5 POD: identifier)('about')
        PodIdentifierImpl(Perl5 POD: identifier)('Blocks')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('Scripts')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('General_Category')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('Bidi_Class')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('perlunicode')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('but')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('find')
        PodIdentifierImpl(Perl5 POD: identifier)('out')
        PodIdentifierImpl(Perl5 POD: identifier)('about')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('intricacies')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('official')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('refer')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('standard')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('A')
        PodIdentifierImpl(Perl5 POD: identifier)('good')
        PodIdentifierImpl(Perl5 POD: identifier)('starting')
        PodIdentifierImpl(Perl5 POD: identifier)('place')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkUrlImpl(Perl5 POD: LINK_URL)
              PodIdentifierImpl(Perl5 POD: identifier)('http')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: /)('/')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('www')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('unicode')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('org')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('reports')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('tr44')
              PsiElement(Perl5 POD: /)('/')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Note')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('you')
        PodIdentifierImpl(Perl5 POD: identifier)('can')
        PodIdentifierImpl(Perl5 POD: identifier)('define')
        PodIdentifierImpl(Perl5 POD: identifier)('your')
        PodIdentifierImpl(Perl5 POD: identifier)('own')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('see')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('perlunicode')
            PsiElement(Perl5 POD: /)('/')
            PsiElement(Perl5 POD: ")('"')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('User')
              PsiElement(Perl5 POD: symbol)('-')
              PodIdentifierImpl(Perl5 POD: identifier)('Defined')
              PodIdentifierImpl(Perl5 POD: identifier)('Character')
              PodIdentifierImpl(Perl5 POD: identifier)('Properties')
            PsiElement(Perl5 POD: ")('"')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
  PsiHead1SectionImpl(Perl5 POD: HEAD_1_SECTION)
    PsiElement(Perl5 POD: =head1)('=head1')
    PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
      PodIdentifierImpl(Perl5 POD: identifier)('Properties')
      PodIdentifierImpl(Perl5 POD: identifier)('accessible')
      PodIdentifierImpl(Perl5 POD: identifier)('through')
      PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
        PsiElement(Perl5 POD: C)('C')
        PsiElement(Perl5 POD: <)('<')
        PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
          PsiElement(Perl5 POD: \)('\')
          PodIdentifierImpl(Perl5 POD: identifier)('p')
          PsiElement(Perl5 POD: {)('{')
          PsiElement(Perl5 POD: })('}')
        PsiElement(Perl5 POD: >)('>')
      PodIdentifierImpl(Perl5 POD: identifier)('and')
      PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
        PsiElement(Perl5 POD: C)('C')
        PsiElement(Perl5 POD: <)('<')
        PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
          PsiElement(Perl5 POD: \)('\')
          PodIdentifierImpl(Perl5 POD: identifier)('P')
          PsiElement(Perl5 POD: {)('{')
          PsiElement(Perl5 POD: })('}')
        PsiElement(Perl5 POD: >)('>')
    PsiElement(Perl5 POD: NL)('\n')
    PsiHead1SectionContentImpl(Perl5 POD: HEAD_1_SECTION_CONTENT)
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expression')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('P')
            PsiElement(Perl5 POD: {)('{')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('constructs')
        PodIdentifierImpl(Perl5 POD: identifier)('give')
        PodIdentifierImpl(Perl5 POD: identifier)('access')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('most')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('below')
        PodIdentifierImpl(Perl5 POD: identifier)('shows')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('these')
        PodIdentifierImpl(Perl5 POD: identifier)('constructs')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('both')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('compound')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
          PsiElement(Perl5 POD: B)('B')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('Compound')
            PodIdentifierImpl(Perl5 POD: identifier)('forms')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('consist')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('two')
        PodIdentifierImpl(Perl5 POD: identifier)('components')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('separated')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('an')
        PodIdentifierImpl(Perl5 POD: identifier)('equals')
        PodIdentifierImpl(Perl5 POD: identifier)('sign')
        PodIdentifierImpl(Perl5 POD: identifier)('or')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('colon')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('first')
        PodIdentifierImpl(Perl5 POD: identifier)('component')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('second')
        PodIdentifierImpl(Perl5 POD: identifier)('component')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('particular')
        PodIdentifierImpl(Perl5 POD: identifier)('value')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('match')
        PodIdentifierImpl(Perl5 POD: identifier)('against')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('example')
        PsiElement(Perl5 POD: symbol)(',')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
            PsiElement(Perl5 POD: :)(':')
            PodIdentifierImpl(Perl5 POD: identifier)('Greek')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
            PsiElement(Perl5 POD: symbol)('=')
            PodIdentifierImpl(Perl5 POD: identifier)('Greek')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('both')
        PodIdentifierImpl(Perl5 POD: identifier)('mean')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('match')
        PodIdentifierImpl(Perl5 POD: identifier)('characters')
        PodIdentifierImpl(Perl5 POD: identifier)('whose')
        PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('value')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('Greek')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ()('(')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('an')
        PodIdentifierImpl(Perl5 POD: identifier)('improved')
        PodIdentifierImpl(Perl5 POD: identifier)('version')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('Script')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
          PsiElement(Perl5 POD: B)('B')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('Single')
            PodIdentifierImpl(Perl5 POD: identifier)('forms')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('like')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Greek')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('mostly')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('defined')
        PodIdentifierImpl(Perl5 POD: identifier)('shortcuts')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('their')
        PodIdentifierImpl(Perl5 POD: identifier)('equivalent')
        PodIdentifierImpl(Perl5 POD: identifier)('compound')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('shows')
        PodIdentifierImpl(Perl5 POD: identifier)('these')
        PodIdentifierImpl(Perl5 POD: identifier)('equivalences')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('In')
        PodIdentifierImpl(Perl5 POD: identifier)('our')
        PodIdentifierImpl(Perl5 POD: identifier)('example')
        PsiElement(Perl5 POD: symbol)(',')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Greek')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('just')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('shortcut')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
            PsiElement(Perl5 POD: symbol)('=')
            PodIdentifierImpl(Perl5 POD: identifier)('Greek')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('There')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('few')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('defined')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('shortcuts')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('compound')
        PodIdentifierImpl(Perl5 POD: identifier)('form')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('One')
        PodIdentifierImpl(Perl5 POD: identifier)('such')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Word')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('These')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('listed')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('In')
        PodIdentifierImpl(Perl5 POD: identifier)('parsing')
        PodIdentifierImpl(Perl5 POD: identifier)('these')
        PodIdentifierImpl(Perl5 POD: identifier)('constructs')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('always')
        PodIdentifierImpl(Perl5 POD: identifier)('ignores')
        PodIdentifierImpl(Perl5 POD: identifier)('Upper')
        PsiElement(Perl5 POD: symbol)('/')
        PodIdentifierImpl(Perl5 POD: identifier)('lower')
        PodIdentifierImpl(Perl5 POD: identifier)('case')
        PodIdentifierImpl(Perl5 POD: identifier)('differences')
        PodIdentifierImpl(Perl5 POD: identifier)('everywhere')
        PodIdentifierImpl(Perl5 POD: identifier)('within')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiElement(Perl5 POD: {)('{')
        PodIdentifierImpl(Perl5 POD: identifier)('braces')
        PsiElement(Perl5 POD: })('}')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Thus')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Greek')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('means')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('same')
        PodIdentifierImpl(Perl5 POD: identifier)('thing')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('greek')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('But')
        PodIdentifierImpl(Perl5 POD: identifier)('note')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('changing')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('case')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: ")('"')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: ")('"')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('or')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: ")('"')
            PodIdentifierImpl(Perl5 POD: identifier)('P')
            PsiElement(Perl5 POD: ")('"')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('before')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('left')
        PodIdentifierImpl(Perl5 POD: identifier)('brace')
        PodIdentifierImpl(Perl5 POD: identifier)('completely')
        PodIdentifierImpl(Perl5 POD: identifier)('changes')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('meaning')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('construct')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('from')
        PsiElement(Perl5 POD: ")('"')
        PodIdentifierImpl(Perl5 POD: identifier)('match')
        PsiElement(Perl5 POD: ")('"')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ))(')')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PsiElement(Perl5 POD: ")('"')
        PodIdentifierImpl(Perl5 POD: identifier)('doesn')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('t')
        PodIdentifierImpl(Perl5 POD: identifier)('match')
        PsiElement(Perl5 POD: ")('"')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('P')
            PsiElement(Perl5 POD: {)('{')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Casing')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('this')
        PodIdentifierImpl(Perl5 POD: identifier)('document')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('improved')
        PodIdentifierImpl(Perl5 POD: identifier)('legibility')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Also')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('white')
        PodIdentifierImpl(Perl5 POD: identifier)('space')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('hyphens')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('underscores')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('normally')
        PodIdentifierImpl(Perl5 POD: identifier)('ignored')
        PodIdentifierImpl(Perl5 POD: identifier)('everywhere')
        PodIdentifierImpl(Perl5 POD: identifier)('between')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiElement(Perl5 POD: {)('{')
        PodIdentifierImpl(Perl5 POD: identifier)('braces')
        PsiElement(Perl5 POD: })('}')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('hence')
        PodIdentifierImpl(Perl5 POD: identifier)('can')
        PodIdentifierImpl(Perl5 POD: identifier)('be')
        PodIdentifierImpl(Perl5 POD: identifier)('freely')
        PodIdentifierImpl(Perl5 POD: identifier)('added')
        PodIdentifierImpl(Perl5 POD: identifier)('or')
        PodIdentifierImpl(Perl5 POD: identifier)('removed')
        PodIdentifierImpl(Perl5 POD: identifier)('even')
        PodIdentifierImpl(Perl5 POD: identifier)('if')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: /)('/')
            PodIdentifierImpl(Perl5 POD: identifier)('x')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('modifier')
        PodIdentifierImpl(Perl5 POD: identifier)('hasn')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('t')
        PodIdentifierImpl(Perl5 POD: identifier)('been')
        PodIdentifierImpl(Perl5 POD: identifier)('specified')
        PodIdentifierImpl(Perl5 POD: identifier)('on')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expression')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('But')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('below')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PsiElement(Perl5 POD: ')(''')
        PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
          PsiElement(Perl5 POD: B)('B')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('T')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('at')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('beginning')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('an')
        PodIdentifierImpl(Perl5 POD: identifier)('entry')
        PodIdentifierImpl(Perl5 POD: identifier)('means')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('tighter')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('stricter')
        PsiElement(Perl5 POD: ))(')')
        PodIdentifierImpl(Perl5 POD: identifier)('rules')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('used')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('entry')
        PsiElement(Perl5 POD: :)(':')
        PsiElement(Perl5 POD: NL)('\n')
      PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
        PsiElement(Perl5 POD: =over)('=over')
        PsiElement(Perl5 POD: indent_level)('4')
        PsiElement(Perl5 POD: NL)('\n')
        PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
          PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
            PsiElement(Perl5 POD: =over)('=over')
            PsiElement(Perl5 POD: indent_level)('4')
            PsiElement(Perl5 POD: NL)('\n')
            PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
              PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                PsiElement(Perl5 POD: =item)('=item')
                PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
                  PodIdentifierImpl(Perl5 POD: identifier)('Single')
                  PodIdentifierImpl(Perl5 POD: identifier)('form')
                  PsiElement(Perl5 POD: ()('(')
                  PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                    PsiElement(Perl5 POD: C)('C')
                    PsiElement(Perl5 POD: <)('<')
                    PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                      PsiElement(Perl5 POD: \)('\')
                      PodIdentifierImpl(Perl5 POD: identifier)('p')
                      PsiElement(Perl5 POD: {)('{')
                      PodIdentifierImpl(Perl5 POD: identifier)('name')
                      PsiElement(Perl5 POD: })('}')
                    PsiElement(Perl5 POD: >)('>')
                  PsiElement(Perl5 POD: ))(')')
                  PodIdentifierImpl(Perl5 POD: identifier)('tighter')
                  PodIdentifierImpl(Perl5 POD: identifier)('rules')
                  PsiElement(Perl5 POD: :)(':')
                PsiElement(Perl5 POD: NL)('\n')
                PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('White')
                    PodIdentifierImpl(Perl5 POD: identifier)('space')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('hyphens')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('and')
                    PodIdentifierImpl(Perl5 POD: identifier)('underscores')
                    PodIdentifierImpl(Perl5 POD: identifier)('ARE')
                    PodIdentifierImpl(Perl5 POD: identifier)('significant')
                    PodIdentifierImpl(Perl5 POD: identifier)('except')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PsiElement(Perl5 POD: :)(':')
                    PsiElement(Perl5 POD: NL)('\n')
                  PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
                    PsiElement(Perl5 POD: =over)('=over')
                    PsiElement(Perl5 POD: indent_level)('4')
                    PsiElement(Perl5 POD: NL)('\n')
                    PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
                      PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                        PsiElement(Perl5 POD: =item)('=item')
                        PsiElement(Perl5 POD: *)('*')
                        PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
                          PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                            PodIdentifierImpl(Perl5 POD: identifier)('white')
                            PodIdentifierImpl(Perl5 POD: identifier)('space')
                            PodIdentifierImpl(Perl5 POD: identifier)('adjacent')
                            PodIdentifierImpl(Perl5 POD: identifier)('to')
                            PodIdentifierImpl(Perl5 POD: identifier)('a')
                            PodIdentifierImpl(Perl5 POD: identifier)('non')
                            PsiElement(Perl5 POD: symbol)('-')
                            PodIdentifierImpl(Perl5 POD: identifier)('word')
                            PodIdentifierImpl(Perl5 POD: identifier)('character')
                            PsiElement(Perl5 POD: NL)('\n')
                      PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                        PsiElement(Perl5 POD: =item)('=item')
                        PsiElement(Perl5 POD: *)('*')
                        PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
                          PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                            PodIdentifierImpl(Perl5 POD: identifier)('underscores')
                            PodIdentifierImpl(Perl5 POD: identifier)('separating')
                            PodIdentifierImpl(Perl5 POD: identifier)('digits')
                            PodIdentifierImpl(Perl5 POD: identifier)('in')
                            PodIdentifierImpl(Perl5 POD: identifier)('numbers')
                            PsiElement(Perl5 POD: NL)('\n')
                    PsiElement(Perl5 POD: =back)('=back')
                    PsiElement(Perl5 POD: NL)('\n')
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('That')
                    PodIdentifierImpl(Perl5 POD: identifier)('means')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('example')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('you')
                    PodIdentifierImpl(Perl5 POD: identifier)('can')
                    PodIdentifierImpl(Perl5 POD: identifier)('freely')
                    PodIdentifierImpl(Perl5 POD: identifier)('add')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('remove')
                    PodIdentifierImpl(Perl5 POD: identifier)('white')
                    PodIdentifierImpl(Perl5 POD: identifier)('space')
                    PodIdentifierImpl(Perl5 POD: identifier)('adjacent')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PsiElement(Perl5 POD: ()('(')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('within')
                    PsiElement(Perl5 POD: ))(')')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('braces')
                    PodIdentifierImpl(Perl5 POD: identifier)('without')
                    PodIdentifierImpl(Perl5 POD: identifier)('affecting')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('meaning')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
              PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                PsiElement(Perl5 POD: =item)('=item')
                PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
                  PodIdentifierImpl(Perl5 POD: identifier)('Compound')
                  PodIdentifierImpl(Perl5 POD: identifier)('form')
                  PsiElement(Perl5 POD: ()('(')
                  PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                    PsiElement(Perl5 POD: C)('C')
                    PsiElement(Perl5 POD: <)('<')
                    PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                      PsiElement(Perl5 POD: \)('\')
                      PodIdentifierImpl(Perl5 POD: identifier)('p')
                      PsiElement(Perl5 POD: {)('{')
                      PodIdentifierImpl(Perl5 POD: identifier)('name')
                      PsiElement(Perl5 POD: symbol)('=')
                      PodIdentifierImpl(Perl5 POD: identifier)('value')
                      PsiElement(Perl5 POD: })('}')
                    PsiElement(Perl5 POD: >)('>')
                  PodIdentifierImpl(Perl5 POD: identifier)('or')
                  PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                    PsiElement(Perl5 POD: C)('C')
                    PsiElement(Perl5 POD: <)('<')
                    PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                      PsiElement(Perl5 POD: \)('\')
                      PodIdentifierImpl(Perl5 POD: identifier)('p')
                      PsiElement(Perl5 POD: {)('{')
                      PodIdentifierImpl(Perl5 POD: identifier)('name')
                      PsiElement(Perl5 POD: :)(':')
                      PodIdentifierImpl(Perl5 POD: identifier)('value')
                      PsiElement(Perl5 POD: })('}')
                    PsiElement(Perl5 POD: >)('>')
                  PsiElement(Perl5 POD: ))(')')
                  PodIdentifierImpl(Perl5 POD: identifier)('tighter')
                  PodIdentifierImpl(Perl5 POD: identifier)('rules')
                  PsiElement(Perl5 POD: :)(':')
                PsiElement(Perl5 POD: NL)('\n')
                PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('The')
                    PodIdentifierImpl(Perl5 POD: identifier)('tighter')
                    PodIdentifierImpl(Perl5 POD: identifier)('rules')
                    PodIdentifierImpl(Perl5 POD: identifier)('given')
                    PodIdentifierImpl(Perl5 POD: identifier)('above')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('single')
                    PodIdentifierImpl(Perl5 POD: identifier)('form')
                    PodIdentifierImpl(Perl5 POD: identifier)('apply')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('everything')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('right')
                    PodIdentifierImpl(Perl5 POD: identifier)('of')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('colon')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('equals')
                    PsiElement(Perl5 POD: symbol)(';')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('looser')
                    PodIdentifierImpl(Perl5 POD: identifier)('rules')
                    PodIdentifierImpl(Perl5 POD: identifier)('still')
                    PodIdentifierImpl(Perl5 POD: identifier)('apply')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('everything')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('left')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('That')
                    PodIdentifierImpl(Perl5 POD: identifier)('means')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('example')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('you')
                    PodIdentifierImpl(Perl5 POD: identifier)('can')
                    PodIdentifierImpl(Perl5 POD: identifier)('freely')
                    PodIdentifierImpl(Perl5 POD: identifier)('add')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('remove')
                    PodIdentifierImpl(Perl5 POD: identifier)('white')
                    PodIdentifierImpl(Perl5 POD: identifier)('space')
                    PodIdentifierImpl(Perl5 POD: identifier)('adjacent')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PsiElement(Perl5 POD: ()('(')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('within')
                    PsiElement(Perl5 POD: ))(')')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('braces')
                    PodIdentifierImpl(Perl5 POD: identifier)('and')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('colon')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('equal')
                    PodIdentifierImpl(Perl5 POD: identifier)('sign')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
            PsiElement(Perl5 POD: =back)('=back')
            PsiElement(Perl5 POD: NL)('\n')
        PsiElement(Perl5 POD: =back)('=back')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Some')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('considered')
        PodIdentifierImpl(Perl5 POD: identifier)('obsolete')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('but')
        PodIdentifierImpl(Perl5 POD: identifier)('still')
        PodIdentifierImpl(Perl5 POD: identifier)('available')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('There')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('several')
        PodIdentifierImpl(Perl5 POD: identifier)('varieties')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('obsolescence')
        PsiElement(Perl5 POD: :)(':')
        PsiElement(Perl5 POD: NL)('\n')
      PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
        PsiElement(Perl5 POD: =over)('=over')
        PsiElement(Perl5 POD: indent_level)('4')
        PsiElement(Perl5 POD: NL)('\n')
        PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
          PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
            PsiElement(Perl5 POD: =over)('=over')
            PsiElement(Perl5 POD: indent_level)('4')
            PsiElement(Perl5 POD: NL)('\n')
            PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
              PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                PsiElement(Perl5 POD: =item)('=item')
                PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
                  PodIdentifierImpl(Perl5 POD: identifier)('Stabilized')
                PsiElement(Perl5 POD: NL)('\n')
                PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('A')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('may')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('stabilized')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('Such')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PodIdentifierImpl(Perl5 POD: identifier)('determination')
                    PodIdentifierImpl(Perl5 POD: identifier)('does')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('indicate')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('should')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('should')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('used')
                    PsiElement(Perl5 POD: symbol)(';')
                    PodIdentifierImpl(Perl5 POD: identifier)('instead')
                    PodIdentifierImpl(Perl5 POD: identifier)('it')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PodIdentifierImpl(Perl5 POD: identifier)('declaration')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('will')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('maintained')
                    PodIdentifierImpl(Perl5 POD: identifier)('nor')
                    PodIdentifierImpl(Perl5 POD: identifier)('extended')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('newly')
                    PodIdentifierImpl(Perl5 POD: identifier)('encoded')
                    PodIdentifierImpl(Perl5 POD: identifier)('characters')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('Such')
                    PodIdentifierImpl(Perl5 POD: identifier)('properties')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('marked')
                    PodIdentifierImpl(Perl5 POD: identifier)('with')
                    PodIdentifierImpl(Perl5 POD: identifier)('an')
                    PsiElement(Perl5 POD: ')(''')
                    PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                      PsiElement(Perl5 POD: B)('B')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PodIdentifierImpl(Perl5 POD: identifier)('S')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: ')(''')
                    PodIdentifierImpl(Perl5 POD: identifier)('in')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('table')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
              PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                PsiElement(Perl5 POD: =item)('=item')
                PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
                  PodIdentifierImpl(Perl5 POD: identifier)('Deprecated')
                PsiElement(Perl5 POD: NL)('\n')
                PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('A')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('may')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('deprecated')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('perhaps')
                    PodIdentifierImpl(Perl5 POD: identifier)('because')
                    PodIdentifierImpl(Perl5 POD: identifier)('its')
                    PodIdentifierImpl(Perl5 POD: identifier)('original')
                    PodIdentifierImpl(Perl5 POD: identifier)('intent')
                    PodIdentifierImpl(Perl5 POD: identifier)('has')
                    PodIdentifierImpl(Perl5 POD: identifier)('been')
                    PodIdentifierImpl(Perl5 POD: identifier)('replaced')
                    PodIdentifierImpl(Perl5 POD: identifier)('by')
                    PodIdentifierImpl(Perl5 POD: identifier)('another')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('because')
                    PodIdentifierImpl(Perl5 POD: identifier)('its')
                    PodIdentifierImpl(Perl5 POD: identifier)('specification')
                    PodIdentifierImpl(Perl5 POD: identifier)('was')
                    PodIdentifierImpl(Perl5 POD: identifier)('somehow')
                    PodIdentifierImpl(Perl5 POD: identifier)('defective')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('This')
                    PodIdentifierImpl(Perl5 POD: identifier)('means')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('its')
                    PodIdentifierImpl(Perl5 POD: identifier)('use')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('strongly')
                    PodIdentifierImpl(Perl5 POD: identifier)('discouraged')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('so')
                    PodIdentifierImpl(Perl5 POD: identifier)('much')
                    PodIdentifierImpl(Perl5 POD: identifier)('so')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PodIdentifierImpl(Perl5 POD: identifier)('warning')
                    PodIdentifierImpl(Perl5 POD: identifier)('will')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('issued')
                    PodIdentifierImpl(Perl5 POD: identifier)('if')
                    PodIdentifierImpl(Perl5 POD: identifier)('used')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('unless')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('regular')
                    PodIdentifierImpl(Perl5 POD: identifier)('expression')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('in')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('scope')
                    PodIdentifierImpl(Perl5 POD: identifier)('of')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiPodFormatNbspImpl(Perl5 POD: POD_FORMAT_NBSP)
                          PsiElement(Perl5 POD: S)('S')
                          PsiElement(Perl5 POD: <)('<')
                          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                            PodIdentifierImpl(Perl5 POD: identifier)('no')
                            PodIdentifierImpl(Perl5 POD: identifier)('warnings')
                            PsiElement(Perl5 POD: ')(''')
                            PodIdentifierImpl(Perl5 POD: identifier)('deprecated')
                            PsiElement(Perl5 POD: ')(''')
                          PsiElement(Perl5 POD: >)('>')
                      PsiElement(Perl5 POD: >)('>')
                    PodIdentifierImpl(Perl5 POD: identifier)('statement')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('A')
                    PsiElement(Perl5 POD: ')(''')
                    PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                      PsiElement(Perl5 POD: B)('B')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PodIdentifierImpl(Perl5 POD: identifier)('D')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: ')(''')
                    PodIdentifierImpl(Perl5 POD: identifier)('flags')
                    PodIdentifierImpl(Perl5 POD: identifier)('each')
                    PodIdentifierImpl(Perl5 POD: identifier)('such')
                    PodIdentifierImpl(Perl5 POD: identifier)('entry')
                    PodIdentifierImpl(Perl5 POD: identifier)('in')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('table')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('and')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('entry')
                    PodIdentifierImpl(Perl5 POD: identifier)('there')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('longest')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('most')
                    PodIdentifierImpl(Perl5 POD: identifier)('descriptive')
                    PodIdentifierImpl(Perl5 POD: identifier)('version')
                    PodIdentifierImpl(Perl5 POD: identifier)('of')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('will')
                    PodIdentifierImpl(Perl5 POD: identifier)('give')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('reason')
                    PodIdentifierImpl(Perl5 POD: identifier)('it')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('deprecated')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('and')
                    PodIdentifierImpl(Perl5 POD: identifier)('perhaps')
                    PodIdentifierImpl(Perl5 POD: identifier)('advice')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('Perl')
                    PodIdentifierImpl(Perl5 POD: identifier)('may')
                    PodIdentifierImpl(Perl5 POD: identifier)('issue')
                    PodIdentifierImpl(Perl5 POD: identifier)('such')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PodIdentifierImpl(Perl5 POD: identifier)('warning')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('even')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('properties')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('aren')
                    PsiElement(Perl5 POD: ')(''')
                    PodIdentifierImpl(Perl5 POD: identifier)('t')
                    PodIdentifierImpl(Perl5 POD: identifier)('officially')
                    PodIdentifierImpl(Perl5 POD: identifier)('deprecated')
                    PodIdentifierImpl(Perl5 POD: identifier)('by')
                    PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('when')
                    PodIdentifierImpl(Perl5 POD: identifier)('there')
                    PodIdentifierImpl(Perl5 POD: identifier)('used')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('characters')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('code')
                    PodIdentifierImpl(Perl5 POD: identifier)('points')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('were')
                    PodIdentifierImpl(Perl5 POD: identifier)('matched')
                    PodIdentifierImpl(Perl5 POD: identifier)('by')
                    PodIdentifierImpl(Perl5 POD: identifier)('them')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('no')
                    PodIdentifierImpl(Perl5 POD: identifier)('longer')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('This')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('warn')
                    PodIdentifierImpl(Perl5 POD: identifier)('you')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('your')
                    PodIdentifierImpl(Perl5 POD: identifier)('program')
                    PodIdentifierImpl(Perl5 POD: identifier)('may')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('work')
                    PodIdentifierImpl(Perl5 POD: identifier)('like')
                    PodIdentifierImpl(Perl5 POD: identifier)('it')
                    PodIdentifierImpl(Perl5 POD: identifier)('did')
                    PodIdentifierImpl(Perl5 POD: identifier)('on')
                    PodIdentifierImpl(Perl5 POD: identifier)('earlier')
                    PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                    PodIdentifierImpl(Perl5 POD: identifier)('releases')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('A')
                    PodIdentifierImpl(Perl5 POD: identifier)('deprecated')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('may')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('made')
                    PodIdentifierImpl(Perl5 POD: identifier)('unavailable')
                    PodIdentifierImpl(Perl5 POD: identifier)('in')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PodIdentifierImpl(Perl5 POD: identifier)('future')
                    PodIdentifierImpl(Perl5 POD: identifier)('Perl')
                    PodIdentifierImpl(Perl5 POD: identifier)('version')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('so')
                    PodIdentifierImpl(Perl5 POD: identifier)('it')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('best')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('move')
                    PodIdentifierImpl(Perl5 POD: identifier)('away')
                    PodIdentifierImpl(Perl5 POD: identifier)('from')
                    PodIdentifierImpl(Perl5 POD: identifier)('them')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('A')
                    PodIdentifierImpl(Perl5 POD: identifier)('deprecated')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('may')
                    PodIdentifierImpl(Perl5 POD: identifier)('also')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('stabilized')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('this')
                    PodIdentifierImpl(Perl5 POD: identifier)('fact')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('shown')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
              PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                PsiElement(Perl5 POD: =item)('=item')
                PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
                  PodIdentifierImpl(Perl5 POD: identifier)('Obsolete')
                PsiElement(Perl5 POD: NL)('\n')
                PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('Properties')
                    PodIdentifierImpl(Perl5 POD: identifier)('marked')
                    PodIdentifierImpl(Perl5 POD: identifier)('with')
                    PodIdentifierImpl(Perl5 POD: identifier)('an')
                    PsiElement(Perl5 POD: ')(''')
                    PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                      PsiElement(Perl5 POD: B)('B')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PodIdentifierImpl(Perl5 POD: identifier)('O')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: ')(''')
                    PodIdentifierImpl(Perl5 POD: identifier)('in')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('table')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('considered')
                    PsiElement(Perl5 POD: ()('(')
                    PodIdentifierImpl(Perl5 POD: identifier)('plain')
                    PsiElement(Perl5 POD: ))(')')
                    PodIdentifierImpl(Perl5 POD: identifier)('obsolete')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('Generally')
                    PodIdentifierImpl(Perl5 POD: identifier)('this')
                    PodIdentifierImpl(Perl5 POD: identifier)('designation')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('given')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('properties')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                    PodIdentifierImpl(Perl5 POD: identifier)('once')
                    PodIdentifierImpl(Perl5 POD: identifier)('used')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('internal')
                    PodIdentifierImpl(Perl5 POD: identifier)('purposes')
                    PsiElement(Perl5 POD: ()('(')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('any')
                    PodIdentifierImpl(Perl5 POD: identifier)('longer')
                    PsiElement(Perl5 POD: ))(')')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
              PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                PsiElement(Perl5 POD: =item)('=item')
                PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
                  PodIdentifierImpl(Perl5 POD: identifier)('Discouraged')
                PsiElement(Perl5 POD: NL)('\n')
                PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('This')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('actually')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                    PsiElement(Perl5 POD: symbol)('-')
                    PodIdentifierImpl(Perl5 POD: identifier)('specified')
                    PodIdentifierImpl(Perl5 POD: identifier)('obsolescence')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('applies')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('certain')
                    PodIdentifierImpl(Perl5 POD: identifier)('Perl')
                    PodIdentifierImpl(Perl5 POD: identifier)('extensions')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('present')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('backwards')
                    PodIdentifierImpl(Perl5 POD: identifier)('compatibility')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('discouraged')
                    PodIdentifierImpl(Perl5 POD: identifier)('from')
                    PodIdentifierImpl(Perl5 POD: identifier)('being')
                    PodIdentifierImpl(Perl5 POD: identifier)('used')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('These')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('obsolete')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('their')
                    PodIdentifierImpl(Perl5 POD: identifier)('meanings')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('stable')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('Future')
                    PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                    PodIdentifierImpl(Perl5 POD: identifier)('versions')
                    PodIdentifierImpl(Perl5 POD: identifier)('could')
                    PodIdentifierImpl(Perl5 POD: identifier)('force')
                    PodIdentifierImpl(Perl5 POD: identifier)('any')
                    PodIdentifierImpl(Perl5 POD: identifier)('of')
                    PodIdentifierImpl(Perl5 POD: identifier)('these')
                    PodIdentifierImpl(Perl5 POD: identifier)('extensions')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('removed')
                    PodIdentifierImpl(Perl5 POD: identifier)('without')
                    PodIdentifierImpl(Perl5 POD: identifier)('warning')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('replaced')
                    PodIdentifierImpl(Perl5 POD: identifier)('by')
                    PodIdentifierImpl(Perl5 POD: identifier)('another')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('with')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('same')
                    PodIdentifierImpl(Perl5 POD: identifier)('name')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('means')
                    PodIdentifierImpl(Perl5 POD: identifier)('something')
                    PodIdentifierImpl(Perl5 POD: identifier)('different')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('An')
                    PsiElement(Perl5 POD: ')(''')
                    PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                      PsiElement(Perl5 POD: B)('B')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PodIdentifierImpl(Perl5 POD: identifier)('X')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: ')(''')
                    PodIdentifierImpl(Perl5 POD: identifier)('flags')
                    PodIdentifierImpl(Perl5 POD: identifier)('each')
                    PodIdentifierImpl(Perl5 POD: identifier)('such')
                    PodIdentifierImpl(Perl5 POD: identifier)('entry')
                    PodIdentifierImpl(Perl5 POD: identifier)('in')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('table')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('Use')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('equivalent')
                    PodIdentifierImpl(Perl5 POD: identifier)('shown')
                    PodIdentifierImpl(Perl5 POD: identifier)('instead')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
                  PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                    PodIdentifierImpl(Perl5 POD: identifier)('In')
                    PodIdentifierImpl(Perl5 POD: identifier)('particular')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('matches')
                    PodIdentifierImpl(Perl5 POD: identifier)('in')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('Block')
                    PodIdentifierImpl(Perl5 POD: identifier)('property')
                    PodIdentifierImpl(Perl5 POD: identifier)('have')
                    PodIdentifierImpl(Perl5 POD: identifier)('single')
                    PodIdentifierImpl(Perl5 POD: identifier)('forms')
                    PodIdentifierImpl(Perl5 POD: identifier)('defined')
                    PodIdentifierImpl(Perl5 POD: identifier)('by')
                    PodIdentifierImpl(Perl5 POD: identifier)('Perl')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('begin')
                    PodIdentifierImpl(Perl5 POD: identifier)('with')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiElement(Perl5 POD: ")('"')
                        PodIdentifierImpl(Perl5 POD: identifier)('In_')
                        PsiElement(Perl5 POD: ")('"')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: symbol)(',')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiElement(Perl5 POD: ")('"')
                        PodIdentifierImpl(Perl5 POD: identifier)('Is_')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('even')
                    PodIdentifierImpl(Perl5 POD: identifier)('with')
                    PodIdentifierImpl(Perl5 POD: identifier)('no')
                    PodIdentifierImpl(Perl5 POD: identifier)('prefix')
                    PodIdentifierImpl(Perl5 POD: identifier)('at')
                    PodIdentifierImpl(Perl5 POD: identifier)('all')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('Like')
                    PodIdentifierImpl(Perl5 POD: identifier)('all')
                    PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                      PsiElement(Perl5 POD: B)('B')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PodIdentifierImpl(Perl5 POD: identifier)('DISCOURAGED')
                      PsiElement(Perl5 POD: >)('>')
                    PodIdentifierImpl(Perl5 POD: identifier)('forms')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('these')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('stable')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('For')
                    PodIdentifierImpl(Perl5 POD: identifier)('example')
                    PsiElement(Perl5 POD: symbol)(',')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiElement(Perl5 POD: \)('\')
                        PodIdentifierImpl(Perl5 POD: identifier)('p')
                        PsiElement(Perl5 POD: {)('{')
                        PodIdentifierImpl(Perl5 POD: identifier)('Block')
                        PsiElement(Perl5 POD: symbol)('=')
                        PodIdentifierImpl(Perl5 POD: identifier)('Deseret')
                        PsiElement(Perl5 POD: })('}')
                      PsiElement(Perl5 POD: >)('>')
                    PodIdentifierImpl(Perl5 POD: identifier)('can')
                    PodIdentifierImpl(Perl5 POD: identifier)('currently')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('written')
                    PodIdentifierImpl(Perl5 POD: identifier)('as')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiElement(Perl5 POD: \)('\')
                        PodIdentifierImpl(Perl5 POD: identifier)('p')
                        PsiElement(Perl5 POD: {)('{')
                        PodIdentifierImpl(Perl5 POD: identifier)('In_Deseret')
                        PsiElement(Perl5 POD: })('}')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: symbol)(',')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiElement(Perl5 POD: \)('\')
                        PodIdentifierImpl(Perl5 POD: identifier)('p')
                        PsiElement(Perl5 POD: {)('{')
                        PodIdentifierImpl(Perl5 POD: identifier)('Is_Deseret')
                        PsiElement(Perl5 POD: })('}')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiElement(Perl5 POD: \)('\')
                        PodIdentifierImpl(Perl5 POD: identifier)('p')
                        PsiElement(Perl5 POD: {)('{')
                        PodIdentifierImpl(Perl5 POD: identifier)('Deseret')
                        PsiElement(Perl5 POD: })('}')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('But')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PodIdentifierImpl(Perl5 POD: identifier)('new')
                    PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                    PodIdentifierImpl(Perl5 POD: identifier)('version')
                    PodIdentifierImpl(Perl5 POD: identifier)('may')
                    PodIdentifierImpl(Perl5 POD: identifier)('come')
                    PodIdentifierImpl(Perl5 POD: identifier)('along')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('would')
                    PodIdentifierImpl(Perl5 POD: identifier)('force')
                    PodIdentifierImpl(Perl5 POD: identifier)('Perl')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('change')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('meaning')
                    PodIdentifierImpl(Perl5 POD: identifier)('of')
                    PodIdentifierImpl(Perl5 POD: identifier)('one')
                    PodIdentifierImpl(Perl5 POD: identifier)('or')
                    PodIdentifierImpl(Perl5 POD: identifier)('more')
                    PodIdentifierImpl(Perl5 POD: identifier)('of')
                    PodIdentifierImpl(Perl5 POD: identifier)('these')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('and')
                    PodIdentifierImpl(Perl5 POD: identifier)('your')
                    PodIdentifierImpl(Perl5 POD: identifier)('program')
                    PodIdentifierImpl(Perl5 POD: identifier)('would')
                    PodIdentifierImpl(Perl5 POD: identifier)('no')
                    PodIdentifierImpl(Perl5 POD: identifier)('longer')
                    PodIdentifierImpl(Perl5 POD: identifier)('be')
                    PodIdentifierImpl(Perl5 POD: identifier)('correct')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('Currently')
                    PodIdentifierImpl(Perl5 POD: identifier)('there')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('no')
                    PodIdentifierImpl(Perl5 POD: identifier)('such')
                    PodIdentifierImpl(Perl5 POD: identifier)('conflicts')
                    PodIdentifierImpl(Perl5 POD: identifier)('with')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('form')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('begins')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiElement(Perl5 POD: ")('"')
                        PodIdentifierImpl(Perl5 POD: identifier)('In_')
                        PsiElement(Perl5 POD: ")('"')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('but')
                    PodIdentifierImpl(Perl5 POD: identifier)('there')
                    PodIdentifierImpl(Perl5 POD: identifier)('are')
                    PodIdentifierImpl(Perl5 POD: identifier)('many')
                    PodIdentifierImpl(Perl5 POD: identifier)('with')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('other')
                    PodIdentifierImpl(Perl5 POD: identifier)('two')
                    PodIdentifierImpl(Perl5 POD: identifier)('shortcuts')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('and')
                    PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                    PodIdentifierImpl(Perl5 POD: identifier)('continues')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('define')
                    PodIdentifierImpl(Perl5 POD: identifier)('new')
                    PodIdentifierImpl(Perl5 POD: identifier)('properties')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('begin')
                    PodIdentifierImpl(Perl5 POD: identifier)('with')
                    PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
                      PsiElement(Perl5 POD: C)('C')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiElement(Perl5 POD: ")('"')
                        PodIdentifierImpl(Perl5 POD: identifier)('In')
                        PsiElement(Perl5 POD: ")('"')
                      PsiElement(Perl5 POD: >)('>')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('so')
                    PodIdentifierImpl(Perl5 POD: identifier)('it')
                    PsiElement(Perl5 POD: ')(''')
                    PodIdentifierImpl(Perl5 POD: identifier)('s')
                    PodIdentifierImpl(Perl5 POD: identifier)('quite')
                    PodIdentifierImpl(Perl5 POD: identifier)('possible')
                    PodIdentifierImpl(Perl5 POD: identifier)('that')
                    PodIdentifierImpl(Perl5 POD: identifier)('a')
                    PodIdentifierImpl(Perl5 POD: identifier)('conflict')
                    PodIdentifierImpl(Perl5 POD: identifier)('will')
                    PodIdentifierImpl(Perl5 POD: identifier)('occur')
                    PodIdentifierImpl(Perl5 POD: identifier)('in')
                    PodIdentifierImpl(Perl5 POD: identifier)('the')
                    PodIdentifierImpl(Perl5 POD: identifier)('future')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('The')
                    PodIdentifierImpl(Perl5 POD: identifier)('compound')
                    PodIdentifierImpl(Perl5 POD: identifier)('form')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('guaranteed')
                    PodIdentifierImpl(Perl5 POD: identifier)('to')
                    PodIdentifierImpl(Perl5 POD: identifier)('not')
                    PodIdentifierImpl(Perl5 POD: identifier)('become')
                    PodIdentifierImpl(Perl5 POD: identifier)('obsolete')
                    PsiElement(Perl5 POD: symbol)(',')
                    PodIdentifierImpl(Perl5 POD: identifier)('and')
                    PodIdentifierImpl(Perl5 POD: identifier)('its')
                    PodIdentifierImpl(Perl5 POD: identifier)('meaning')
                    PodIdentifierImpl(Perl5 POD: identifier)('is')
                    PodIdentifierImpl(Perl5 POD: identifier)('clearer')
                    PodIdentifierImpl(Perl5 POD: identifier)('anyway')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('See')
                    PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
                      PsiElement(Perl5 POD: L)('L')
                      PsiElement(Perl5 POD: <)('<')
                      PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                        PsiLinkNameImpl(Perl5 POD: LINK_NAME)
                          PodIdentifierImpl(Perl5 POD: identifier)('perlunicode')
                        PsiElement(Perl5 POD: /)('/')
                        PsiElement(Perl5 POD: ")('"')
                        PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
                          PodIdentifierImpl(Perl5 POD: identifier)('Blocks')
                        PsiElement(Perl5 POD: ")('"')
                      PsiElement(Perl5 POD: >)('>')
                    PodIdentifierImpl(Perl5 POD: identifier)('for')
                    PodIdentifierImpl(Perl5 POD: identifier)('more')
                    PodIdentifierImpl(Perl5 POD: identifier)('information')
                    PodIdentifierImpl(Perl5 POD: identifier)('about')
                    PodIdentifierImpl(Perl5 POD: identifier)('this')
                    PsiElement(Perl5 POD: number)('.')
                    PsiElement(Perl5 POD: NL)('\n')
            PsiElement(Perl5 POD: =back)('=back')
            PsiElement(Perl5 POD: NL)('\n')
        PsiElement(Perl5 POD: =back)('=back')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('below')
        PodIdentifierImpl(Perl5 POD: identifier)('has')
        PodIdentifierImpl(Perl5 POD: identifier)('two')
        PodIdentifierImpl(Perl5 POD: identifier)('columns')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('left')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('contains')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('constructs')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('look')
        PodIdentifierImpl(Perl5 POD: identifier)('up')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('possibly')
        PodIdentifierImpl(Perl5 POD: identifier)('preceded')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('flags')
        PodIdentifierImpl(Perl5 POD: identifier)('mentioned')
        PodIdentifierImpl(Perl5 POD: identifier)('above')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('right')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('contains')
        PodIdentifierImpl(Perl5 POD: identifier)('information')
        PodIdentifierImpl(Perl5 POD: identifier)('about')
        PodIdentifierImpl(Perl5 POD: identifier)('them')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('like')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('description')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('or')
        PodIdentifierImpl(Perl5 POD: identifier)('synonyms')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('shows')
        PodIdentifierImpl(Perl5 POD: identifier)('both')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('compound')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('each')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('has')
        PodIdentifierImpl(Perl5 POD: identifier)('them')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('If')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('left')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('short')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('right')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('will')
        PodIdentifierImpl(Perl5 POD: identifier)('give')
        PodIdentifierImpl(Perl5 POD: identifier)('its')
        PodIdentifierImpl(Perl5 POD: identifier)('longer')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('more')
        PodIdentifierImpl(Perl5 POD: identifier)('descriptive')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('if')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('left')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('longest')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('right')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('will')
        PodIdentifierImpl(Perl5 POD: identifier)('show')
        PodIdentifierImpl(Perl5 POD: identifier)('any')
        PodIdentifierImpl(Perl5 POD: identifier)('equivalent')
        PodIdentifierImpl(Perl5 POD: identifier)('shortest')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('both')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('compound')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('if')
        PodIdentifierImpl(Perl5 POD: identifier)('applicable')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('If')
        PodIdentifierImpl(Perl5 POD: identifier)('braces')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('needed')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('specify')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('e')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('g')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: symbol)(',')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('pL')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('left')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('contains')
        PodIdentifierImpl(Perl5 POD: identifier)('both')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('without')
        PodIdentifierImpl(Perl5 POD: identifier)('braces')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('right')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('will')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('caution')
        PodIdentifierImpl(Perl5 POD: identifier)('you')
        PodIdentifierImpl(Perl5 POD: identifier)('if')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('means')
        PodIdentifierImpl(Perl5 POD: identifier)('something')
        PodIdentifierImpl(Perl5 POD: identifier)('different')
        PodIdentifierImpl(Perl5 POD: identifier)('than')
        PodIdentifierImpl(Perl5 POD: identifier)('what')
        PodIdentifierImpl(Perl5 POD: identifier)('might')
        PodIdentifierImpl(Perl5 POD: identifier)('normally')
        PodIdentifierImpl(Perl5 POD: identifier)('be')
        PodIdentifierImpl(Perl5 POD: identifier)('expected')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('All')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('extensions')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('few')
        PodIdentifierImpl(Perl5 POD: identifier)('compound')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('well')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('noted')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('such')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Numbers')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('parentheses')
        PsiElement(Perl5 POD: ))(')')
        PodIdentifierImpl(Perl5 POD: identifier)('indicate')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('total')
        PodIdentifierImpl(Perl5 POD: identifier)('number')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('points')
        PodIdentifierImpl(Perl5 POD: identifier)('matched')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('For')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('entries')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('give')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('longest')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('most')
        PodIdentifierImpl(Perl5 POD: identifier)('descriptive')
        PodIdentifierImpl(Perl5 POD: identifier)('version')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('count')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('followed')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('list')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('some')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('points')
        PodIdentifierImpl(Perl5 POD: identifier)('matched')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('it')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('list')
        PodIdentifierImpl(Perl5 POD: identifier)('includes')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('matched')
        PodIdentifierImpl(Perl5 POD: identifier)('characters')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiElement(Perl5 POD: number)('0')
        PsiElement(Perl5 POD: symbol)('-')
        PsiElement(Perl5 POD: number)('255')
        PodIdentifierImpl(Perl5 POD: identifier)('range')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('enclosed')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('familiar')
        PsiElement(Perl5 POD: [)('[')
        PodIdentifierImpl(Perl5 POD: identifier)('brackets')
        PsiElement(Perl5 POD: ])(']')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('same')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expression')
        PodIdentifierImpl(Perl5 POD: identifier)('bracketed')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('class')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Following')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('next')
        PodIdentifierImpl(Perl5 POD: identifier)('few')
        PodIdentifierImpl(Perl5 POD: identifier)('higher')
        PodIdentifierImpl(Perl5 POD: identifier)('matching')
        PodIdentifierImpl(Perl5 POD: identifier)('ranges')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('given')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('To')
        PodIdentifierImpl(Perl5 POD: identifier)('avoid')
        PodIdentifierImpl(Perl5 POD: identifier)('visual')
        PodIdentifierImpl(Perl5 POD: identifier)('ambiguity')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('SPACE')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('represented')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('x20')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('For')
        PodIdentifierImpl(Perl5 POD: identifier)('emphasis')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('those')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('match')
        PodIdentifierImpl(Perl5 POD: identifier)('no')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('points')
        PodIdentifierImpl(Perl5 POD: identifier)('at')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('listed')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('well')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('separate')
        PodIdentifierImpl(Perl5 POD: identifier)('section')
        PodIdentifierImpl(Perl5 POD: identifier)('following')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Most')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('match')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('same')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('points')
        PodIdentifierImpl(Perl5 POD: identifier)('regardless')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('whether')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: ")('"')
            PsiElement(Perl5 POD: /)('/')
            PodIdentifierImpl(Perl5 POD: identifier)('i')
            PsiElement(Perl5 POD: ")('"')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('case')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('insensitive')
        PodIdentifierImpl(Perl5 POD: identifier)('matching')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('specified')
        PodIdentifierImpl(Perl5 POD: identifier)('or')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('But')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('few')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('affected')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('These')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('shown')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('notation')
        PsiPodFormatNbspImpl(Perl5 POD: POD_FORMAT_NBSP)
          PsiElement(Perl5 POD: S)('S')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
              PsiElement(Perl5 POD: C)('C')
              PsiElement(Perl5 POD: <)('<')
              PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                PsiElement(Perl5 POD: ()('(')
                PsiElement(Perl5 POD: /)('/')
                PodIdentifierImpl(Perl5 POD: identifier)('i')
                PsiElement(Perl5 POD: symbol)('=')
                PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                  PsiElement(Perl5 POD: I)('I')
                  PsiElement(Perl5 POD: <)('<')
                  PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                    PodIdentifierImpl(Perl5 POD: identifier)('other_property')
                  PsiElement(Perl5 POD: >)('>')
                PsiElement(Perl5 POD: ))(')')
              PsiElement(Perl5 POD: >)('>')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('second')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Under')
        PodIdentifierImpl(Perl5 POD: identifier)('case')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('insensitive')
        PodIdentifierImpl(Perl5 POD: identifier)('matching')
        PodIdentifierImpl(Perl5 POD: identifier)('they')
        PodIdentifierImpl(Perl5 POD: identifier)('match')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('same')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('pode')
        PodIdentifierImpl(Perl5 POD: identifier)('points')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
          PsiElement(Perl5 POD: I)('I')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('other_property')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('There')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('no')
        PodIdentifierImpl(Perl5 POD: identifier)('description')
        PodIdentifierImpl(Perl5 POD: identifier)('given')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('most')
        PodIdentifierImpl(Perl5 POD: identifier)('non')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('defined')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('See')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkUrlImpl(Perl5 POD: LINK_URL)
              PodIdentifierImpl(Perl5 POD: identifier)('http')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: /)('/')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('www')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('unicode')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('org')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('reports')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('tr44')
              PsiElement(Perl5 POD: /)('/')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('For')
        PodIdentifierImpl(Perl5 POD: identifier)('compactness')
        PsiElement(Perl5 POD: symbol)(',')
        PsiElement(Perl5 POD: ')(''')
        PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
          PsiElement(Perl5 POD: B)('B')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: *)('*')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('used')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('wildcard')
        PodIdentifierImpl(Perl5 POD: identifier)('instead')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('showing')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('possible')
        PodIdentifierImpl(Perl5 POD: identifier)('combinations')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('For')
        PodIdentifierImpl(Perl5 POD: identifier)('example')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('entries')
        PodIdentifierImpl(Perl5 POD: identifier)('like')
        PsiElement(Perl5 POD: :)(':')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodVerbatimParagraphImpl(Perl5 POD: POD_VERBATIM_PARAGRAPH)
        PsiElement(Perl5 POD: code)(' \p{Gc: *}                                  \p{General_Category: *}\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('mean')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('Gc')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('synonym')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('General_Category')
        PsiElement(Perl5 POD: ')(''')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('anything')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('valid')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('latter')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('valid')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('former')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Similarly')
        PsiElement(Perl5 POD: symbol)(',')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodVerbatimParagraphImpl(Perl5 POD: POD_VERBATIM_PARAGRAPH)
        PsiElement(Perl5 POD: code)(' \p{Is_*}                                   \p{*}\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('means')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('if')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('only')
        PodIdentifierImpl(Perl5 POD: identifier)('if')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('example')
        PsiElement(Perl5 POD: symbol)(',')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Foo')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('exists')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('then')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Is_Foo')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('IsFoo')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('valid')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('mean')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('same')
        PodIdentifierImpl(Perl5 POD: identifier)('thing')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('And')
        PodIdentifierImpl(Perl5 POD: identifier)('similarly')
        PsiElement(Perl5 POD: symbol)(',')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Foo')
            PsiElement(Perl5 POD: symbol)('=')
            PodIdentifierImpl(Perl5 POD: identifier)('Bar')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('means')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('same')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('Is_Foo')
            PsiElement(Perl5 POD: symbol)('=')
            PodIdentifierImpl(Perl5 POD: identifier)('Bar')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('IsFoo')
            PsiElement(Perl5 POD: symbol)('=')
            PodIdentifierImpl(Perl5 POD: identifier)('Bar')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ")('"')
        PsiElement(Perl5 POD: *)('*')
        PsiElement(Perl5 POD: ")('"')
        PodIdentifierImpl(Perl5 POD: identifier)('here')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('restricted')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('something')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('beginning')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('an')
        PodIdentifierImpl(Perl5 POD: identifier)('underscore')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Also')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('binary')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: symbol)(',')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('Yes')
        PsiElement(Perl5 POD: ')(''')
        PsiElement(Perl5 POD: symbol)(',')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('T')
        PsiElement(Perl5 POD: ')(''')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('True')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('synonyms')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('Y')
        PsiElement(Perl5 POD: ')(''')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('And')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('No')
        PsiElement(Perl5 POD: ')(''')
        PsiElement(Perl5 POD: symbol)(',')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('F')
        PsiElement(Perl5 POD: ')(''')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('False')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('synonyms')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('N')
        PsiElement(Perl5 POD: ')(''')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('shows')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('Y')
        PsiElement(Perl5 POD: *)('*')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('N')
        PsiElement(Perl5 POD: *)('*')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('indicate')
        PodIdentifierImpl(Perl5 POD: identifier)('this')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('doesn')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('t')
        PodIdentifierImpl(Perl5 POD: identifier)('have')
        PodIdentifierImpl(Perl5 POD: identifier)('separate')
        PodIdentifierImpl(Perl5 POD: identifier)('entries')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('other')
        PodIdentifierImpl(Perl5 POD: identifier)('possibilities')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Note')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('which')
        PodIdentifierImpl(Perl5 POD: identifier)('have')
        PodIdentifierImpl(Perl5 POD: identifier)('values')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('Yes')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('No')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('binary')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('they')
        PodIdentifierImpl(Perl5 POD: identifier)('have')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('their')
        PodIdentifierImpl(Perl5 POD: identifier)('values')
        PodIdentifierImpl(Perl5 POD: identifier)('spelled')
        PodIdentifierImpl(Perl5 POD: identifier)('out')
        PodIdentifierImpl(Perl5 POD: identifier)('without')
        PodIdentifierImpl(Perl5 POD: identifier)('using')
        PodIdentifierImpl(Perl5 POD: identifier)('this')
        PodIdentifierImpl(Perl5 POD: identifier)('wild')
        PodIdentifierImpl(Perl5 POD: identifier)('card')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('NOT')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('clause')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('their')
        PodIdentifierImpl(Perl5 POD: identifier)('description')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('highlights')
        PodIdentifierImpl(Perl5 POD: identifier)('their')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('being')
        PodIdentifierImpl(Perl5 POD: identifier)('binary')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('These')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('require')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('compound')
        PodIdentifierImpl(Perl5 POD: identifier)('form')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('match')
        PodIdentifierImpl(Perl5 POD: identifier)('them')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('whereas')
        PodIdentifierImpl(Perl5 POD: identifier)('true')
        PodIdentifierImpl(Perl5 POD: identifier)('binary')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('have')
        PodIdentifierImpl(Perl5 POD: identifier)('both')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('compound')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('available')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Note')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('non')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('essential')
        PodIdentifierImpl(Perl5 POD: identifier)('underscores')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('removed')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('display')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('short')
        PodIdentifierImpl(Perl5 POD: identifier)('names')
        PodIdentifierImpl(Perl5 POD: identifier)('below')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
          PsiElement(Perl5 POD: B)('B')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('Legend')
            PodIdentifierImpl(Perl5 POD: identifier)('summary')
            PsiElement(Perl5 POD: :)(':')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: NL)('\n')
      PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
        PsiElement(Perl5 POD: =over)('=over')
        PsiElement(Perl5 POD: indent_level)('4')
        PsiElement(Perl5 POD: NL)('\n')
        PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatNullImpl(Perl5 POD: POD_FORMAT_NULL)
                PsiElement(Perl5 POD: Z)('Z')
                PsiElement(Perl5 POD: <)('<')
                PsiElement(Perl5 POD: >)('>')
              PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                PsiElement(Perl5 POD: B)('B')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PsiElement(Perl5 POD: *)('*')
                PsiElement(Perl5 POD: >)('>')
              PodIdentifierImpl(Perl5 POD: identifier)('is')
              PodIdentifierImpl(Perl5 POD: identifier)('a')
              PodIdentifierImpl(Perl5 POD: identifier)('wild')
              PsiElement(Perl5 POD: symbol)('-')
              PodIdentifierImpl(Perl5 POD: identifier)('card')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                PsiElement(Perl5 POD: B)('B')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PsiElement(Perl5 POD: ()('(')
                  PsiElement(Perl5 POD: \)('\')
                  PodIdentifierImpl(Perl5 POD: identifier)('d')
                  PsiElement(Perl5 POD: symbol)('+')
                  PsiElement(Perl5 POD: ))(')')
                PsiElement(Perl5 POD: >)('>')
              PodIdentifierImpl(Perl5 POD: identifier)('in')
              PodIdentifierImpl(Perl5 POD: identifier)('the')
              PodIdentifierImpl(Perl5 POD: identifier)('info')
              PodIdentifierImpl(Perl5 POD: identifier)('column')
              PodIdentifierImpl(Perl5 POD: identifier)('gives')
              PodIdentifierImpl(Perl5 POD: identifier)('the')
              PodIdentifierImpl(Perl5 POD: identifier)('number')
              PodIdentifierImpl(Perl5 POD: identifier)('of')
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PodIdentifierImpl(Perl5 POD: identifier)('code')
              PodIdentifierImpl(Perl5 POD: identifier)('points')
              PodIdentifierImpl(Perl5 POD: identifier)('matched')
              PodIdentifierImpl(Perl5 POD: identifier)('by')
              PodIdentifierImpl(Perl5 POD: identifier)('this')
              PodIdentifierImpl(Perl5 POD: identifier)('property')
              PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                PsiElement(Perl5 POD: B)('B')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('D')
                PsiElement(Perl5 POD: >)('>')
              PodIdentifierImpl(Perl5 POD: identifier)('means')
              PodIdentifierImpl(Perl5 POD: identifier)('this')
              PodIdentifierImpl(Perl5 POD: identifier)('is')
              PodIdentifierImpl(Perl5 POD: identifier)('deprecated')
              PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                PsiElement(Perl5 POD: B)('B')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('O')
                PsiElement(Perl5 POD: >)('>')
              PodIdentifierImpl(Perl5 POD: identifier)('means')
              PodIdentifierImpl(Perl5 POD: identifier)('this')
              PodIdentifierImpl(Perl5 POD: identifier)('is')
              PodIdentifierImpl(Perl5 POD: identifier)('obsolete')
              PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                PsiElement(Perl5 POD: B)('B')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('S')
                PsiElement(Perl5 POD: >)('>')
              PodIdentifierImpl(Perl5 POD: identifier)('means')
              PodIdentifierImpl(Perl5 POD: identifier)('this')
              PodIdentifierImpl(Perl5 POD: identifier)('is')
              PodIdentifierImpl(Perl5 POD: identifier)('stabilized')
              PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                PsiElement(Perl5 POD: B)('B')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('T')
                PsiElement(Perl5 POD: >)('>')
              PodIdentifierImpl(Perl5 POD: identifier)('means')
              PodIdentifierImpl(Perl5 POD: identifier)('tighter')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('stricter')
              PsiElement(Perl5 POD: ))(')')
              PodIdentifierImpl(Perl5 POD: identifier)('name')
              PodIdentifierImpl(Perl5 POD: identifier)('matching')
              PodIdentifierImpl(Perl5 POD: identifier)('applies')
              PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
                PsiElement(Perl5 POD: B)('B')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('X')
                PsiElement(Perl5 POD: >)('>')
              PodIdentifierImpl(Perl5 POD: identifier)('means')
              PodIdentifierImpl(Perl5 POD: identifier)('use')
              PodIdentifierImpl(Perl5 POD: identifier)('of')
              PodIdentifierImpl(Perl5 POD: identifier)('this')
              PodIdentifierImpl(Perl5 POD: identifier)('form')
              PodIdentifierImpl(Perl5 POD: identifier)('is')
              PodIdentifierImpl(Perl5 POD: identifier)('discouraged')
              PsiElement(Perl5 POD: symbol)(',')
              PodIdentifierImpl(Perl5 POD: identifier)('and')
              PodIdentifierImpl(Perl5 POD: identifier)('may')
              PodIdentifierImpl(Perl5 POD: identifier)('not')
              PodIdentifierImpl(Perl5 POD: identifier)('be')
              PodIdentifierImpl(Perl5 POD: identifier)('stable')
              PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: NL)('\n')
        PsiElement(Perl5 POD: =back)('=back')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodVerbatimParagraphImpl(Perl5 POD: POD_VERBATIM_PARAGRAPH)
        PsiElement(Perl5 POD: code)('       NAME                           INFO\n\n   \p{Adlam}               \p{Script_Extensions=Adlam} (Short:\n                             \p{Adlm}; NOT \p{Block=Adlam}) (88)\n   \p{Adlm}                \p{Adlam} (= \p{Script_Extensions=Adlam})\n                             (NOT \p{Block=Adlam}) (88)\n X \p{Aegean_Numbers}      \p{Block=Aegean_Numbers} (64)\n T \p{Age: 1.1}            \p{Age=V1_1} (33_979)\n   \p{Age: V1_1}           Code point's usage introduced in version\n                             1.1 (33_979: U+0000..01F5, U+01FA..0217,\n                             U+0250..02A8, U+02B0..02DE,\n                             U+02E0..02E9, U+0300..0345 ...)\n T \p{Age: 2.0}            \p{Age=V2_0} (144_521)\n   \p{Age: V2_0}           Code point's usage was introduced in\n                             version 2.0; See also Property\n                             'Present_In' (144_521: U+0591..05A1,\n                             U+05A3..05AF, U+05C4, U+0F00..0F47,\n                             U+0F49..0F69, U+0F71..0F8B ...)\n T \p{Age: 2.1}            \p{Age=V2_1} (2)\n   \p{Age: V2_1}           Code point's usage was introduced in\n                             version 2.1; See also Property\n                             'Present_In' (2: U+20AC, U+FFFC)\n T \p{Age: 3.0}            \p{Age=V3_0} (10_307)\n   \p{Age: V3_0}           Code point's usage was introduced in\n                             version 3.0; See also Property\n                             'Present_In' (10_307: U+01F6..01F9,\n                             U+0218..021F, U+0222..0233,\n                             U+02A9..02AD, U+02DF, U+02EA..02EE ...)\n T \p{Age: 3.1}            \p{Age=V3_1} (44_978)\n   \p{Age: V3_1}           Code point's usage was introduced in\n                             version 3.1; See also Property\n                             'Present_In' (44_978: U+03F4..03F5,\n                             U+FDD0..FDEF, U+10300..1031E,\n                             U+10320..10323, U+10330..1034A,\n                             U+10400..10425 ...)\n T \p{Age: 3.2}            \p{Age=V3_2} (1016)\n   \p{Age: V3_2}           Code point's usage was introduced in\n                             version 3.2; See also Property\n                             'Present_In' (1016: U+0220, U+034F,\n                             U+0363..036F, U+03D8..03D9, U+03F6,\n                             U+048A..048B ...)\n T \p{Age: 4.0}            \p{Age=V4_0} (1226)\n   \p{Age: V4_0}           Code point's usage was introduced in\n                             version 4.0; See also Property\n                             'Present_In' (1226: U+0221,\n                             U+0234..0236, U+02AE..02AF,\n                             U+02EF..02FF, U+0350..0357, U+035D..035F\n                             ...)\n T \p{Age: 4.1}            \p{Age=V4_1} (1273)\n   \p{Age: V4_1}           Code point's usage was introduced in\n                             version 4.1; See also Property\n                             'Present_In' (1273: U+0237..0241,\n                             U+0358..035C, U+03FC..03FF,\n                             U+04F6..04F7, U+05A2, U+05C5..05C7 ...)\n T \p{Age: 5.0}            \p{Age=V5_0} (1369)\n   \p{Age: V5_0}           Code point's usage was introduced in\n                             version 5.0; See also Property\n                             'Present_In' (1369: U+0242..024F,\n                             U+037B..037D, U+04CF, U+04FA..04FF,\n                             U+0510..0513, U+05BA ...)\n T \p{Age: 5.1}            \p{Age=V5_1} (1624)\n   \p{Age: V5_1}           Code point's usage was introduced in\n                             version 5.1; See also Property\n                             'Present_In' (1624: U+0370..0373,\n                             U+0376..0377, U+03CF, U+0487,\n                             U+0514..0523, U+0606..060A ...)\n T \p{Age: 5.2}            \p{Age=V5_2} (6648)\n   \p{Age: V5_2}           Code point's usage was introduced in\n                             version 5.2; See also Property\n                             'Present_In' (6648: U+0524..0525,\n                             U+0800..082D, U+0830..083E, U+0900,\n                             U+094E, U+0955 ...)\n T \p{Age: 6.0}            \p{Age=V6_0} (2088)\n   \p{Age: V6_0}           Code point's usage was introduced in\n                             version 6.0; See also Property\n                             'Present_In' (2088: U+0526..0527,\n                             U+0620, U+065F, U+0840..085B, U+085E,\n                             U+093A..093B ...)\n T \p{Age: 6.1}            \p{Age=V6_1} (732)\n   \p{Age: V6_1}           Code point's usage was introduced in\n                             version 6.1; See also Property\n                             'Present_In' (732: U+058F, U+0604,\n                             U+08A0, U+08A2..08AC, U+08E4..08FE,\n                             U+0AF0 ...)\n T \p{Age: 6.2}            \p{Age=V6_2} (1)\n   \p{Age: V6_2}           Code point's usage was introduced in\n                             version 6.2; See also Property\n                             'Present_In' (1: U+20BA)\n T \p{Age: 6.3}            \p{Age=V6_3} (5)\n   \p{Age: V6_3}           Code point's usage was introduced in\n                             version 6.3; See also Property\n                             'Present_In' (5: U+061C, U+2066..2069)\n T \p{Age: 7.0}            \p{Age=V7_0} (2834)\n   \p{Age: V7_0}           Code point's usage was introduced in\n                             version 7.0; See also Property\n                             'Present_In' (2834: U+037F,\n                             U+0528..052F, U+058D..058E, U+0605,\n                             U+08A1, U+08AD..08B2 ...)\n T \p{Age: 8.0}            \p{Age=V8_0} (7716)\n   \p{Age: V8_0}           Code point's usage was introduced in\n                             version 8.0; See also Property\n                             'Present_In' (7716: U+08B3..08B4,\n                             U+08E3, U+0AF9, U+0C5A, U+0D5F, U+13F5\n                             ...)\n T \p{Age: 9.0}            \p{Age=V9_0} (7500)\n   \p{Age: V9_0}           Code point's usage was introduced in\n                             version 9.0; See also Property\n                             'Present_In' (7500: U+08B6..08BD,\n                             U+08D4..08E2, U+0C80, U+0D4F,\n                             U+0D54..0D56, U+0D58..0D5E ...)\n T \p{Age: 10.0}           \p{Age=V10_0} (8518)\n   \p{Age: V10_0}          Code point's usage was introduced in\n                             version 10.0; See also Property\n                             'Present_In' (8518: U+0860..086A,\n                             U+09FC..09FD, U+0AFA..0AFF, U+0D00,\n                             U+0D3B..0D3C, U+1CF7 ...)\n   \p{Age: NA}             \p{Age=Unassigned} (837_775 plus all\n                             above-Unicode code points)\n   \p{Age: Unassigned}     Code point's usage has not been assigned\n                             in any Unicode release thus far. (Short:\n                             \p{Age=NA}) (837_775 plus all above-\n                             Unicode code points: U+0378..0379,\n                             U+0380..0383, U+038B, U+038D, U+03A2,\n                             U+0530 ...)\n   \p{Aghb}                \p{Caucasian_Albanian} (=\n                             \p{Script_Extensions=\n                             Caucasian_Albanian}) (NOT \p{Block=\n                             Caucasian_Albanian}) (53)\n   \p{AHex}                \p{PosixXDigit} (= \p{ASCII_Hex_Digit=Y})\n                             (22)\n   \p{AHex: *}             \p{ASCII_Hex_Digit: *}\n   \p{Ahom}                \p{Script_Extensions=Ahom} (NOT \p{Block=\n                             Ahom}) (57)\n X \p{Alchemical}          \p{Alchemical_Symbols} (= \p{Block=\n                             Alchemical_Symbols}) (128)\n X \p{Alchemical_Symbols}  \p{Block=Alchemical_Symbols} (Short:\n                             \p{InAlchemical}) (128)\n   \p{All}                 All code points, including those above\n                             Unicode.  Same as qr/./s (1_114_112 plus\n                             all above-Unicode code points:\n                             U+0000..infinity)\n   \p{Alnum}               \p{XPosixAlnum} (127_219)\n   \p{Alpha}               \p{XPosixAlpha} (= \p{Alphabetic=Y})\n                             (126_629)\n   \p{Alpha: *}            \p{Alphabetic: *}\n   \p{Alphabetic}          \p{XPosixAlpha} (= \p{Alphabetic=Y})\n                             (126_629)\n   \p{Alphabetic: N*}      (Short: \p{Alpha=N}, \P{Alpha}) (987_483\n                             plus all above-Unicode code points:\n                             [\x00-\x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`\{\|\}~\x7f-\xa9\xab-\n                             \xb4\xb6-\xb9\xbb-\xbf\xd7\xf7],\n                             U+02C2..02C5, U+02D2..02DF,\n                             U+02E5..02EB, U+02ED, U+02EF..0344 ...)\n   \p{Alphabetic: Y*}      (Short: \p{Alpha=Y}, \p{Alpha}) (126_629:\n                             [A-Za-z\xaa\xb5\xba\xc0-\xd6\xd8-\n                             \xf6\xf8-\xff], U+0100..02C1,\n                             U+02C6..02D1, U+02E0..02E4, U+02EC,\n                             U+02EE ...)\n X \p{Alphabetic_PF}       \p{Alphabetic_Presentation_Forms} (=\n                             \p{Block=Alphabetic_Presentation_Forms})\n                             (80)\n X \p{Alphabetic_Presentation_Forms} \p{Block=\n                             Alphabetic_Presentation_Forms} (Short:\n                             \p{InAlphabeticPF}) (80)\n   \p{Anatolian_Hieroglyphs} \p{Script_Extensions=\n                             Anatolian_Hieroglyphs} (Short: \p{Hluw};\n                             NOT \p{Block=Anatolian_Hieroglyphs})\n                             (583)\n X \p{Ancient_Greek_Music} \p{Ancient_Greek_Musical_Notation} (=\n                             \p{Block=\n                             Ancient_Greek_Musical_Notation}) (80)\n X \p{Ancient_Greek_Musical_Notation} \p{Block=\n                             Ancient_Greek_Musical_Notation} (Short:\n                             \p{InAncientGreekMusic}) (80)\n X \p{Ancient_Greek_Numbers} \p{Block=Ancient_Greek_Numbers} (80)\n X \p{Ancient_Symbols}     \p{Block=Ancient_Symbols} (64)\n   \p{Any}                 All Unicode code points (1_114_112:\n                             U+0000..10FFFF)\n   \p{Arab}                \p{Arabic} (= \p{Script_Extensions=\n                             Arabic}) (NOT \p{Block=Arabic}) (1324)\n   \p{Arabic}              \p{Script_Extensions=Arabic} (Short:\n                             \p{Arab}; NOT \p{Block=Arabic}) (1324)\n X \p{Arabic_Ext_A}        \p{Arabic_Extended_A} (= \p{Block=\n                             Arabic_Extended_A}) (96)\n X \p{Arabic_Extended_A}   \p{Block=Arabic_Extended_A} (Short:\n                             \p{InArabicExtA}) (96)\n X \p{Arabic_Math}         \p{Arabic_Mathematical_Alphabetic_Symbols}\n                             (= \p{Block=\n                             Arabic_Mathematical_Alphabetic_Symbols})\n                             (256)\n X \p{Arabic_Mathematical_Alphabetic_Symbols} \p{Block=\n                             Arabic_Mathematical_Alphabetic_Symbols}\n                             (Short: \p{InArabicMath}) (256)\n X \p{Arabic_PF_A}         \p{Arabic_Presentation_Forms_A} (=\n                             \p{Block=Arabic_Presentation_Forms_A})\n                             (688)\n X \p{Arabic_PF_B}         \p{Arabic_Presentation_Forms_B} (=\n                             \p{Block=Arabic_Presentation_Forms_B})\n                             (144)\n X \p{Arabic_Presentation_Forms_A} \p{Block=\n                             Arabic_Presentation_Forms_A} (Short:\n                             \p{InArabicPFA}) (688)\n X \p{Arabic_Presentation_Forms_B} \p{Block=\n                             Arabic_Presentation_Forms_B} (Short:\n                             \p{InArabicPFB}) (144)\n X \p{Arabic_Sup}          \p{Arabic_Supplement} (= \p{Block=\n                             Arabic_Supplement}) (48)\n X \p{Arabic_Supplement}   \p{Block=Arabic_Supplement} (Short:\n                             \p{InArabicSup}) (48)\n   \p{Armenian}            \p{Script_Extensions=Armenian} (Short:\n                             \p{Armn}; NOT \p{Block=Armenian}) (94)\n   \p{Armi}                \p{Imperial_Aramaic} (=\n                             \p{Script_Extensions=Imperial_Aramaic})\n                             (NOT \p{Block=Imperial_Aramaic}) (31)\n   \p{Armn}                \p{Armenian} (= \p{Script_Extensions=\n                             Armenian}) (NOT \p{Block=Armenian}) (94)\n X \p{Arrows}              \p{Block=Arrows} (112)\n   \p{ASCII}               \p{Block=Basic_Latin} (128)\n   \p{ASCII_Hex_Digit}     \p{PosixXDigit} (= \p{ASCII_Hex_Digit=Y})\n                             (22)\n   \p{ASCII_Hex_Digit: N*} (Short: \p{AHex=N}, \P{AHex}) (1_114_090\n                             plus all above-Unicode code points:\n                             [\x00-\x20!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                             >?\@G-Z\[\\\]\^_`g-z\{\|\}~\x7f-\xff],\n                             U+0100..infinity)\n   \p{ASCII_Hex_Digit: Y*} (Short: \p{AHex=Y}, \p{AHex}) (22: [0-9A-\n                             Fa-f])\n   \p{Assigned}            All assigned code points (276_271:\n                             U+0000..0377, U+037A..037F,\n                             U+0384..038A, U+038C, U+038E..03A1,\n                             U+03A3..052F ...)\n   \p{Avestan}             \p{Script_Extensions=Avestan} (Short:\n                             \p{Avst}; NOT \p{Block=Avestan}) (61)\n   \p{Avst}                \p{Avestan} (= \p{Script_Extensions=\n                             Avestan}) (NOT \p{Block=Avestan}) (61)\n   \p{Bali}                \p{Balinese} (= \p{Script_Extensions=\n                             Balinese}) (NOT \p{Block=Balinese}) (121)\n   \p{Balinese}            \p{Script_Extensions=Balinese} (Short:\n                             \p{Bali}; NOT \p{Block=Balinese}) (121)\n   \p{Bamu}                \p{Bamum} (= \p{Script_Extensions=Bamum})\n                             (NOT \p{Block=Bamum}) (657)\n   \p{Bamum}               \p{Script_Extensions=Bamum} (Short:\n                             \p{Bamu}; NOT \p{Block=Bamum}) (657)\n X \p{Bamum_Sup}           \p{Bamum_Supplement} (= \p{Block=\n                             Bamum_Supplement}) (576)\n X \p{Bamum_Supplement}    \p{Block=Bamum_Supplement} (Short:\n                             \p{InBamumSup}) (576)\n X \p{Basic_Latin}         \p{ASCII} (= \p{Block=Basic_Latin}) (128)\n   \p{Bass}                \p{Bassa_Vah} (= \p{Script_Extensions=\n                             Bassa_Vah}) (NOT \p{Block=Bassa_Vah})\n                             (36)\n   \p{Bassa_Vah}           \p{Script_Extensions=Bassa_Vah} (Short:\n                             \p{Bass}; NOT \p{Block=Bassa_Vah}) (36)\n   \p{Batak}               \p{Script_Extensions=Batak} (Short:\n                             \p{Batk}; NOT \p{Block=Batak}) (56)\n   \p{Batk}                \p{Batak} (= \p{Script_Extensions=Batak})\n                             (NOT \p{Block=Batak}) (56)\n   \p{Bc: *}               \p{Bidi_Class: *}\n   \p{Beng}                \p{Bengali} (= \p{Script_Extensions=\n                             Bengali}) (NOT \p{Block=Bengali}) (101)\n   \p{Bengali}             \p{Script_Extensions=Bengali} (Short:\n                             \p{Beng}; NOT \p{Block=Bengali}) (101)\n   \p{Bhaiksuki}           \p{Script_Extensions=Bhaiksuki} (Short:\n                             \p{Bhks}; NOT \p{Block=Bhaiksuki}) (97)\n   \p{Bhks}                \p{Bhaiksuki} (= \p{Script_Extensions=\n                             Bhaiksuki}) (NOT \p{Block=Bhaiksuki})\n                             (97)\n   \p{Bidi_C}              \p{Bidi_Control} (= \p{Bidi_Control=Y})\n                             (12)\n   \p{Bidi_C: *}           \p{Bidi_Control: *}\n   \p{Bidi_Class: AL}      \p{Bidi_Class=Arabic_Letter} (1436)\n   \p{Bidi_Class: AN}      \p{Bidi_Class=Arabic_Number} (51)\n   \p{Bidi_Class: Arabic_Letter} (Short: \p{Bc=AL}) (1436: U+0608,\n                             U+060B, U+060D, U+061B..064A,\n                             U+066D..066F, U+0671..06D5 ...)\n   \p{Bidi_Class: Arabic_Number} (Short: \p{Bc=AN}) (51:\n                             U+0600..0605, U+0660..0669,\n                             U+066B..066C, U+06DD, U+08E2,\n                             U+10E60..10E7E)\n   \p{Bidi_Class: B}       \p{Bidi_Class=Paragraph_Separator} (7)\n   \p{Bidi_Class: BN}      \p{Bidi_Class=Boundary_Neutral} (4016)\n   \p{Bidi_Class: Boundary_Neutral} (Short: \p{Bc=BN}) (4016:\n                             [^\t\n\cK\f\r\x1c-\x7e\x85\xa0-\xac\xae-\n                             \xff], U+180E, U+200B..200D,\n                             U+2060..2065, U+206A..206F, U+FDD0..FDEF\n                             ...)\n   \p{Bidi_Class: Common_Separator} (Short: \p{Bc=CS}) (15:\n                             [,.\/:\xa0], U+060C, U+202F, U+2044,\n                             U+FE50, U+FE52 ...)\n   \p{Bidi_Class: CS}      \p{Bidi_Class=Common_Separator} (15)\n   \p{Bidi_Class: EN}      \p{Bidi_Class=European_Number} (158)\n   \p{Bidi_Class: ES}      \p{Bidi_Class=European_Separator} (12)\n   \p{Bidi_Class: ET}      \p{Bidi_Class=European_Terminator} (87)\n   \p{Bidi_Class: European_Number} (Short: \p{Bc=EN}) (158: [0-9\xb2-\n                             \xb3\xb9], U+06F0..06F9, U+2070,\n                             U+2074..2079, U+2080..2089, U+2488..249B\n                             ...)\n   \p{Bidi_Class: European_Separator} (Short: \p{Bc=ES}) (12: [+\-],\n                             U+207A..207B, U+208A..208B, U+2212,\n                             U+FB29, U+FE62..FE63 ...)\n   \p{Bidi_Class: European_Terminator} (Short: \p{Bc=ET}) (87:\n                             [#\$\%\xa2-\xa5\xb0-\xb1], U+058F,\n                             U+0609..060A, U+066A, U+09F2..09F3,\n                             U+09FB ...)\n   \p{Bidi_Class: First_Strong_Isolate} (Short: \p{Bc=FSI}) (1:\n                             U+2068)\n   \p{Bidi_Class: FSI}     \p{Bidi_Class=First_Strong_Isolate} (1)\n   \p{Bidi_Class: L}       \p{Bidi_Class=Left_To_Right} (1_097_124\n                             plus all above-Unicode code points)\n   \p{Bidi_Class: Left_To_Right} (Short: \p{Bc=L}) (1_097_124 plus\n                             all above-Unicode code points: [A-Za-\n                             z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\n                             \xff], U+0100..02B8, U+02BB..02C1,\n                             U+02D0..02D1, U+02E0..02E4, U+02EE ...)\n   \p{Bidi_Class: Left_To_Right_Embedding} (Short: \p{Bc=LRE}) (1:\n                             U+202A)\n   \p{Bidi_Class: Left_To_Right_Isolate} (Short: \p{Bc=LRI}) (1:\n                             U+2066)\n   \p{Bidi_Class: Left_To_Right_Override} (Short: \p{Bc=LRO}) (1:\n                             U+202D)\n   \p{Bidi_Class: LRE}     \p{Bidi_Class=Left_To_Right_Embedding} (1)\n   \p{Bidi_Class: LRI}     \p{Bidi_Class=Left_To_Right_Isolate} (1)\n   \p{Bidi_Class: LRO}     \p{Bidi_Class=Left_To_Right_Override} (1)\n   \p{Bidi_Class: Nonspacing_Mark} (Short: \p{Bc=NSM}) (1773:\n                             U+0300..036F, U+0483..0489,\n                             U+0591..05BD, U+05BF, U+05C1..05C2,\n                             U+05C4..05C5 ...)\n   \p{Bidi_Class: NSM}     \p{Bidi_Class=Nonspacing_Mark} (1773)\n   \p{Bidi_Class: ON}      \p{Bidi_Class=Other_Neutral} (5350)\n   \p{Bidi_Class: Other_Neutral} (Short: \p{Bc=ON}) (5350:\n                             [!\"&\'\(\)*;<=\n                             >?\@\[\\\]\^_`\{\|\}~\xa1\xa6-\xa9\xab-\n                             \xac\xae-\xaf\xb4\xb6-\xb8\xbb-\n                             \xbf\xd7\xf7], U+02B9..02BA,\n                             U+02C2..02CF, U+02D2..02DF,\n                             U+02E5..02ED, U+02EF..02FF ...)\n   \p{Bidi_Class: Paragraph_Separator} (Short: \p{Bc=B}) (7:\n                             [\n\r\x1c-\x1e\x85], U+2029)\n   \p{Bidi_Class: PDF}     \p{Bidi_Class=Pop_Directional_Format} (1)\n   \p{Bidi_Class: PDI}     \p{Bidi_Class=Pop_Directional_Isolate} (1)\n   \p{Bidi_Class: Pop_Directional_Format} (Short: \p{Bc=PDF}) (1:\n                             U+202C)\n   \p{Bidi_Class: Pop_Directional_Isolate} (Short: \p{Bc=PDI}) (1:\n                             U+2069)\n   \p{Bidi_Class: R}       \p{Bidi_Class=Right_To_Left} (4054)\n   \p{Bidi_Class: Right_To_Left} (Short: \p{Bc=R}) (4054: U+0590,\n                             U+05BE, U+05C0, U+05C3, U+05C6,\n                             U+05C8..05FF ...)\n   \p{Bidi_Class: Right_To_Left_Embedding} (Short: \p{Bc=RLE}) (1:\n                             U+202B)\n   \p{Bidi_Class: Right_To_Left_Isolate} (Short: \p{Bc=RLI}) (1:\n                             U+2067)\n   \p{Bidi_Class: Right_To_Left_Override} (Short: \p{Bc=RLO}) (1:\n                             U+202E)\n   \p{Bidi_Class: RLE}     \p{Bidi_Class=Right_To_Left_Embedding} (1)\n   \p{Bidi_Class: RLI}     \p{Bidi_Class=Right_To_Left_Isolate} (1)\n   \p{Bidi_Class: RLO}     \p{Bidi_Class=Right_To_Left_Override} (1)\n   \p{Bidi_Class: S}       \p{Bidi_Class=Segment_Separator} (3)\n   \p{Bidi_Class: Segment_Separator} (Short: \p{Bc=S}) (3:\n                             [\t\cK\x1f])\n   \p{Bidi_Class: White_Space} (Short: \p{Bc=WS}) (17: [\f\x20],\n                             U+1680, U+2000..200A, U+2028, U+205F,\n                             U+3000)\n   \p{Bidi_Class: WS}      \p{Bidi_Class=White_Space} (17)\n   \p{Bidi_Control}        \p{Bidi_Control=Y} (Short: \p{BidiC}) (12)\n   \p{Bidi_Control: N*}    (Short: \p{BidiC=N}, \P{BidiC}) (1_114_100\n                             plus all above-Unicode code points:\n                             U+0000..061B, U+061D..200D,\n                             U+2010..2029, U+202F..2065,\n                             U+206A..infinity)\n   \p{Bidi_Control: Y*}    (Short: \p{BidiC=Y}, \p{BidiC}) (12:\n                             U+061C, U+200E..200F, U+202A..202E,\n                             U+2066..2069)\n   \p{Bidi_M}              \p{Bidi_Mirrored} (= \p{Bidi_Mirrored=Y})\n                             (545)\n   \p{Bidi_M: *}           \p{Bidi_Mirrored: *}\n   \p{Bidi_Mirrored}       \p{Bidi_Mirrored=Y} (Short: \p{BidiM})\n                             (545)\n   \p{Bidi_Mirrored: N*}   (Short: \p{BidiM=N}, \P{BidiM}) (1_113_567\n                             plus all above-Unicode code points:\n                             [\x00-\x20!\"#\$\%&\'*+,\-.\/0-9:;=?\@A-\n                             Z\\\^_`a-z\|~\x7f-\xaa\xac-\xba\xbc-\n                             \xff], U+0100..0F39, U+0F3E..169A,\n                             U+169D..2038, U+203B..2044, U+2047..207C\n                             ...)\n   \p{Bidi_Mirrored: Y*}   (Short: \p{BidiM=Y}, \p{BidiM}) (545:\n                             [\(\)<>\[\]\{\}\xab\xbb], U+0F3A..0F3D,\n                             U+169B..169C, U+2039..203A,\n                             U+2045..2046, U+207D..207E ...)\n   \p{Bidi_Paired_Bracket_Type: C} \p{Bidi_Paired_Bracket_Type=Close}\n                             (60)\n   \p{Bidi_Paired_Bracket_Type: Close} (Short: \p{Bpt=C}) (60:\n                             [\)\]\}], U+0F3B, U+0F3D, U+169C,\n                             U+2046, U+207E ...)\n   \p{Bidi_Paired_Bracket_Type: N} \p{Bidi_Paired_Bracket_Type=None}\n                             (1_113_992 plus all above-Unicode code\n                             points)\n   \p{Bidi_Paired_Bracket_Type: None} (Short: \p{Bpt=N}) (1_113_992\n                             plus all above-Unicode code points:\n                             [\x00-\x20!\"#\$\%&\'*+,\-.\/0-9:;<=\n                             >?\@A-Z\\\^_`a-z\|~\x7f-\xff],\n                             U+0100..0F39, U+0F3E..169A,\n                             U+169D..2044, U+2047..207C, U+207F..208C\n                             ...)\n   \p{Bidi_Paired_Bracket_Type: O} \p{Bidi_Paired_Bracket_Type=Open}\n                             (60)\n   \p{Bidi_Paired_Bracket_Type: Open} (Short: \p{Bpt=O}) (60:\n                             [\(\[\{], U+0F3A, U+0F3C, U+169B,\n                             U+2045, U+207D ...)\n   \p{Blank}               \p{XPosixBlank} (18)\n   \p{Blk: *}              \p{Block: *}\n   \p{Block: Adlam}        (NOT \p{Adlam} NOR \p{Is_Adlam}) (96:\n                             U+1E900..1E95F)\n   \p{Block: Aegean_Numbers} (64: U+10100..1013F)\n   \p{Block: Ahom}         (NOT \p{Ahom} NOR \p{Is_Ahom}) (64:\n                             U+11700..1173F)\n   \p{Block: Alchemical}   \p{Block=Alchemical_Symbols} (128)\n   \p{Block: Alchemical_Symbols} (Short: \p{Blk=Alchemical}) (128:\n                             U+1F700..1F77F)\n   \p{Block: Alphabetic_PF} \p{Block=Alphabetic_Presentation_Forms}\n                             (80)\n   \p{Block: Alphabetic_Presentation_Forms} (Short: \p{Blk=\n                             AlphabeticPF}) (80: U+FB00..FB4F)\n   \p{Block: Anatolian_Hieroglyphs} (NOT \p{Anatolian_Hieroglyphs}\n                             NOR \p{Is_Anatolian_Hieroglyphs}) (640:\n                             U+14400..1467F)\n   \p{Block: Ancient_Greek_Music} \p{Block=\n                             Ancient_Greek_Musical_Notation} (80)\n   \p{Block: Ancient_Greek_Musical_Notation} (Short: \p{Blk=\n                             AncientGreekMusic}) (80: U+1D200..1D24F)\n   \p{Block: Ancient_Greek_Numbers} (80: U+10140..1018F)\n   \p{Block: Ancient_Symbols} (64: U+10190..101CF)\n   \p{Block: Arabic}       (NOT \p{Arabic} NOR \p{Is_Arabic}) (256:\n                             U+0600..06FF)\n   \p{Block: Arabic_Ext_A} \p{Block=Arabic_Extended_A} (96)\n   \p{Block: Arabic_Extended_A} (Short: \p{Blk=ArabicExtA}) (96:\n                             U+08A0..08FF)\n   \p{Block: Arabic_Math}  \p{Block=\n                             Arabic_Mathematical_Alphabetic_Symbols}\n                             (256)\n   \p{Block: Arabic_Mathematical_Alphabetic_Symbols} (Short: \p{Blk=\n                             ArabicMath}) (256: U+1EE00..1EEFF)\n   \p{Block: Arabic_PF_A}  \p{Block=Arabic_Presentation_Forms_A} (688)\n   \p{Block: Arabic_PF_B}  \p{Block=Arabic_Presentation_Forms_B} (144)\n   \p{Block: Arabic_Presentation_Forms_A} (Short: \p{Blk=ArabicPFA})\n                             (688: U+FB50..FDFF)\n   \p{Block: Arabic_Presentation_Forms_B} (Short: \p{Blk=ArabicPFB})\n                             (144: U+FE70..FEFF)\n   \p{Block: Arabic_Sup}   \p{Block=Arabic_Supplement} (48)\n   \p{Block: Arabic_Supplement} (Short: \p{Blk=ArabicSup}) (48:\n                             U+0750..077F)\n   \p{Block: Armenian}     (NOT \p{Armenian} NOR \p{Is_Armenian})\n                             (96: U+0530..058F)\n   \p{Block: Arrows}       (112: U+2190..21FF)\n   \p{Block: ASCII}        \p{Block=Basic_Latin} (128)\n   \p{Block: Avestan}      (NOT \p{Avestan} NOR \p{Is_Avestan}) (64:\n                             U+10B00..10B3F)\n   \p{Block: Balinese}     (NOT \p{Balinese} NOR \p{Is_Balinese})\n                             (128: U+1B00..1B7F)\n   \p{Block: Bamum}        (NOT \p{Bamum} NOR \p{Is_Bamum}) (96:\n                             U+A6A0..A6FF)\n   \p{Block: Bamum_Sup}    \p{Block=Bamum_Supplement} (576)\n   \p{Block: Bamum_Supplement} (Short: \p{Blk=BamumSup}) (576:\n                             U+16800..16A3F)\n   \p{Block: Basic_Latin}  (Short: \p{Blk=ASCII}) (128: [\x00-\x7f])\n   \p{Block: Bassa_Vah}    (NOT \p{Bassa_Vah} NOR \p{Is_Bassa_Vah})\n                             (48: U+16AD0..16AFF)\n   \p{Block: Batak}        (NOT \p{Batak} NOR \p{Is_Batak}) (64:\n                             U+1BC0..1BFF)\n   \p{Block: Bengali}      (NOT \p{Bengali} NOR \p{Is_Bengali}) (128:\n                             U+0980..09FF)\n   \p{Block: Bhaiksuki}    (NOT \p{Bhaiksuki} NOR \p{Is_Bhaiksuki})\n                             (112: U+11C00..11C6F)\n   \p{Block: Block_Elements} (32: U+2580..259F)\n   \p{Block: Bopomofo}     (NOT \p{Bopomofo} NOR \p{Is_Bopomofo})\n                             (48: U+3100..312F)\n   \p{Block: Bopomofo_Ext} \p{Block=Bopomofo_Extended} (32)\n   \p{Block: Bopomofo_Extended} (Short: \p{Blk=BopomofoExt}) (32:\n                             U+31A0..31BF)\n   \p{Block: Box_Drawing}  (128: U+2500..257F)\n   \p{Block: Brahmi}       (NOT \p{Brahmi} NOR \p{Is_Brahmi}) (128:\n                             U+11000..1107F)\n   \p{Block: Braille}      \p{Block=Braille_Patterns} (256)\n   \p{Block: Braille_Patterns} (Short: \p{Blk=Braille}) (256:\n                             U+2800..28FF)\n   \p{Block: Buginese}     (NOT \p{Buginese} NOR \p{Is_Buginese})\n                             (32: U+1A00..1A1F)\n   \p{Block: Buhid}        (NOT \p{Buhid} NOR \p{Is_Buhid}) (32:\n                             U+1740..175F)\n   \p{Block: Byzantine_Music} \p{Block=Byzantine_Musical_Symbols}\n                             (256)\n   \p{Block: Byzantine_Musical_Symbols} (Short: \p{Blk=\n                             ByzantineMusic}) (256: U+1D000..1D0FF)\n   \p{Block: Canadian_Syllabics} \p{Block=\n                             Unified_Canadian_Aboriginal_Syllabics}\n                             (640)\n   \p{Block: Carian}       (NOT \p{Carian} NOR \p{Is_Carian}) (64:\n                             U+102A0..102DF)\n   \p{Block: Caucasian_Albanian} (NOT \p{Caucasian_Albanian} NOR\n                             \p{Is_Caucasian_Albanian}) (64:\n                             U+10530..1056F)\n   \p{Block: Chakma}       (NOT \p{Chakma} NOR \p{Is_Chakma}) (80:\n                             U+11100..1114F)\n   \p{Block: Cham}         (NOT \p{Cham} NOR \p{Is_Cham}) (96:\n                             U+AA00..AA5F)\n   \p{Block: Cherokee}     (NOT \p{Cherokee} NOR \p{Is_Cherokee})\n                             (96: U+13A0..13FF)\n   \p{Block: Cherokee_Sup} \p{Block=Cherokee_Supplement} (80)\n   \p{Block: Cherokee_Supplement} (Short: \p{Blk=CherokeeSup}) (80:\n                             U+AB70..ABBF)\n   \p{Block: CJK}          \p{Block=CJK_Unified_Ideographs} (20_992)\n   \p{Block: CJK_Compat}   \p{Block=CJK_Compatibility} (256)\n   \p{Block: CJK_Compat_Forms} \p{Block=CJK_Compatibility_Forms} (32)\n   \p{Block: CJK_Compat_Ideographs} \p{Block=\n                             CJK_Compatibility_Ideographs} (512)\n   \p{Block: CJK_Compat_Ideographs_Sup} \p{Block=\n                             CJK_Compatibility_Ideographs_Supplement}\n                             (544)\n   \p{Block: CJK_Compatibility} (Short: \p{Blk=CJKCompat}) (256:\n                             U+3300..33FF)\n   \p{Block: CJK_Compatibility_Forms} (Short: \p{Blk=CJKCompatForms})\n                             (32: U+FE30..FE4F)\n   \p{Block: CJK_Compatibility_Ideographs} (Short: \p{Blk=\n                             CJKCompatIdeographs}) (512: U+F900..FAFF)\n   \p{Block: CJK_Compatibility_Ideographs_Supplement} (Short: \p{Blk=\n                             CJKCompatIdeographsSup}) (544:\n                             U+2F800..2FA1F)\n   \p{Block: CJK_Ext_A}    \p{Block=\n                             CJK_Unified_Ideographs_Extension_A}\n                             (6592)\n   \p{Block: CJK_Ext_B}    \p{Block=\n                             CJK_Unified_Ideographs_Extension_B}\n                             (42_720)\n   \p{Block: CJK_Ext_C}    \p{Block=\n                             CJK_Unified_Ideographs_Extension_C}\n                             (4160)\n   \p{Block: CJK_Ext_D}    \p{Block=\n                             CJK_Unified_Ideographs_Extension_D} (224)\n   \p{Block: CJK_Ext_E}    \p{Block=\n                             CJK_Unified_Ideographs_Extension_E}\n                             (5776)\n   \p{Block: CJK_Ext_F}    \p{Block=\n                             CJK_Unified_Ideographs_Extension_F}\n                             (7488)\n   \p{Block: CJK_Radicals_Sup} \p{Block=CJK_Radicals_Supplement} (128)\n   \p{Block: CJK_Radicals_Supplement} (Short: \p{Blk=CJKRadicalsSup})\n                             (128: U+2E80..2EFF)\n   \p{Block: CJK_Strokes}  (48: U+31C0..31EF)\n   \p{Block: CJK_Symbols}  \p{Block=CJK_Symbols_And_Punctuation} (64)\n   \p{Block: CJK_Symbols_And_Punctuation} (Short: \p{Blk=CJKSymbols})\n                             (64: U+3000..303F)\n   \p{Block: CJK_Unified_Ideographs} (Short: \p{Blk=CJK}) (20_992:\n                             U+4E00..9FFF)\n   \p{Block: CJK_Unified_Ideographs_Extension_A} (Short: \p{Blk=\n                             CJKExtA}) (6592: U+3400..4DBF)\n   \p{Block: CJK_Unified_Ideographs_Extension_B} (Short: \p{Blk=\n                             CJKExtB}) (42_720: U+20000..2A6DF)\n   \p{Block: CJK_Unified_Ideographs_Extension_C} (Short: \p{Blk=\n                             CJKExtC}) (4160: U+2A700..2B73F)\n   \p{Block: CJK_Unified_Ideographs_Extension_D} (Short: \p{Blk=\n                             CJKExtD}) (224: U+2B740..2B81F)\n   \p{Block: CJK_Unified_Ideographs_Extension_E} (Short: \p{Blk=\n                             CJKExtE}) (5776: U+2B820..2CEAF)\n   \p{Block: CJK_Unified_Ideographs_Extension_F} (Short: \p{Blk=\n                             CJKExtF}) (7488: U+2CEB0..2EBEF)\n   \p{Block: Combining_Diacritical_Marks} (Short: \p{Blk=\n                             Diacriticals}) (112: U+0300..036F)\n   \p{Block: Combining_Diacritical_Marks_Extended} (Short: \p{Blk=\n                             DiacriticalsExt}) (80: U+1AB0..1AFF)\n   \p{Block: Combining_Diacritical_Marks_For_Symbols} (Short: \p{Blk=\n                             DiacriticalsForSymbols}) (48:\n                             U+20D0..20FF)\n   \p{Block: Combining_Diacritical_Marks_Supplement} (Short: \p{Blk=\n                             DiacriticalsSup}) (64: U+1DC0..1DFF)\n   \p{Block: Combining_Half_Marks} (Short: \p{Blk=HalfMarks}) (16:\n                             U+FE20..FE2F)\n   \p{Block: Combining_Marks_For_Symbols} \p{Block=\n                             Combining_Diacritical_Marks_For_Symbols}\n                             (48)\n   \p{Block: Common_Indic_Number_Forms} (Short: \p{Blk=\n                             IndicNumberForms}) (16: U+A830..A83F)\n   \p{Block: Compat_Jamo}  \p{Block=Hangul_Compatibility_Jamo} (96)\n   \p{Block: Control_Pictures} (64: U+2400..243F)\n   \p{Block: Coptic}       (NOT \p{Coptic} NOR \p{Is_Coptic}) (128:\n                             U+2C80..2CFF)\n   \p{Block: Coptic_Epact_Numbers} (32: U+102E0..102FF)\n   \p{Block: Counting_Rod} \p{Block=Counting_Rod_Numerals} (32)\n   \p{Block: Counting_Rod_Numerals} (Short: \p{Blk=CountingRod}) (32:\n                             U+1D360..1D37F)\n   \p{Block: Cuneiform}    (NOT \p{Cuneiform} NOR \p{Is_Cuneiform})\n                             (1024: U+12000..123FF)\n   \p{Block: Cuneiform_Numbers} \p{Block=\n                             Cuneiform_Numbers_And_Punctuation} (128)\n   \p{Block: Cuneiform_Numbers_And_Punctuation} (Short: \p{Blk=\n                             CuneiformNumbers}) (128: U+12400..1247F)\n   \p{Block: Currency_Symbols} (48: U+20A0..20CF)\n   \p{Block: Cypriot_Syllabary} (64: U+10800..1083F)\n   \p{Block: Cyrillic}     (NOT \p{Cyrillic} NOR \p{Is_Cyrillic})\n                             (256: U+0400..04FF)\n   \p{Block: Cyrillic_Ext_A} \p{Block=Cyrillic_Extended_A} (32)\n   \p{Block: Cyrillic_Ext_B} \p{Block=Cyrillic_Extended_B} (96)\n   \p{Block: Cyrillic_Ext_C} \p{Block=Cyrillic_Extended_C} (16)\n   \p{Block: Cyrillic_Extended_A} (Short: \p{Blk=CyrillicExtA}) (32:\n                             U+2DE0..2DFF)\n   \p{Block: Cyrillic_Extended_B} (Short: \p{Blk=CyrillicExtB}) (96:\n                             U+A640..A69F)\n   \p{Block: Cyrillic_Extended_C} (Short: \p{Blk=CyrillicExtC}) (16:\n                             U+1C80..1C8F)\n   \p{Block: Cyrillic_Sup} \p{Block=Cyrillic_Supplement} (48)\n   \p{Block: Cyrillic_Supplement} (Short: \p{Blk=CyrillicSup}) (48:\n                             U+0500..052F)\n   \p{Block: Cyrillic_Supplementary} \p{Block=Cyrillic_Supplement}\n                             (48)\n   \p{Block: Deseret}      (80: U+10400..1044F)\n   \p{Block: Devanagari}   (NOT \p{Devanagari} NOR \p{Is_Devanagari})\n                             (128: U+0900..097F)\n   \p{Block: Devanagari_Ext} \p{Block=Devanagari_Extended} (32)\n   \p{Block: Devanagari_Extended} (Short: \p{Blk=DevanagariExt}) (32:\n                             U+A8E0..A8FF)\n   \p{Block: Diacriticals} \p{Block=Combining_Diacritical_Marks} (112)\n   \p{Block: Diacriticals_Ext} \p{Block=\n                             Combining_Diacritical_Marks_Extended}\n                             (80)\n   \p{Block: Diacriticals_For_Symbols} \p{Block=\n                             Combining_Diacritical_Marks_For_Symbols}\n                             (48)\n   \p{Block: Diacriticals_Sup} \p{Block=\n                             Combining_Diacritical_Marks_Supplement}\n                             (64)\n   \p{Block: Dingbats}     (192: U+2700..27BF)\n   \p{Block: Domino}       \p{Block=Domino_Tiles} (112)\n   \p{Block: Domino_Tiles} (Short: \p{Blk=Domino}) (112:\n                             U+1F030..1F09F)\n   \p{Block: Duployan}     (NOT \p{Duployan} NOR \p{Is_Duployan})\n                             (160: U+1BC00..1BC9F)\n   \p{Block: Early_Dynastic_Cuneiform} (208: U+12480..1254F)\n   \p{Block: Egyptian_Hieroglyphs} (NOT \p{Egyptian_Hieroglyphs} NOR\n                             \p{Is_Egyptian_Hieroglyphs}) (1072:\n                             U+13000..1342F)\n   \p{Block: Elbasan}      (NOT \p{Elbasan} NOR \p{Is_Elbasan}) (48:\n                             U+10500..1052F)\n   \p{Block: Emoticons}    (80: U+1F600..1F64F)\n   \p{Block: Enclosed_Alphanum} \p{Block=Enclosed_Alphanumerics} (160)\n   \p{Block: Enclosed_Alphanum_Sup} \p{Block=\n                             Enclosed_Alphanumeric_Supplement} (256)\n   \p{Block: Enclosed_Alphanumeric_Supplement} (Short: \p{Blk=\n                             EnclosedAlphanumSup}) (256:\n                             U+1F100..1F1FF)\n   \p{Block: Enclosed_Alphanumerics} (Short: \p{Blk=\n                             EnclosedAlphanum}) (160: U+2460..24FF)\n   \p{Block: Enclosed_CJK} \p{Block=Enclosed_CJK_Letters_And_Months}\n                             (256)\n   \p{Block: Enclosed_CJK_Letters_And_Months} (Short: \p{Blk=\n                             EnclosedCJK}) (256: U+3200..32FF)\n   \p{Block: Enclosed_Ideographic_Sup} \p{Block=\n                             Enclosed_Ideographic_Supplement} (256)\n   \p{Block: Enclosed_Ideographic_Supplement} (Short: \p{Blk=\n                             EnclosedIdeographicSup}) (256:\n                             U+1F200..1F2FF)\n   \p{Block: Ethiopic}     (NOT \p{Ethiopic} NOR \p{Is_Ethiopic})\n                             (384: U+1200..137F)\n   \p{Block: Ethiopic_Ext} \p{Block=Ethiopic_Extended} (96)\n   \p{Block: Ethiopic_Ext_A} \p{Block=Ethiopic_Extended_A} (48)\n   \p{Block: Ethiopic_Extended} (Short: \p{Blk=EthiopicExt}) (96:\n                             U+2D80..2DDF)\n   \p{Block: Ethiopic_Extended_A} (Short: \p{Blk=EthiopicExtA}) (48:\n                             U+AB00..AB2F)\n   \p{Block: Ethiopic_Sup} \p{Block=Ethiopic_Supplement} (32)\n   \p{Block: Ethiopic_Supplement} (Short: \p{Blk=EthiopicSup}) (32:\n                             U+1380..139F)\n   \p{Block: General_Punctuation} (Short: \p{Blk=Punctuation}; NOT\n                             \p{Punct} NOR \p{Is_Punctuation}) (112:\n                             U+2000..206F)\n   \p{Block: Geometric_Shapes} (96: U+25A0..25FF)\n   \p{Block: Geometric_Shapes_Ext} \p{Block=\n                             Geometric_Shapes_Extended} (128)\n   \p{Block: Geometric_Shapes_Extended} (Short: \p{Blk=\n                             GeometricShapesExt}) (128:\n                             U+1F780..1F7FF)\n   \p{Block: Georgian}     (NOT \p{Georgian} NOR \p{Is_Georgian})\n                             (96: U+10A0..10FF)\n   \p{Block: Georgian_Sup} \p{Block=Georgian_Supplement} (48)\n   \p{Block: Georgian_Supplement} (Short: \p{Blk=GeorgianSup}) (48:\n                             U+2D00..2D2F)\n   \p{Block: Glagolitic}   (NOT \p{Glagolitic} NOR \p{Is_Glagolitic})\n                             (96: U+2C00..2C5F)\n   \p{Block: Glagolitic_Sup} \p{Block=Glagolitic_Supplement} (48)\n   \p{Block: Glagolitic_Supplement} (Short: \p{Blk=GlagoliticSup})\n                             (48: U+1E000..1E02F)\n   \p{Block: Gothic}       (NOT \p{Gothic} NOR \p{Is_Gothic}) (32:\n                             U+10330..1034F)\n   \p{Block: Grantha}      (NOT \p{Grantha} NOR \p{Is_Grantha}) (128:\n                             U+11300..1137F)\n   \p{Block: Greek}        \p{Block=Greek_And_Coptic} (NOT \p{Greek}\n                             NOR \p{Is_Greek}) (144)\n   \p{Block: Greek_And_Coptic} (Short: \p{Blk=Greek}; NOT \p{Greek}\n                             NOR \p{Is_Greek}) (144: U+0370..03FF)\n   \p{Block: Greek_Ext}    \p{Block=Greek_Extended} (256)\n   \p{Block: Greek_Extended} (Short: \p{Blk=GreekExt}) (256:\n                             U+1F00..1FFF)\n   \p{Block: Gujarati}     (NOT \p{Gujarati} NOR \p{Is_Gujarati})\n                             (128: U+0A80..0AFF)\n   \p{Block: Gurmukhi}     (NOT \p{Gurmukhi} NOR \p{Is_Gurmukhi})\n                             (128: U+0A00..0A7F)\n   \p{Block: Half_And_Full_Forms} \p{Block=\n                             Halfwidth_And_Fullwidth_Forms} (240)\n   \p{Block: Half_Marks}   \p{Block=Combining_Half_Marks} (16)\n   \p{Block: Halfwidth_And_Fullwidth_Forms} (Short: \p{Blk=\n                             HalfAndFullForms}) (240: U+FF00..FFEF)\n   \p{Block: Hangul}       \p{Block=Hangul_Syllables} (NOT \p{Hangul}\n                             NOR \p{Is_Hangul}) (11_184)\n   \p{Block: Hangul_Compatibility_Jamo} (Short: \p{Blk=CompatJamo})\n                             (96: U+3130..318F)\n   \p{Block: Hangul_Jamo}  (Short: \p{Blk=Jamo}) (256: U+1100..11FF)\n   \p{Block: Hangul_Jamo_Extended_A} (Short: \p{Blk=JamoExtA}) (32:\n                             U+A960..A97F)\n   \p{Block: Hangul_Jamo_Extended_B} (Short: \p{Blk=JamoExtB}) (80:\n                             U+D7B0..D7FF)\n   \p{Block: Hangul_Syllables} (Short: \p{Blk=Hangul}; NOT \p{Hangul}\n                             NOR \p{Is_Hangul}) (11_184: U+AC00..D7AF)\n   \p{Block: Hanunoo}      (NOT \p{Hanunoo} NOR \p{Is_Hanunoo}) (32:\n                             U+1720..173F)\n   \p{Block: Hatran}       (NOT \p{Hatran} NOR \p{Is_Hatran}) (32:\n                             U+108E0..108FF)\n   \p{Block: Hebrew}       (NOT \p{Hebrew} NOR \p{Is_Hebrew}) (112:\n                             U+0590..05FF)\n   \p{Block: High_Private_Use_Surrogates} (Short: \p{Blk=\n                             HighPUSurrogates}) (128: U+DB80..DBFF)\n   \p{Block: High_PU_Surrogates} \p{Block=\n                             High_Private_Use_Surrogates} (128)\n   \p{Block: High_Surrogates} (896: U+D800..DB7F)\n   \p{Block: Hiragana}     (NOT \p{Hiragana} NOR \p{Is_Hiragana})\n                             (96: U+3040..309F)\n   \p{Block: IDC}          \p{Block=\n                             Ideographic_Description_Characters} (NOT\n                             \p{ID_Continue} NOR \p{Is_IDC}) (16)\n   \p{Block: Ideographic_Description_Characters} (Short: \p{Blk=IDC};\n                             NOT \p{ID_Continue} NOR \p{Is_IDC}) (16:\n                             U+2FF0..2FFF)\n   \p{Block: Ideographic_Symbols} \p{Block=\n                             Ideographic_Symbols_And_Punctuation} (32)\n   \p{Block: Ideographic_Symbols_And_Punctuation} (Short: \p{Blk=\n                             IdeographicSymbols}) (32: U+16FE0..16FFF)\n   \p{Block: Imperial_Aramaic} (NOT \p{Imperial_Aramaic} NOR\n                             \p{Is_Imperial_Aramaic}) (32:\n                             U+10840..1085F)\n   \p{Block: Indic_Number_Forms} \p{Block=Common_Indic_Number_Forms}\n                             (16)\n   \p{Block: Inscriptional_Pahlavi} (NOT \p{Inscriptional_Pahlavi}\n                             NOR \p{Is_Inscriptional_Pahlavi}) (32:\n                             U+10B60..10B7F)\n   \p{Block: Inscriptional_Parthian} (NOT \p{Inscriptional_Parthian}\n                             NOR \p{Is_Inscriptional_Parthian}) (32:\n                             U+10B40..10B5F)\n   \p{Block: IPA_Ext}      \p{Block=IPA_Extensions} (96)\n   \p{Block: IPA_Extensions} (Short: \p{Blk=IPAExt}) (96:\n                             U+0250..02AF)\n   \p{Block: Jamo}         \p{Block=Hangul_Jamo} (256)\n   \p{Block: Jamo_Ext_A}   \p{Block=Hangul_Jamo_Extended_A} (32)\n   \p{Block: Jamo_Ext_B}   \p{Block=Hangul_Jamo_Extended_B} (80)\n   \p{Block: Javanese}     (NOT \p{Javanese} NOR \p{Is_Javanese})\n                             (96: U+A980..A9DF)\n   \p{Block: Kaithi}       (NOT \p{Kaithi} NOR \p{Is_Kaithi}) (80:\n                             U+11080..110CF)\n   \p{Block: Kana_Ext_A}   \p{Block=Kana_Extended_A} (48)\n   \p{Block: Kana_Extended_A} (Short: \p{Blk=KanaExtA}) (48:\n                             U+1B100..1B12F)\n   \p{Block: Kana_Sup}     \p{Block=Kana_Supplement} (256)\n   \p{Block: Kana_Supplement} (Short: \p{Blk=KanaSup}) (256:\n                             U+1B000..1B0FF)\n   \p{Block: Kanbun}       (16: U+3190..319F)\n   \p{Block: Kangxi}       \p{Block=Kangxi_Radicals} (224)\n   \p{Block: Kangxi_Radicals} (Short: \p{Blk=Kangxi}) (224:\n                             U+2F00..2FDF)\n   \p{Block: Kannada}      (NOT \p{Kannada} NOR \p{Is_Kannada}) (128:\n                             U+0C80..0CFF)\n   \p{Block: Katakana}     (NOT \p{Katakana} NOR \p{Is_Katakana})\n                             (96: U+30A0..30FF)\n   \p{Block: Katakana_Ext} \p{Block=Katakana_Phonetic_Extensions} (16)\n   \p{Block: Katakana_Phonetic_Extensions} (Short: \p{Blk=\n                             KatakanaExt}) (16: U+31F0..31FF)\n   \p{Block: Kayah_Li}     (48: U+A900..A92F)\n   \p{Block: Kharoshthi}   (NOT \p{Kharoshthi} NOR \p{Is_Kharoshthi})\n                             (96: U+10A00..10A5F)\n   \p{Block: Khmer}        (NOT \p{Khmer} NOR \p{Is_Khmer}) (128:\n                             U+1780..17FF)\n   \p{Block: Khmer_Symbols} (32: U+19E0..19FF)\n   \p{Block: Khojki}       (NOT \p{Khojki} NOR \p{Is_Khojki}) (80:\n                             U+11200..1124F)\n   \p{Block: Khudawadi}    (NOT \p{Khudawadi} NOR \p{Is_Khudawadi})\n                             (80: U+112B0..112FF)\n   \p{Block: Lao}          (NOT \p{Lao} NOR \p{Is_Lao}) (128:\n                             U+0E80..0EFF)\n   \p{Block: Latin_1}      \p{Block=Latin_1_Supplement} (128)\n   \p{Block: Latin_1_Sup}  \p{Block=Latin_1_Supplement} (128)\n   \p{Block: Latin_1_Supplement} (Short: \p{Blk=Latin1}) (128: [\x80-\n                             \xff])\n   \p{Block: Latin_Ext_A}  \p{Block=Latin_Extended_A} (128)\n   \p{Block: Latin_Ext_Additional} \p{Block=\n                             Latin_Extended_Additional} (256)\n   \p{Block: Latin_Ext_B}  \p{Block=Latin_Extended_B} (208)\n   \p{Block: Latin_Ext_C}  \p{Block=Latin_Extended_C} (32)\n   \p{Block: Latin_Ext_D}  \p{Block=Latin_Extended_D} (224)\n   \p{Block: Latin_Ext_E}  \p{Block=Latin_Extended_E} (64)\n   \p{Block: Latin_Extended_A} (Short: \p{Blk=LatinExtA}) (128:\n                             U+0100..017F)\n   \p{Block: Latin_Extended_Additional} (Short: \p{Blk=\n                             LatinExtAdditional}) (256: U+1E00..1EFF)\n   \p{Block: Latin_Extended_B} (Short: \p{Blk=LatinExtB}) (208:\n                             U+0180..024F)\n   \p{Block: Latin_Extended_C} (Short: \p{Blk=LatinExtC}) (32:\n                             U+2C60..2C7F)\n   \p{Block: Latin_Extended_D} (Short: \p{Blk=LatinExtD}) (224:\n                             U+A720..A7FF)\n   \p{Block: Latin_Extended_E} (Short: \p{Blk=LatinExtE}) (64:\n                             U+AB30..AB6F)\n   \p{Block: Lepcha}       (NOT \p{Lepcha} NOR \p{Is_Lepcha}) (80:\n                             U+1C00..1C4F)\n   \p{Block: Letterlike_Symbols} (80: U+2100..214F)\n   \p{Block: Limbu}        (NOT \p{Limbu} NOR \p{Is_Limbu}) (80:\n                             U+1900..194F)\n   \p{Block: Linear_A}     (NOT \p{Linear_A} NOR \p{Is_Linear_A})\n                             (384: U+10600..1077F)\n   \p{Block: Linear_B_Ideograms} (128: U+10080..100FF)\n   \p{Block: Linear_B_Syllabary} (128: U+10000..1007F)\n   \p{Block: Lisu}         (48: U+A4D0..A4FF)\n   \p{Block: Low_Surrogates} (1024: U+DC00..DFFF)\n   \p{Block: Lycian}       (NOT \p{Lycian} NOR \p{Is_Lycian}) (32:\n                             U+10280..1029F)\n   \p{Block: Lydian}       (NOT \p{Lydian} NOR \p{Is_Lydian}) (32:\n                             U+10920..1093F)\n   \p{Block: Mahajani}     (NOT \p{Mahajani} NOR \p{Is_Mahajani})\n                             (48: U+11150..1117F)\n   \p{Block: Mahjong}      \p{Block=Mahjong_Tiles} (48)\n   \p{Block: Mahjong_Tiles} (Short: \p{Blk=Mahjong}) (48:\n                             U+1F000..1F02F)\n   \p{Block: Malayalam}    (NOT \p{Malayalam} NOR \p{Is_Malayalam})\n                             (128: U+0D00..0D7F)\n   \p{Block: Mandaic}      (NOT \p{Mandaic} NOR \p{Is_Mandaic}) (32:\n                             U+0840..085F)\n   \p{Block: Manichaean}   (NOT \p{Manichaean} NOR \p{Is_Manichaean})\n                             (64: U+10AC0..10AFF)\n   \p{Block: Marchen}      (NOT \p{Marchen} NOR \p{Is_Marchen}) (80:\n                             U+11C70..11CBF)\n   \p{Block: Masaram_Gondi} (NOT \p{Masaram_Gondi} NOR\n                             \p{Is_Masaram_Gondi}) (96:\n                             U+11D00..11D5F)\n   \p{Block: Math_Alphanum} \p{Block=\n                             Mathematical_Alphanumeric_Symbols} (1024)\n   \p{Block: Math_Operators} \p{Block=Mathematical_Operators} (256)\n   \p{Block: Mathematical_Alphanumeric_Symbols} (Short: \p{Blk=\n                             MathAlphanum}) (1024: U+1D400..1D7FF)\n   \p{Block: Mathematical_Operators} (Short: \p{Blk=MathOperators})\n                             (256: U+2200..22FF)\n   \p{Block: Meetei_Mayek} (NOT \p{Meetei_Mayek} NOR\n                             \p{Is_Meetei_Mayek}) (64: U+ABC0..ABFF)\n   \p{Block: Meetei_Mayek_Ext} \p{Block=Meetei_Mayek_Extensions} (32)\n   \p{Block: Meetei_Mayek_Extensions} (Short: \p{Blk=MeeteiMayekExt})\n                             (32: U+AAE0..AAFF)\n   \p{Block: Mende_Kikakui} (NOT \p{Mende_Kikakui} NOR\n                             \p{Is_Mende_Kikakui}) (224:\n                             U+1E800..1E8DF)\n   \p{Block: Meroitic_Cursive} (NOT \p{Meroitic_Cursive} NOR\n                             \p{Is_Meroitic_Cursive}) (96:\n                             U+109A0..109FF)\n   \p{Block: Meroitic_Hieroglyphs} (32: U+10980..1099F)\n   \p{Block: Miao}         (NOT \p{Miao} NOR \p{Is_Miao}) (160:\n                             U+16F00..16F9F)\n   \p{Block: Misc_Arrows}  \p{Block=Miscellaneous_Symbols_And_Arrows}\n                             (256)\n   \p{Block: Misc_Math_Symbols_A} \p{Block=\n                             Miscellaneous_Mathematical_Symbols_A}\n                             (48)\n   \p{Block: Misc_Math_Symbols_B} \p{Block=\n                             Miscellaneous_Mathematical_Symbols_B}\n                             (128)\n   \p{Block: Misc_Pictographs} \p{Block=\n                             Miscellaneous_Symbols_And_Pictographs}\n                             (768)\n   \p{Block: Misc_Symbols} \p{Block=Miscellaneous_Symbols} (256)\n   \p{Block: Misc_Technical} \p{Block=Miscellaneous_Technical} (256)\n   \p{Block: Miscellaneous_Mathematical_Symbols_A} (Short: \p{Blk=\n                             MiscMathSymbolsA}) (48: U+27C0..27EF)\n   \p{Block: Miscellaneous_Mathematical_Symbols_B} (Short: \p{Blk=\n                             MiscMathSymbolsB}) (128: U+2980..29FF)\n   \p{Block: Miscellaneous_Symbols} (Short: \p{Blk=MiscSymbols})\n                             (256: U+2600..26FF)\n   \p{Block: Miscellaneous_Symbols_And_Arrows} (Short: \p{Blk=\n                             MiscArrows}) (256: U+2B00..2BFF)\n   \p{Block: Miscellaneous_Symbols_And_Pictographs} (Short: \p{Blk=\n                             MiscPictographs}) (768: U+1F300..1F5FF)\n   \p{Block: Miscellaneous_Technical} (Short: \p{Blk=MiscTechnical})\n                             (256: U+2300..23FF)\n   \p{Block: Modi}         (NOT \p{Modi} NOR \p{Is_Modi}) (96:\n                             U+11600..1165F)\n   \p{Block: Modifier_Letters} \p{Block=Spacing_Modifier_Letters} (80)\n   \p{Block: Modifier_Tone_Letters} (32: U+A700..A71F)\n   \p{Block: Mongolian}    (NOT \p{Mongolian} NOR \p{Is_Mongolian})\n                             (176: U+1800..18AF)\n   \p{Block: Mongolian_Sup} \p{Block=Mongolian_Supplement} (32)\n   \p{Block: Mongolian_Supplement} (Short: \p{Blk=MongolianSup}) (32:\n                             U+11660..1167F)\n   \p{Block: Mro}          (NOT \p{Mro} NOR \p{Is_Mro}) (48:\n                             U+16A40..16A6F)\n   \p{Block: Multani}      (NOT \p{Multani} NOR \p{Is_Multani}) (48:\n                             U+11280..112AF)\n   \p{Block: Music}        \p{Block=Musical_Symbols} (256)\n   \p{Block: Musical_Symbols} (Short: \p{Blk=Music}) (256:\n                             U+1D100..1D1FF)\n   \p{Block: Myanmar}      (NOT \p{Myanmar} NOR \p{Is_Myanmar}) (160:\n                             U+1000..109F)\n   \p{Block: Myanmar_Ext_A} \p{Block=Myanmar_Extended_A} (32)\n   \p{Block: Myanmar_Ext_B} \p{Block=Myanmar_Extended_B} (32)\n   \p{Block: Myanmar_Extended_A} (Short: \p{Blk=MyanmarExtA}) (32:\n                             U+AA60..AA7F)\n   \p{Block: Myanmar_Extended_B} (Short: \p{Blk=MyanmarExtB}) (32:\n                             U+A9E0..A9FF)\n   \p{Block: Nabataean}    (NOT \p{Nabataean} NOR \p{Is_Nabataean})\n                             (48: U+10880..108AF)\n   \p{Block: NB}           \p{Block=No_Block} (834_096 plus all\n                             above-Unicode code points)\n   \p{Block: New_Tai_Lue}  (NOT \p{New_Tai_Lue} NOR\n                             \p{Is_New_Tai_Lue}) (96: U+1980..19DF)\n   \p{Block: Newa}         (NOT \p{Newa} NOR \p{Is_Newa}) (128:\n                             U+11400..1147F)\n   \p{Block: NKo}          (NOT \p{Nko} NOR \p{Is_NKo}) (64:\n                             U+07C0..07FF)\n   \p{Block: No_Block}     (Short: \p{Blk=NB}) (834_096 plus all\n                             above-Unicode code points: U+0870..089F,\n                             U+1C90..1CBF, U+2FE0..2FEF,\n                             U+10200..1027F, U+103E0..103FF,\n                             U+10570..105FF ...)\n   \p{Block: Number_Forms} (64: U+2150..218F)\n   \p{Block: Nushu}        (NOT \p{Nushu} NOR \p{Is_Nushu}) (400:\n                             U+1B170..1B2FF)\n   \p{Block: OCR}          \p{Block=Optical_Character_Recognition}\n                             (32)\n   \p{Block: Ogham}        (NOT \p{Ogham} NOR \p{Is_Ogham}) (32:\n                             U+1680..169F)\n   \p{Block: Ol_Chiki}     (48: U+1C50..1C7F)\n   \p{Block: Old_Hungarian} (NOT \p{Old_Hungarian} NOR\n                             \p{Is_Old_Hungarian}) (128:\n                             U+10C80..10CFF)\n   \p{Block: Old_Italic}   (NOT \p{Old_Italic} NOR \p{Is_Old_Italic})\n                             (48: U+10300..1032F)\n   \p{Block: Old_North_Arabian} (32: U+10A80..10A9F)\n   \p{Block: Old_Permic}   (NOT \p{Old_Permic} NOR \p{Is_Old_Permic})\n                             (48: U+10350..1037F)\n   \p{Block: Old_Persian}  (NOT \p{Old_Persian} NOR\n                             \p{Is_Old_Persian}) (64: U+103A0..103DF)\n   \p{Block: Old_South_Arabian} (32: U+10A60..10A7F)\n   \p{Block: Old_Turkic}   (NOT \p{Old_Turkic} NOR \p{Is_Old_Turkic})\n                             (80: U+10C00..10C4F)\n   \p{Block: Optical_Character_Recognition} (Short: \p{Blk=OCR}) (32:\n                             U+2440..245F)\n   \p{Block: Oriya}        (NOT \p{Oriya} NOR \p{Is_Oriya}) (128:\n                             U+0B00..0B7F)\n   \p{Block: Ornamental_Dingbats} (48: U+1F650..1F67F)\n   \p{Block: Osage}        (NOT \p{Osage} NOR \p{Is_Osage}) (80:\n                             U+104B0..104FF)\n   \p{Block: Osmanya}      (NOT \p{Osmanya} NOR \p{Is_Osmanya}) (48:\n                             U+10480..104AF)\n   \p{Block: Pahawh_Hmong} (NOT \p{Pahawh_Hmong} NOR\n                             \p{Is_Pahawh_Hmong}) (144:\n                             U+16B00..16B8F)\n   \p{Block: Palmyrene}    (32: U+10860..1087F)\n   \p{Block: Pau_Cin_Hau}  (NOT \p{Pau_Cin_Hau} NOR\n                             \p{Is_Pau_Cin_Hau}) (64: U+11AC0..11AFF)\n   \p{Block: Phags_Pa}     (NOT \p{Phags_Pa} NOR \p{Is_Phags_Pa})\n                             (64: U+A840..A87F)\n   \p{Block: Phaistos}     \p{Block=Phaistos_Disc} (48)\n   \p{Block: Phaistos_Disc} (Short: \p{Blk=Phaistos}) (48:\n                             U+101D0..101FF)\n   \p{Block: Phoenician}   (NOT \p{Phoenician} NOR \p{Is_Phoenician})\n                             (32: U+10900..1091F)\n   \p{Block: Phonetic_Ext} \p{Block=Phonetic_Extensions} (128)\n   \p{Block: Phonetic_Ext_Sup} \p{Block=\n                             Phonetic_Extensions_Supplement} (64)\n   \p{Block: Phonetic_Extensions} (Short: \p{Blk=PhoneticExt}) (128:\n                             U+1D00..1D7F)\n   \p{Block: Phonetic_Extensions_Supplement} (Short: \p{Blk=\n                             PhoneticExtSup}) (64: U+1D80..1DBF)\n   \p{Block: Playing_Cards} (96: U+1F0A0..1F0FF)\n   \p{Block: Private_Use}  \p{Block=Private_Use_Area} (NOT\n                             \p{Private_Use} NOR \p{Is_Private_Use})\n                             (6400)\n   \p{Block: Private_Use_Area} (Short: \p{Blk=PUA}; NOT\n                             \p{Private_Use} NOR \p{Is_Private_Use})\n                             (6400: U+E000..F8FF)\n   \p{Block: Psalter_Pahlavi} (NOT \p{Psalter_Pahlavi} NOR\n                             \p{Is_Psalter_Pahlavi}) (48:\n                             U+10B80..10BAF)\n   \p{Block: PUA}          \p{Block=Private_Use_Area} (NOT\n                             \p{Private_Use} NOR \p{Is_Private_Use})\n                             (6400)\n   \p{Block: Punctuation}  \p{Block=General_Punctuation} (NOT\n                             \p{Punct} NOR \p{Is_Punctuation}) (112)\n   \p{Block: Rejang}       (NOT \p{Rejang} NOR \p{Is_Rejang}) (48:\n                             U+A930..A95F)\n   \p{Block: Rumi}         \p{Block=Rumi_Numeral_Symbols} (32)\n   \p{Block: Rumi_Numeral_Symbols} (Short: \p{Blk=Rumi}) (32:\n                             U+10E60..10E7F)\n   \p{Block: Runic}        (NOT \p{Runic} NOR \p{Is_Runic}) (96:\n                             U+16A0..16FF)\n   \p{Block: Samaritan}    (NOT \p{Samaritan} NOR \p{Is_Samaritan})\n                             (64: U+0800..083F)\n   \p{Block: Saurashtra}   (NOT \p{Saurashtra} NOR \p{Is_Saurashtra})\n                             (96: U+A880..A8DF)\n   \p{Block: Sharada}      (NOT \p{Sharada} NOR \p{Is_Sharada}) (96:\n                             U+11180..111DF)\n   \p{Block: Shavian}      (48: U+10450..1047F)\n   \p{Block: Shorthand_Format_Controls} (16: U+1BCA0..1BCAF)\n   \p{Block: Siddham}      (NOT \p{Siddham} NOR \p{Is_Siddham}) (128:\n                             U+11580..115FF)\n   \p{Block: Sinhala}      (NOT \p{Sinhala} NOR \p{Is_Sinhala}) (128:\n                             U+0D80..0DFF)\n   \p{Block: Sinhala_Archaic_Numbers} (32: U+111E0..111FF)\n   \p{Block: Small_Form_Variants} (Short: \p{Blk=SmallForms}) (32:\n                             U+FE50..FE6F)\n   \p{Block: Small_Forms}  \p{Block=Small_Form_Variants} (32)\n   \p{Block: Sora_Sompeng} (NOT \p{Sora_Sompeng} NOR\n                             \p{Is_Sora_Sompeng}) (48: U+110D0..110FF)\n   \p{Block: Soyombo}      (NOT \p{Soyombo} NOR \p{Is_Soyombo}) (96:\n                             U+11A50..11AAF)\n   \p{Block: Spacing_Modifier_Letters} (Short: \p{Blk=\n                             ModifierLetters}) (80: U+02B0..02FF)\n   \p{Block: Specials}     (16: U+FFF0..FFFF)\n   \p{Block: Sundanese}    (NOT \p{Sundanese} NOR \p{Is_Sundanese})\n                             (64: U+1B80..1BBF)\n   \p{Block: Sundanese_Sup} \p{Block=Sundanese_Supplement} (16)\n   \p{Block: Sundanese_Supplement} (Short: \p{Blk=SundaneseSup}) (16:\n                             U+1CC0..1CCF)\n   \p{Block: Sup_Arrows_A} \p{Block=Supplemental_Arrows_A} (16)\n   \p{Block: Sup_Arrows_B} \p{Block=Supplemental_Arrows_B} (128)\n   \p{Block: Sup_Arrows_C} \p{Block=Supplemental_Arrows_C} (256)\n   \p{Block: Sup_Math_Operators} \p{Block=\n                             Supplemental_Mathematical_Operators}\n                             (256)\n   \p{Block: Sup_PUA_A}    \p{Block=Supplementary_Private_Use_Area_A}\n                             (65_536)\n   \p{Block: Sup_PUA_B}    \p{Block=Supplementary_Private_Use_Area_B}\n                             (65_536)\n   \p{Block: Sup_Punctuation} \p{Block=Supplemental_Punctuation} (128)\n   \p{Block: Sup_Symbols_And_Pictographs} \p{Block=\n                             Supplemental_Symbols_And_Pictographs}\n                             (256)\n   \p{Block: Super_And_Sub} \p{Block=Superscripts_And_Subscripts} (48)\n   \p{Block: Superscripts_And_Subscripts} (Short: \p{Blk=\n                             SuperAndSub}) (48: U+2070..209F)\n   \p{Block: Supplemental_Arrows_A} (Short: \p{Blk=SupArrowsA}) (16:\n                             U+27F0..27FF)\n   \p{Block: Supplemental_Arrows_B} (Short: \p{Blk=SupArrowsB}) (128:\n                             U+2900..297F)\n   \p{Block: Supplemental_Arrows_C} (Short: \p{Blk=SupArrowsC}) (256:\n                             U+1F800..1F8FF)\n   \p{Block: Supplemental_Mathematical_Operators} (Short: \p{Blk=\n                             SupMathOperators}) (256: U+2A00..2AFF)\n   \p{Block: Supplemental_Punctuation} (Short: \p{Blk=\n                             SupPunctuation}) (128: U+2E00..2E7F)\n   \p{Block: Supplemental_Symbols_And_Pictographs} (Short: \p{Blk=\n                             SupSymbolsAndPictographs}) (256:\n                             U+1F900..1F9FF)\n   \p{Block: Supplementary_Private_Use_Area_A} (Short: \p{Blk=\n                             SupPUAA}) (65_536: U+F0000..FFFFF)\n   \p{Block: Supplementary_Private_Use_Area_B} (Short: \p{Blk=\n                             SupPUAB}) (65_536: U+100000..10FFFF)\n   \p{Block: Sutton_SignWriting} (688: U+1D800..1DAAF)\n   \p{Block: Syloti_Nagri} (NOT \p{Syloti_Nagri} NOR\n                             \p{Is_Syloti_Nagri}) (48: U+A800..A82F)\n   \p{Block: Syriac}       (NOT \p{Syriac} NOR \p{Is_Syriac}) (80:\n                             U+0700..074F)\n   \p{Block: Syriac_Sup}   \p{Block=Syriac_Supplement} (16)\n   \p{Block: Syriac_Supplement} (Short: \p{Blk=SyriacSup}) (16:\n                             U+0860..086F)\n   \p{Block: Tagalog}      (NOT \p{Tagalog} NOR \p{Is_Tagalog}) (32:\n                             U+1700..171F)\n   \p{Block: Tagbanwa}     (NOT \p{Tagbanwa} NOR \p{Is_Tagbanwa})\n                             (32: U+1760..177F)\n   \p{Block: Tags}         (128: U+E0000..E007F)\n   \p{Block: Tai_Le}       (NOT \p{Tai_Le} NOR \p{Is_Tai_Le}) (48:\n                             U+1950..197F)\n   \p{Block: Tai_Tham}     (NOT \p{Tai_Tham} NOR \p{Is_Tai_Tham})\n                             (144: U+1A20..1AAF)\n   \p{Block: Tai_Viet}     (NOT \p{Tai_Viet} NOR \p{Is_Tai_Viet})\n                             (96: U+AA80..AADF)\n   \p{Block: Tai_Xuan_Jing} \p{Block=Tai_Xuan_Jing_Symbols} (96)\n   \p{Block: Tai_Xuan_Jing_Symbols} (Short: \p{Blk=TaiXuanJing}) (96:\n                             U+1D300..1D35F)\n   \p{Block: Takri}        (NOT \p{Takri} NOR \p{Is_Takri}) (80:\n                             U+11680..116CF)\n   \p{Block: Tamil}        (NOT \p{Tamil} NOR \p{Is_Tamil}) (128:\n                             U+0B80..0BFF)\n   \p{Block: Tangut}       (NOT \p{Tangut} NOR \p{Is_Tangut}) (6144:\n                             U+17000..187FF)\n   \p{Block: Tangut_Components} (768: U+18800..18AFF)\n   \p{Block: Telugu}       (NOT \p{Telugu} NOR \p{Is_Telugu}) (128:\n                             U+0C00..0C7F)\n   \p{Block: Thaana}       (NOT \p{Thaana} NOR \p{Is_Thaana}) (64:\n                             U+0780..07BF)\n   \p{Block: Thai}         (NOT \p{Thai} NOR \p{Is_Thai}) (128:\n                             U+0E00..0E7F)\n   \p{Block: Tibetan}      (NOT \p{Tibetan} NOR \p{Is_Tibetan}) (256:\n                             U+0F00..0FFF)\n   \p{Block: Tifinagh}     (NOT \p{Tifinagh} NOR \p{Is_Tifinagh})\n                             (80: U+2D30..2D7F)\n   \p{Block: Tirhuta}      (NOT \p{Tirhuta} NOR \p{Is_Tirhuta}) (96:\n                             U+11480..114DF)\n   \p{Block: Transport_And_Map} \p{Block=Transport_And_Map_Symbols}\n                             (128)\n   \p{Block: Transport_And_Map_Symbols} (Short: \p{Blk=\n                             TransportAndMap}) (128: U+1F680..1F6FF)\n   \p{Block: UCAS}         \p{Block=\n                             Unified_Canadian_Aboriginal_Syllabics}\n                             (640)\n   \p{Block: UCAS_Ext}     \p{Block=\n                             Unified_Canadian_Aboriginal_Syllabics_-\n                             Extended} (80)\n   \p{Block: Ugaritic}     (NOT \p{Ugaritic} NOR \p{Is_Ugaritic})\n                             (32: U+10380..1039F)\n   \p{Block: Unified_Canadian_Aboriginal_Syllabics} (Short: \p{Blk=\n                             UCAS}) (640: U+1400..167F)\n   \p{Block: Unified_Canadian_Aboriginal_Syllabics_Extended} (Short:\n                             \p{Blk=UCASExt}) (80: U+18B0..18FF)\n   \p{Block: Vai}          (NOT \p{Vai} NOR \p{Is_Vai}) (320:\n                             U+A500..A63F)\n   \p{Block: Variation_Selectors} (Short: \p{Blk=VS}; NOT\n                             \p{Variation_Selector} NOR \p{Is_VS})\n                             (16: U+FE00..FE0F)\n   \p{Block: Variation_Selectors_Supplement} (Short: \p{Blk=VSSup})\n                             (240: U+E0100..E01EF)\n   \p{Block: Vedic_Ext}    \p{Block=Vedic_Extensions} (48)\n   \p{Block: Vedic_Extensions} (Short: \p{Blk=VedicExt}) (48:\n                             U+1CD0..1CFF)\n   \p{Block: Vertical_Forms} (16: U+FE10..FE1F)\n   \p{Block: VS}           \p{Block=Variation_Selectors} (NOT\n                             \p{Variation_Selector} NOR \p{Is_VS})\n                             (16)\n   \p{Block: VS_Sup}       \p{Block=Variation_Selectors_Supplement}\n                             (240)\n   \p{Block: Warang_Citi}  (NOT \p{Warang_Citi} NOR\n                             \p{Is_Warang_Citi}) (96: U+118A0..118FF)\n   \p{Block: Yi_Radicals}  (64: U+A490..A4CF)\n   \p{Block: Yi_Syllables} (1168: U+A000..A48F)\n   \p{Block: Yijing}       \p{Block=Yijing_Hexagram_Symbols} (64)\n   \p{Block: Yijing_Hexagram_Symbols} (Short: \p{Blk=Yijing}) (64:\n                             U+4DC0..4DFF)\n   \p{Block: Zanabazar_Square} (NOT \p{Zanabazar_Square} NOR\n                             \p{Is_Zanabazar_Square}) (80:\n                             U+11A00..11A4F)\n X \p{Block_Elements}      \p{Block=Block_Elements} (32)\n   \p{Bopo}                \p{Bopomofo} (= \p{Script_Extensions=\n                             Bopomofo}) (NOT \p{Block=Bopomofo}) (111)\n   \p{Bopomofo}            \p{Script_Extensions=Bopomofo} (Short:\n                             \p{Bopo}; NOT \p{Block=Bopomofo}) (111)\n X \p{Bopomofo_Ext}        \p{Bopomofo_Extended} (= \p{Block=\n                             Bopomofo_Extended}) (32)\n X \p{Bopomofo_Extended}   \p{Block=Bopomofo_Extended} (Short:\n                             \p{InBopomofoExt}) (32)\n X \p{Box_Drawing}         \p{Block=Box_Drawing} (128)\n   \p{Bpt: *}              \p{Bidi_Paired_Bracket_Type: *}\n   \p{Brah}                \p{Brahmi} (= \p{Script_Extensions=\n                             Brahmi}) (NOT \p{Block=Brahmi}) (109)\n   \p{Brahmi}              \p{Script_Extensions=Brahmi} (Short:\n                             \p{Brah}; NOT \p{Block=Brahmi}) (109)\n   \p{Brai}                \p{Braille} (= \p{Script_Extensions=\n                             Braille}) (256)\n   \p{Braille}             \p{Script_Extensions=Braille} (Short:\n                             \p{Brai}) (256)\n X \p{Braille_Patterns}    \p{Block=Braille_Patterns} (Short:\n                             \p{InBraille}) (256)\n   \p{Bugi}                \p{Buginese} (= \p{Script_Extensions=\n                             Buginese}) (NOT \p{Block=Buginese}) (31)\n   \p{Buginese}            \p{Script_Extensions=Buginese} (Short:\n                             \p{Bugi}; NOT \p{Block=Buginese}) (31)\n   \p{Buhd}                \p{Buhid} (= \p{Script_Extensions=Buhid})\n                             (NOT \p{Block=Buhid}) (22)\n   \p{Buhid}               \p{Script_Extensions=Buhid} (Short:\n                             \p{Buhd}; NOT \p{Block=Buhid}) (22)\n X \p{Byzantine_Music}     \p{Byzantine_Musical_Symbols} (= \p{Block=\n                             Byzantine_Musical_Symbols}) (256)\n X \p{Byzantine_Musical_Symbols} \p{Block=Byzantine_Musical_Symbols}\n                             (Short: \p{InByzantineMusic}) (256)\n   \p{C} \pC               \p{Other} (= \p{General_Category=Other})\n                             (977_573 plus all above-Unicode code\n                             points)\n   \p{Cakm}                \p{Chakma} (= \p{Script_Extensions=\n                             Chakma}) (NOT \p{Block=Chakma}) (87)\n   \p{Canadian_Aboriginal} \p{Script_Extensions=Canadian_Aboriginal}\n                             (Short: \p{Cans}) (710)\n X \p{Canadian_Syllabics}  \p{Unified_Canadian_Aboriginal_Syllabics}\n                             (= \p{Block=\n                             Unified_Canadian_Aboriginal_Syllabics})\n                             (640)\n T \p{Canonical_Combining_Class: 0} \p{Canonical_Combining_Class=\n                             Not_Reordered} (1_113_286 plus all\n                             above-Unicode code points)\n T \p{Canonical_Combining_Class: 1} \p{Canonical_Combining_Class=\n                             Overlay} (32)\n T \p{Canonical_Combining_Class: 7} \p{Canonical_Combining_Class=\n                             Nukta} (23)\n T \p{Canonical_Combining_Class: 8} \p{Canonical_Combining_Class=\n                             Kana_Voicing} (2)\n T \p{Canonical_Combining_Class: 9} \p{Canonical_Combining_Class=\n                             Virama} (54)\n T \p{Canonical_Combining_Class: 10} \p{Canonical_Combining_Class=\n                             CCC10} (1)\n   \p{Canonical_Combining_Class: CCC10} (Short: \p{Ccc=CCC10}) (1:\n                             U+05B0)\n T \p{Canonical_Combining_Class: 11} \p{Canonical_Combining_Class=\n                             CCC11} (1)\n   \p{Canonical_Combining_Class: CCC11} (Short: \p{Ccc=CCC11}) (1:\n                             U+05B1)\n T \p{Canonical_Combining_Class: 12} \p{Canonical_Combining_Class=\n                             CCC12} (1)\n   \p{Canonical_Combining_Class: CCC12} (Short: \p{Ccc=CCC12}) (1:\n                             U+05B2)\n T \p{Canonical_Combining_Class: 13} \p{Canonical_Combining_Class=\n                             CCC13} (1)\n   \p{Canonical_Combining_Class: CCC13} (Short: \p{Ccc=CCC13}) (1:\n                             U+05B3)\n T \p{Canonical_Combining_Class: 14} \p{Canonical_Combining_Class=\n                             CCC14} (1)\n   \p{Canonical_Combining_Class: CCC14} (Short: \p{Ccc=CCC14}) (1:\n                             U+05B4)\n T \p{Canonical_Combining_Class: 15} \p{Canonical_Combining_Class=\n                             CCC15} (1)\n   \p{Canonical_Combining_Class: CCC15} (Short: \p{Ccc=CCC15}) (1:\n                             U+05B5)\n T \p{Canonical_Combining_Class: 16} \p{Canonical_Combining_Class=\n                             CCC16} (1)\n   \p{Canonical_Combining_Class: CCC16} (Short: \p{Ccc=CCC16}) (1:\n                             U+05B6)\n T \p{Canonical_Combining_Class: 17} \p{Canonical_Combining_Class=\n                             CCC17} (1)\n   \p{Canonical_Combining_Class: CCC17} (Short: \p{Ccc=CCC17}) (1:\n                             U+05B7)\n T \p{Canonical_Combining_Class: 18} \p{Canonical_Combining_Class=\n                             CCC18} (2)\n   \p{Canonical_Combining_Class: CCC18} (Short: \p{Ccc=CCC18}) (2:\n                             U+05B8, U+05C7)\n T \p{Canonical_Combining_Class: 19} \p{Canonical_Combining_Class=\n                             CCC19} (2)\n   \p{Canonical_Combining_Class: CCC19} (Short: \p{Ccc=CCC19}) (2:\n                             U+05B9..05BA)\n T \p{Canonical_Combining_Class: 20} \p{Canonical_Combining_Class=\n                             CCC20} (1)\n   \p{Canonical_Combining_Class: CCC20} (Short: \p{Ccc=CCC20}) (1:\n                             U+05BB)\n T \p{Canonical_Combining_Class: 21} \p{Canonical_Combining_Class=\n                             CCC21} (1)\n   \p{Canonical_Combining_Class: CCC21} (Short: \p{Ccc=CCC21}) (1:\n                             U+05BC)\n T \p{Canonical_Combining_Class: 22} \p{Canonical_Combining_Class=\n                             CCC22} (1)\n   \p{Canonical_Combining_Class: CCC22} (Short: \p{Ccc=CCC22}) (1:\n                             U+05BD)\n T \p{Canonical_Combining_Class: 23} \p{Canonical_Combining_Class=\n                             CCC23} (1)\n   \p{Canonical_Combining_Class: CCC23} (Short: \p{Ccc=CCC23}) (1:\n                             U+05BF)\n T \p{Canonical_Combining_Class: 24} \p{Canonical_Combining_Class=\n                             CCC24} (1)\n   \p{Canonical_Combining_Class: CCC24} (Short: \p{Ccc=CCC24}) (1:\n                             U+05C1)\n T \p{Canonical_Combining_Class: 25} \p{Canonical_Combining_Class=\n                             CCC25} (1)\n   \p{Canonical_Combining_Class: CCC25} (Short: \p{Ccc=CCC25}) (1:\n                             U+05C2)\n T \p{Canonical_Combining_Class: 26} \p{Canonical_Combining_Class=\n                             CCC26} (1)\n   \p{Canonical_Combining_Class: CCC26} (Short: \p{Ccc=CCC26}) (1:\n                             U+FB1E)\n T \p{Canonical_Combining_Class: 27} \p{Canonical_Combining_Class=\n                             CCC27} (2)\n   \p{Canonical_Combining_Class: CCC27} (Short: \p{Ccc=CCC27}) (2:\n                             U+064B, U+08F0)\n T \p{Canonical_Combining_Class: 28} \p{Canonical_Combining_Class=\n                             CCC28} (2)\n   \p{Canonical_Combining_Class: CCC28} (Short: \p{Ccc=CCC28}) (2:\n                             U+064C, U+08F1)\n T \p{Canonical_Combining_Class: 29} \p{Canonical_Combining_Class=\n                             CCC29} (2)\n   \p{Canonical_Combining_Class: CCC29} (Short: \p{Ccc=CCC29}) (2:\n                             U+064D, U+08F2)\n T \p{Canonical_Combining_Class: 30} \p{Canonical_Combining_Class=\n                             CCC30} (2)\n   \p{Canonical_Combining_Class: CCC30} (Short: \p{Ccc=CCC30}) (2:\n                             U+0618, U+064E)\n T \p{Canonical_Combining_Class: 31} \p{Canonical_Combining_Class=\n                             CCC31} (2)\n   \p{Canonical_Combining_Class: CCC31} (Short: \p{Ccc=CCC31}) (2:\n                             U+0619, U+064F)\n T \p{Canonical_Combining_Class: 32} \p{Canonical_Combining_Class=\n                             CCC32} (2)\n   \p{Canonical_Combining_Class: CCC32} (Short: \p{Ccc=CCC32}) (2:\n                             U+061A, U+0650)\n T \p{Canonical_Combining_Class: 33} \p{Canonical_Combining_Class=\n                             CCC33} (1)\n   \p{Canonical_Combining_Class: CCC33} (Short: \p{Ccc=CCC33}) (1:\n                             U+0651)\n T \p{Canonical_Combining_Class: 34} \p{Canonical_Combining_Class=\n                             CCC34} (1)\n   \p{Canonical_Combining_Class: CCC34} (Short: \p{Ccc=CCC34}) (1:\n                             U+0652)\n T \p{Canonical_Combining_Class: 35} \p{Canonical_Combining_Class=\n                             CCC35} (1)\n   \p{Canonical_Combining_Class: CCC35} (Short: \p{Ccc=CCC35}) (1:\n                             U+0670)\n T \p{Canonical_Combining_Class: 36} \p{Canonical_Combining_Class=\n                             CCC36} (1)\n   \p{Canonical_Combining_Class: CCC36} (Short: \p{Ccc=CCC36}) (1:\n                             U+0711)\n T \p{Canonical_Combining_Class: 84} \p{Canonical_Combining_Class=\n                             CCC84} (1)\n   \p{Canonical_Combining_Class: CCC84} (Short: \p{Ccc=CCC84}) (1:\n                             U+0C55)\n T \p{Canonical_Combining_Class: 91} \p{Canonical_Combining_Class=\n                             CCC91} (1)\n   \p{Canonical_Combining_Class: CCC91} (Short: \p{Ccc=CCC91}) (1:\n                             U+0C56)\n T \p{Canonical_Combining_Class: 103} \p{Canonical_Combining_Class=\n                             CCC103} (2)\n   \p{Canonical_Combining_Class: CCC103} (Short: \p{Ccc=CCC103}) (2:\n                             U+0E38..0E39)\n T \p{Canonical_Combining_Class: 107} \p{Canonical_Combining_Class=\n                             CCC107} (4)\n   \p{Canonical_Combining_Class: CCC107} (Short: \p{Ccc=CCC107}) (4:\n                             U+0E48..0E4B)\n T \p{Canonical_Combining_Class: 118} \p{Canonical_Combining_Class=\n                             CCC118} (2)\n   \p{Canonical_Combining_Class: CCC118} (Short: \p{Ccc=CCC118}) (2:\n                             U+0EB8..0EB9)\n T \p{Canonical_Combining_Class: 122} \p{Canonical_Combining_Class=\n                             CCC122} (4)\n   \p{Canonical_Combining_Class: CCC122} (Short: \p{Ccc=CCC122}) (4:\n                             U+0EC8..0ECB)\n T \p{Canonical_Combining_Class: 129} \p{Canonical_Combining_Class=\n                             CCC129} (1)\n   \p{Canonical_Combining_Class: CCC129} (Short: \p{Ccc=CCC129}) (1:\n                             U+0F71)\n T \p{Canonical_Combining_Class: 130} \p{Canonical_Combining_Class=\n                             CCC130} (6)\n   \p{Canonical_Combining_Class: CCC130} (Short: \p{Ccc=CCC130}) (6:\n                             U+0F72, U+0F7A..0F7D, U+0F80)\n T \p{Canonical_Combining_Class: 132} \p{Canonical_Combining_Class=\n                             CCC132} (1)\n   \p{Canonical_Combining_Class: CCC132} (Short: \p{Ccc=CCC132}) (1:\n                             U+0F74)\n T \p{Canonical_Combining_Class: 133} \p{Canonical_Combining_Class=\n                             CCC133} (0)\n   \p{Canonical_Combining_Class: CCC133} (Short: \p{Ccc=CCC133}) (0)\n T \p{Canonical_Combining_Class: 200} \p{Canonical_Combining_Class=\n                             Attached_Below_Left} (0)\n T \p{Canonical_Combining_Class: 202} \p{Canonical_Combining_Class=\n                             Attached_Below} (5)\n T \p{Canonical_Combining_Class: 214} \p{Canonical_Combining_Class=\n                             Attached_Above} (1)\n T \p{Canonical_Combining_Class: 216} \p{Canonical_Combining_Class=\n                             Attached_Above_Right} (9)\n T \p{Canonical_Combining_Class: 218} \p{Canonical_Combining_Class=\n                             Below_Left} (1)\n T \p{Canonical_Combining_Class: 220} \p{Canonical_Combining_Class=\n                             Below} (154)\n T \p{Canonical_Combining_Class: 222} \p{Canonical_Combining_Class=\n                             Below_Right} (4)\n T \p{Canonical_Combining_Class: 224} \p{Canonical_Combining_Class=\n                             Left} (2)\n T \p{Canonical_Combining_Class: 226} \p{Canonical_Combining_Class=\n                             Right} (1)\n T \p{Canonical_Combining_Class: 228} \p{Canonical_Combining_Class=\n                             Above_Left} (5)\n T \p{Canonical_Combining_Class: 230} \p{Canonical_Combining_Class=\n                             Above} (461)\n T \p{Canonical_Combining_Class: 232} \p{Canonical_Combining_Class=\n                             Above_Right} (5)\n T \p{Canonical_Combining_Class: 233} \p{Canonical_Combining_Class=\n                             Double_Below} (4)\n T \p{Canonical_Combining_Class: 234} \p{Canonical_Combining_Class=\n                             Double_Above} (5)\n T \p{Canonical_Combining_Class: 240} \p{Canonical_Combining_Class=\n                             Iota_Subscript} (1)\n   \p{Canonical_Combining_Class: A} \p{Canonical_Combining_Class=\n                             Above} (461)\n   \p{Canonical_Combining_Class: Above} (Short: \p{Ccc=A}) (461:\n                             U+0300..0314, U+033D..0344, U+0346,\n                             U+034A..034C, U+0350..0352, U+0357 ...)\n   \p{Canonical_Combining_Class: Above_Left} (Short: \p{Ccc=AL}) (5:\n                             U+05AE, U+18A9, U+1DF7..1DF8, U+302B)\n   \p{Canonical_Combining_Class: Above_Right} (Short: \p{Ccc=AR}) (5:\n                             U+0315, U+031A, U+0358, U+1DF6, U+302C)\n   \p{Canonical_Combining_Class: AL} \p{Canonical_Combining_Class=\n                             Above_Left} (5)\n   \p{Canonical_Combining_Class: AR} \p{Canonical_Combining_Class=\n                             Above_Right} (5)\n   \p{Canonical_Combining_Class: ATA} \p{Canonical_Combining_Class=\n                             Attached_Above} (1)\n   \p{Canonical_Combining_Class: ATAR} \p{Canonical_Combining_Class=\n                             Attached_Above_Right} (9)\n   \p{Canonical_Combining_Class: ATB} \p{Canonical_Combining_Class=\n                             Attached_Below} (5)\n   \p{Canonical_Combining_Class: ATBL} \p{Canonical_Combining_Class=\n                             Attached_Below_Left} (0)\n   \p{Canonical_Combining_Class: Attached_Above} (Short: \p{Ccc=ATA})\n                             (1: U+1DCE)\n   \p{Canonical_Combining_Class: Attached_Above_Right} (Short:\n                             \p{Ccc=ATAR}) (9: U+031B, U+0F39,\n                             U+1D165..1D166, U+1D16E..1D172)\n   \p{Canonical_Combining_Class: Attached_Below} (Short: \p{Ccc=ATB})\n                             (5: U+0321..0322, U+0327..0328, U+1DD0)\n   \p{Canonical_Combining_Class: Attached_Below_Left} (Short: \p{Ccc=\n                             ATBL}) (0)\n   \p{Canonical_Combining_Class: B} \p{Canonical_Combining_Class=\n                             Below} (154)\n   \p{Canonical_Combining_Class: Below} (Short: \p{Ccc=B}) (154:\n                             U+0316..0319, U+031C..0320,\n                             U+0323..0326, U+0329..0333,\n                             U+0339..033C, U+0347..0349 ...)\n   \p{Canonical_Combining_Class: Below_Left} (Short: \p{Ccc=BL}) (1:\n                             U+302A)\n   \p{Canonical_Combining_Class: Below_Right} (Short: \p{Ccc=BR}) (4:\n                             U+059A, U+05AD, U+1939, U+302D)\n   \p{Canonical_Combining_Class: BL} \p{Canonical_Combining_Class=\n                             Below_Left} (1)\n   \p{Canonical_Combining_Class: BR} \p{Canonical_Combining_Class=\n                             Below_Right} (4)\n   \p{Canonical_Combining_Class: DA} \p{Canonical_Combining_Class=\n                             Double_Above} (5)\n   \p{Canonical_Combining_Class: DB} \p{Canonical_Combining_Class=\n                             Double_Below} (4)\n   \p{Canonical_Combining_Class: Double_Above} (Short: \p{Ccc=DA})\n                             (5: U+035D..035E, U+0360..0361, U+1DCD)\n   \p{Canonical_Combining_Class: Double_Below} (Short: \p{Ccc=DB})\n                             (4: U+035C, U+035F, U+0362, U+1DFC)\n   \p{Canonical_Combining_Class: Iota_Subscript} (Short: \p{Ccc=IS})\n                             (1: U+0345)\n   \p{Canonical_Combining_Class: IS} \p{Canonical_Combining_Class=\n                             Iota_Subscript} (1)\n   \p{Canonical_Combining_Class: Kana_Voicing} (Short: \p{Ccc=KV})\n                             (2: U+3099..309A)\n   \p{Canonical_Combining_Class: KV} \p{Canonical_Combining_Class=\n                             Kana_Voicing} (2)\n   \p{Canonical_Combining_Class: L} \p{Canonical_Combining_Class=\n                             Left} (2)\n   \p{Canonical_Combining_Class: Left} (Short: \p{Ccc=L}) (2:\n                             U+302E..302F)\n   \p{Canonical_Combining_Class: NK} \p{Canonical_Combining_Class=\n                             Nukta} (23)\n   \p{Canonical_Combining_Class: Not_Reordered} (Short: \p{Ccc=NR})\n                             (1_113_286 plus all above-Unicode code\n                             points: U+0000..02FF, U+034F,\n                             U+0370..0482, U+0488..0590, U+05BE,\n                             U+05C0 ...)\n   \p{Canonical_Combining_Class: NR} \p{Canonical_Combining_Class=\n                             Not_Reordered} (1_113_286 plus all\n                             above-Unicode code points)\n   \p{Canonical_Combining_Class: Nukta} (Short: \p{Ccc=NK}) (23:\n                             U+093C, U+09BC, U+0A3C, U+0ABC, U+0B3C,\n                             U+0CBC ...)\n   \p{Canonical_Combining_Class: OV} \p{Canonical_Combining_Class=\n                             Overlay} (32)\n   \p{Canonical_Combining_Class: Overlay} (Short: \p{Ccc=OV}) (32:\n                             U+0334..0338, U+1CD4, U+1CE2..1CE8,\n                             U+20D2..20D3, U+20D8..20DA, U+20E5..20E6\n                             ...)\n   \p{Canonical_Combining_Class: R} \p{Canonical_Combining_Class=\n                             Right} (1)\n   \p{Canonical_Combining_Class: Right} (Short: \p{Ccc=R}) (1:\n                             U+1D16D)\n   \p{Canonical_Combining_Class: Virama} (Short: \p{Ccc=VR}) (54:\n                             U+094D, U+09CD, U+0A4D, U+0ACD, U+0B4D,\n                             U+0BCD ...)\n   \p{Canonical_Combining_Class: VR} \p{Canonical_Combining_Class=\n                             Virama} (54)\n   \p{Cans}                \p{Canadian_Aboriginal} (=\n                             \p{Script_Extensions=\n                             Canadian_Aboriginal}) (710)\n   \p{Cari}                \p{Carian} (= \p{Script_Extensions=\n                             Carian}) (NOT \p{Block=Carian}) (49)\n   \p{Carian}              \p{Script_Extensions=Carian} (Short:\n                             \p{Cari}; NOT \p{Block=Carian}) (49)\n   \p{Case_Ignorable}      \p{Case_Ignorable=Y} (Short: \p{CI}) (2314)\n   \p{Case_Ignorable: N*}  (Short: \p{CI=N}, \P{CI}) (1_111_798 plus\n                             all above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\(\)*+,\-\/0-9;<=>?\@A-\n                             Z\[\\\]_a-z\{\|\}~\x7f-\xa7\xa9-\n                             \xac\xae\xb0-\xb3\xb5-\xb6\xb9-\xff],\n                             U+0100..02AF, U+0370..0373,\n                             U+0376..0379, U+037B..0383, U+0386 ...)\n   \p{Case_Ignorable: Y*}  (Short: \p{CI=Y}, \p{CI}) (2314:\n                             [\'.:\^`\xa8\xad\xaf\xb4\xb7-\xb8],\n                             U+02B0..036F, U+0374..0375, U+037A,\n                             U+0384..0385, U+0387 ...)\n   \p{Cased}               \p{Cased=Y} (4105)\n   \p{Cased: N*}           (Single: \P{Cased}) (1_110_007 plus all\n                             above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`\{\|\}~\x7f-\xa9\xab-\n                             \xb4\xb6-\xb9\xbb-\xbf\xd7\xf7], U+01BB,\n                             U+01C0..01C3, U+0294, U+02B9..02BF,\n                             U+02C2..02DF ...)\n   \p{Cased: Y*}           (Single: \p{Cased}) (4105: [A-Za-\n                             z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\n                             \xff], U+0100..01BA, U+01BC..01BF,\n                             U+01C4..0293, U+0295..02B8, U+02C0..02C1\n                             ...)\n   \p{Cased_Letter}        \p{General_Category=Cased_Letter} (Short:\n                             \p{LC}) (3796)\n   \p{Category: *}         \p{General_Category: *}\n   \p{Caucasian_Albanian}  \p{Script_Extensions=Caucasian_Albanian}\n                             (Short: \p{Aghb}; NOT \p{Block=\n                             Caucasian_Albanian}) (53)\n   \p{Cc}                  \p{XPosixCntrl} (= \p{General_Category=\n                             Control}) (65)\n   \p{Ccc: *}              \p{Canonical_Combining_Class: *}\n   \p{CE}                  \p{Composition_Exclusion} (=\n                             \p{Composition_Exclusion=Y}) (81)\n   \p{CE: *}               \p{Composition_Exclusion: *}\n   \p{Cf}                  \p{Format} (= \p{General_Category=Format})\n                             (151)\n   \p{Chakma}              \p{Script_Extensions=Chakma} (Short:\n                             \p{Cakm}; NOT \p{Block=Chakma}) (87)\n   \p{Cham}                \p{Script_Extensions=Cham} (NOT \p{Block=\n                             Cham}) (83)\n   \p{Changes_When_Casefolded} \p{Changes_When_Casefolded=Y} (Short:\n                             \p{CWCF}) (1377)\n   \p{Changes_When_Casefolded: N*} (Short: \p{CWCF=N}, \P{CWCF})\n                             (1_112_735 plus all above-Unicode code\n                             points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`a-z\{\|\}~\x7f-\xb4\xb6-\n                             \xbf\xd7\xe0-\xff], U+0101, U+0103,\n                             U+0105, U+0107, U+0109 ...)\n   \p{Changes_When_Casefolded: Y*} (Short: \p{CWCF=Y}, \p{CWCF})\n                             (1377: [A-Z\xb5\xc0-\xd6\xd8-\xdf],\n                             U+0100, U+0102, U+0104, U+0106, U+0108\n                             ...)\n   \p{Changes_When_Casemapped} \p{Changes_When_Casemapped=Y} (Short:\n                             \p{CWCM}) (2669)\n   \p{Changes_When_Casemapped: N*} (Short: \p{CWCM=N}, \P{CWCM})\n                             (1_111_443 plus all above-Unicode code\n                             points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`\{\|\}~\x7f-\xb4\xb6-\n                             \xbf\xd7\xf7], U+0138, U+018D, U+019B,\n                             U+01AA..01AB, U+01BA..01BB ...)\n   \p{Changes_When_Casemapped: Y*} (Short: \p{CWCM=Y}, \p{CWCM})\n                             (2669: [A-Za-z\xb5\xc0-\xd6\xd8-\n                             \xf6\xf8-\xff], U+0100..0137,\n                             U+0139..018C, U+018E..019A,\n                             U+019C..01A9, U+01AC..01B9 ...)\n   \p{Changes_When_Lowercased} \p{Changes_When_Lowercased=Y} (Short:\n                             \p{CWL}) (1304)\n   \p{Changes_When_Lowercased: N*} (Short: \p{CWL=N}, \P{CWL})\n                             (1_112_808 plus all above-Unicode code\n                             points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`a-z\{\|\}~\x7f-\n                             \xbf\xd7\xdf-\xff], U+0101, U+0103,\n                             U+0105, U+0107, U+0109 ...)\n   \p{Changes_When_Lowercased: Y*} (Short: \p{CWL=Y}, \p{CWL}) (1304:\n                             [A-Z\xc0-\xd6\xd8-\xde], U+0100, U+0102,\n                             U+0104, U+0106, U+0108 ...)\n   \p{Changes_When_NFKC_Casefolded} \p{Changes_When_NFKC_Casefolded=\n                             Y} (Short: \p{CWKCF}) (10_227)\n   \p{Changes_When_NFKC_Casefolded: N*} (Short: \p{CWKCF=N},\n                             \P{CWKCF}) (1_103_885 plus all above-\n                             Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`a-z\{\|\}~\x7f-\x9f\xa1-\n                             \xa7\xa9\xab-\xac\xae\xb0-\xb1\xb6-\n                             \xb7\xbb\xbf\xd7\xe0-\xff], U+0101,\n                             U+0103, U+0105, U+0107, U+0109 ...)\n   \p{Changes_When_NFKC_Casefolded: Y*} (Short: \p{CWKCF=Y},\n                             \p{CWKCF}) (10_227: [A-\n                             Z\xa0\xa8\xaa\xad\xaf\xb2-\xb5\xb8-\n                             \xba\xbc-\xbe\xc0-\xd6\xd8-\xdf],\n                             U+0100, U+0102, U+0104, U+0106, U+0108\n                             ...)\n   \p{Changes_When_Titlecased} \p{Changes_When_Titlecased=Y} (Short:\n                             \p{CWT}) (1369)\n   \p{Changes_When_Titlecased: N*} (Short: \p{CWT=N}, \P{CWT})\n                             (1_112_743 plus all above-Unicode code\n                             points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-\n                             Z\[\\\]\^_`\{\|\}~\x7f-\xb4\xb6-\n                             \xde\xf7], U+0100, U+0102, U+0104,\n                             U+0106, U+0108 ...)\n   \p{Changes_When_Titlecased: Y*} (Short: \p{CWT=Y}, \p{CWT}) (1369:\n                             [a-z\xb5\xdf-\xf6\xf8-\xff], U+0101,\n                             U+0103, U+0105, U+0107, U+0109 ...)\n   \p{Changes_When_Uppercased} \p{Changes_When_Uppercased=Y} (Short:\n                             \p{CWU}) (1396)\n   \p{Changes_When_Uppercased: N*} (Short: \p{CWU=N}, \P{CWU})\n                             (1_112_716 plus all above-Unicode code\n                             points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-\n                             Z\[\\\]\^_`\{\|\}~\x7f-\xb4\xb6-\n                             \xde\xf7], U+0100, U+0102, U+0104,\n                             U+0106, U+0108 ...)\n   \p{Changes_When_Uppercased: Y*} (Short: \p{CWU=Y}, \p{CWU}) (1396:\n                             [a-z\xb5\xdf-\xf6\xf8-\xff], U+0101,\n                             U+0103, U+0105, U+0107, U+0109 ...)\n   \p{Cher}                \p{Cherokee} (= \p{Script_Extensions=\n                             Cherokee}) (NOT \p{Block=Cherokee}) (172)\n   \p{Cherokee}            \p{Script_Extensions=Cherokee} (Short:\n                             \p{Cher}; NOT \p{Block=Cherokee}) (172)\n X \p{Cherokee_Sup}        \p{Cherokee_Supplement} (= \p{Block=\n                             Cherokee_Supplement}) (80)\n X \p{Cherokee_Supplement} \p{Block=Cherokee_Supplement} (Short:\n                             \p{InCherokeeSup}) (80)\n   \p{CI}                  \p{Case_Ignorable} (= \p{Case_Ignorable=\n                             Y}) (2314)\n   \p{CI: *}               \p{Case_Ignorable: *}\n X \p{CJK}                 \p{CJK_Unified_Ideographs} (= \p{Block=\n                             CJK_Unified_Ideographs}) (20_992)\n X \p{CJK_Compat}          \p{CJK_Compatibility} (= \p{Block=\n                             CJK_Compatibility}) (256)\n X \p{CJK_Compat_Forms}    \p{CJK_Compatibility_Forms} (= \p{Block=\n                             CJK_Compatibility_Forms}) (32)\n X \p{CJK_Compat_Ideographs} \p{CJK_Compatibility_Ideographs} (=\n                             \p{Block=CJK_Compatibility_Ideographs})\n                             (512)\n X \p{CJK_Compat_Ideographs_Sup}\n                             \p{CJK_Compatibility_Ideographs_-\n                             Supplement} (= \p{Block=\n                             CJK_Compatibility_Ideographs_-\n                             Supplement}) (544)\n X \p{CJK_Compatibility}   \p{Block=CJK_Compatibility} (Short:\n                             \p{InCJKCompat}) (256)\n X \p{CJK_Compatibility_Forms} \p{Block=CJK_Compatibility_Forms}\n                             (Short: \p{InCJKCompatForms}) (32)\n X \p{CJK_Compatibility_Ideographs} \p{Block=\n                             CJK_Compatibility_Ideographs} (Short:\n                             \p{InCJKCompatIdeographs}) (512)\n X \p{CJK_Compatibility_Ideographs_Supplement} \p{Block=\n                             CJK_Compatibility_Ideographs_Supplement}\n                             (Short: \p{InCJKCompatIdeographsSup})\n                             (544)\n X \p{CJK_Ext_A}           \p{CJK_Unified_Ideographs_Extension_A} (=\n                             \p{Block=\n                             CJK_Unified_Ideographs_Extension_A})\n                             (6592)\n X \p{CJK_Ext_B}           \p{CJK_Unified_Ideographs_Extension_B} (=\n                             \p{Block=\n                             CJK_Unified_Ideographs_Extension_B})\n                             (42_720)\n X \p{CJK_Ext_C}           \p{CJK_Unified_Ideographs_Extension_C} (=\n                             \p{Block=\n                             CJK_Unified_Ideographs_Extension_C})\n                             (4160)\n X \p{CJK_Ext_D}           \p{CJK_Unified_Ideographs_Extension_D} (=\n                             \p{Block=\n                             CJK_Unified_Ideographs_Extension_D})\n                             (224)\n X \p{CJK_Ext_E}           \p{CJK_Unified_Ideographs_Extension_E} (=\n                             \p{Block=\n                             CJK_Unified_Ideographs_Extension_E})\n                             (5776)\n X \p{CJK_Ext_F}           \p{CJK_Unified_Ideographs_Extension_F} (=\n                             \p{Block=\n                             CJK_Unified_Ideographs_Extension_F})\n                             (7488)\n X \p{CJK_Radicals_Sup}    \p{CJK_Radicals_Supplement} (= \p{Block=\n                             CJK_Radicals_Supplement}) (128)\n X \p{CJK_Radicals_Supplement} \p{Block=CJK_Radicals_Supplement}\n                             (Short: \p{InCJKRadicalsSup}) (128)\n X \p{CJK_Strokes}         \p{Block=CJK_Strokes} (48)\n X \p{CJK_Symbols}         \p{CJK_Symbols_And_Punctuation} (=\n                             \p{Block=CJK_Symbols_And_Punctuation})\n                             (64)\n X \p{CJK_Symbols_And_Punctuation} \p{Block=\n                             CJK_Symbols_And_Punctuation} (Short:\n                             \p{InCJKSymbols}) (64)\n X \p{CJK_Unified_Ideographs} \p{Block=CJK_Unified_Ideographs}\n                             (Short: \p{InCJK}) (20_992)\n X \p{CJK_Unified_Ideographs_Extension_A} \p{Block=\n                             CJK_Unified_Ideographs_Extension_A}\n                             (Short: \p{InCJKExtA}) (6592)\n X \p{CJK_Unified_Ideographs_Extension_B} \p{Block=\n                             CJK_Unified_Ideographs_Extension_B}\n                             (Short: \p{InCJKExtB}) (42_720)\n X \p{CJK_Unified_Ideographs_Extension_C} \p{Block=\n                             CJK_Unified_Ideographs_Extension_C}\n                             (Short: \p{InCJKExtC}) (4160)\n X \p{CJK_Unified_Ideographs_Extension_D} \p{Block=\n                             CJK_Unified_Ideographs_Extension_D}\n                             (Short: \p{InCJKExtD}) (224)\n X \p{CJK_Unified_Ideographs_Extension_E} \p{Block=\n                             CJK_Unified_Ideographs_Extension_E}\n                             (Short: \p{InCJKExtE}) (5776)\n X \p{CJK_Unified_Ideographs_Extension_F} \p{Block=\n                             CJK_Unified_Ideographs_Extension_F}\n                             (Short: \p{InCJKExtF}) (7488)\n   \p{Close_Punctuation}   \p{General_Category=Close_Punctuation}\n                             (Short: \p{Pe}) (73)\n   \p{Cn}                  \p{Unassigned} (= \p{General_Category=\n                             Unassigned}) (837_841 plus all above-\n                             Unicode code points)\n   \p{Cntrl}               \p{XPosixCntrl} (= \p{General_Category=\n                             Control}) (65)\n   \p{Co}                  \p{Private_Use} (= \p{General_Category=\n                             Private_Use}) (NOT \p{Private_Use_Area})\n                             (137_468)\n X \p{Combining_Diacritical_Marks} \p{Block=\n                             Combining_Diacritical_Marks} (Short:\n                             \p{InDiacriticals}) (112)\n X \p{Combining_Diacritical_Marks_Extended} \p{Block=\n                             Combining_Diacritical_Marks_Extended}\n                             (Short: \p{InDiacriticalsExt}) (80)\n X \p{Combining_Diacritical_Marks_For_Symbols} \p{Block=\n                             Combining_Diacritical_Marks_For_Symbols}\n                             (Short: \p{InDiacriticalsForSymbols})\n                             (48)\n X \p{Combining_Diacritical_Marks_Supplement} \p{Block=\n                             Combining_Diacritical_Marks_Supplement}\n                             (Short: \p{InDiacriticalsSup}) (64)\n X \p{Combining_Half_Marks} \p{Block=Combining_Half_Marks} (Short:\n                             \p{InHalfMarks}) (16)\n   \p{Combining_Mark}      \p{Mark} (= \p{General_Category=Mark})\n                             (2177)\n X \p{Combining_Marks_For_Symbols}\n                             \p{Combining_Diacritical_Marks_For_-\n                             Symbols} (= \p{Block=\n                             Combining_Diacritical_Marks_For_-\n                             Symbols}) (48)\n   \p{Common}              \p{Script_Extensions=Common} (Short:\n                             \p{Zyyy}) (6947)\n X \p{Common_Indic_Number_Forms} \p{Block=Common_Indic_Number_Forms}\n                             (Short: \p{InIndicNumberForms}) (16)\n   \p{Comp_Ex}             \p{Full_Composition_Exclusion} (=\n                             \p{Full_Composition_Exclusion=Y}) (1120)\n   \p{Comp_Ex: *}          \p{Full_Composition_Exclusion: *}\n X \p{Compat_Jamo}         \p{Hangul_Compatibility_Jamo} (= \p{Block=\n                             Hangul_Compatibility_Jamo}) (96)\n   \p{Composition_Exclusion} \p{Composition_Exclusion=Y} (Short:\n                             \p{CE}) (81)\n   \p{Composition_Exclusion: N*} (Short: \p{CE=N}, \P{CE}) (1_114_031\n                             plus all above-Unicode code points:\n                             U+0000..0957, U+0960..09DB, U+09DE,\n                             U+09E0..0A32, U+0A34..0A35, U+0A37..0A58\n                             ...)\n   \p{Composition_Exclusion: Y*} (Short: \p{CE=Y}, \p{CE}) (81:\n                             U+0958..095F, U+09DC..09DD, U+09DF,\n                             U+0A33, U+0A36, U+0A59..0A5B ...)\n   \p{Connector_Punctuation} \p{General_Category=\n                             Connector_Punctuation} (Short: \p{Pc})\n                             (10)\n   \p{Control}             \p{XPosixCntrl} (= \p{General_Category=\n                             Control}) (65)\n X \p{Control_Pictures}    \p{Block=Control_Pictures} (64)\n   \p{Copt}                \p{Coptic} (= \p{Script_Extensions=\n                             Coptic}) (NOT \p{Block=Coptic}) (165)\n   \p{Coptic}              \p{Script_Extensions=Coptic} (Short:\n                             \p{Copt}; NOT \p{Block=Coptic}) (165)\n X \p{Coptic_Epact_Numbers} \p{Block=Coptic_Epact_Numbers} (32)\n X \p{Counting_Rod}        \p{Counting_Rod_Numerals} (= \p{Block=\n                             Counting_Rod_Numerals}) (32)\n X \p{Counting_Rod_Numerals} \p{Block=Counting_Rod_Numerals} (Short:\n                             \p{InCountingRod}) (32)\n   \p{Cprt}                \p{Cypriot} (= \p{Script_Extensions=\n                             Cypriot}) (112)\n   \p{Cs}                  \p{Surrogate} (= \p{General_Category=\n                             Surrogate}) (2048)\n   \p{Cuneiform}           \p{Script_Extensions=Cuneiform} (Short:\n                             \p{Xsux}; NOT \p{Block=Cuneiform}) (1234)\n X \p{Cuneiform_Numbers}   \p{Cuneiform_Numbers_And_Punctuation} (=\n                             \p{Block=\n                             Cuneiform_Numbers_And_Punctuation}) (128)\n X \p{Cuneiform_Numbers_And_Punctuation} \p{Block=\n                             Cuneiform_Numbers_And_Punctuation}\n                             (Short: \p{InCuneiformNumbers}) (128)\n   \p{Currency_Symbol}     \p{General_Category=Currency_Symbol}\n                             (Short: \p{Sc}) (54)\n X \p{Currency_Symbols}    \p{Block=Currency_Symbols} (48)\n   \p{CWCF}                \p{Changes_When_Casefolded} (=\n                             \p{Changes_When_Casefolded=Y}) (1377)\n   \p{CWCF: *}             \p{Changes_When_Casefolded: *}\n   \p{CWCM}                \p{Changes_When_Casemapped} (=\n                             \p{Changes_When_Casemapped=Y}) (2669)\n   \p{CWCM: *}             \p{Changes_When_Casemapped: *}\n   \p{CWKCF}               \p{Changes_When_NFKC_Casefolded} (=\n                             \p{Changes_When_NFKC_Casefolded=Y})\n                             (10_227)\n   \p{CWKCF: *}            \p{Changes_When_NFKC_Casefolded: *}\n   \p{CWL}                 \p{Changes_When_Lowercased} (=\n                             \p{Changes_When_Lowercased=Y}) (1304)\n   \p{CWL: *}              \p{Changes_When_Lowercased: *}\n   \p{CWT}                 \p{Changes_When_Titlecased} (=\n                             \p{Changes_When_Titlecased=Y}) (1369)\n   \p{CWT: *}              \p{Changes_When_Titlecased: *}\n   \p{CWU}                 \p{Changes_When_Uppercased} (=\n                             \p{Changes_When_Uppercased=Y}) (1396)\n   \p{CWU: *}              \p{Changes_When_Uppercased: *}\n   \p{Cypriot}             \p{Script_Extensions=Cypriot} (Short:\n                             \p{Cprt}) (112)\n X \p{Cypriot_Syllabary}   \p{Block=Cypriot_Syllabary} (64)\n   \p{Cyrillic}            \p{Script_Extensions=Cyrillic} (Short:\n                             \p{Cyrl}; NOT \p{Block=Cyrillic}) (446)\n X \p{Cyrillic_Ext_A}      \p{Cyrillic_Extended_A} (= \p{Block=\n                             Cyrillic_Extended_A}) (32)\n X \p{Cyrillic_Ext_B}      \p{Cyrillic_Extended_B} (= \p{Block=\n                             Cyrillic_Extended_B}) (96)\n X \p{Cyrillic_Ext_C}      \p{Cyrillic_Extended_C} (= \p{Block=\n                             Cyrillic_Extended_C}) (16)\n X \p{Cyrillic_Extended_A} \p{Block=Cyrillic_Extended_A} (Short:\n                             \p{InCyrillicExtA}) (32)\n X \p{Cyrillic_Extended_B} \p{Block=Cyrillic_Extended_B} (Short:\n                             \p{InCyrillicExtB}) (96)\n X \p{Cyrillic_Extended_C} \p{Block=Cyrillic_Extended_C} (Short:\n                             \p{InCyrillicExtC}) (16)\n X \p{Cyrillic_Sup}        \p{Cyrillic_Supplement} (= \p{Block=\n                             Cyrillic_Supplement}) (48)\n X \p{Cyrillic_Supplement} \p{Block=Cyrillic_Supplement} (Short:\n                             \p{InCyrillicSup}) (48)\n X \p{Cyrillic_Supplementary} \p{Cyrillic_Supplement} (= \p{Block=\n                             Cyrillic_Supplement}) (48)\n   \p{Cyrl}                \p{Cyrillic} (= \p{Script_Extensions=\n                             Cyrillic}) (NOT \p{Block=Cyrillic}) (446)\n   \p{Dash}                \p{Dash=Y} (28)\n   \p{Dash: N*}            (Single: \P{Dash}) (1_114_084 plus all\n                             above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,.\/0-9:;<=>?\@A-\n                             Z\[\\\]\^_`a-z\{\|\}~\x7f-\xff],\n                             U+0100..0589, U+058B..05BD,\n                             U+05BF..13FF, U+1401..1805, U+1807..200F\n                             ...)\n   \p{Dash: Y*}            (Single: \p{Dash}) (28: [\-], U+058A,\n                             U+05BE, U+1400, U+1806, U+2010..2015 ...)\n   \p{Dash_Punctuation}    \p{General_Category=Dash_Punctuation}\n                             (Short: \p{Pd}) (24)\n   \p{Decimal_Number}      \p{XPosixDigit} (= \p{General_Category=\n                             Decimal_Number}) (590)\n   \p{Decomposition_Type: Can} \p{Decomposition_Type=Canonical}\n                             (13_232)\n   \p{Decomposition_Type: Canonical} (Short: \p{Dt=Can}) (13_232:\n                             [\xc0-\xc5\xc7-\xcf\xd1-\xd6\xd9-\n                             \xdd\xe0-\xe5\xe7-\xef\xf1-\xf6\xf9-\n                             \xfd\xff], U+0100..010F, U+0112..0125,\n                             U+0128..0130, U+0134..0137, U+0139..013E\n                             ...)\n   \p{Decomposition_Type: Circle} (Short: \p{Dt=Enc}) (240:\n                             U+2460..2473, U+24B6..24EA,\n                             U+3244..3247, U+3251..327E,\n                             U+3280..32BF, U+32D0..32FE ...)\n   \p{Decomposition_Type: Com} \p{Decomposition_Type=Compat} (720)\n   \p{Decomposition_Type: Compat} (Short: \p{Dt=Com}) (720:\n                             [\xa8\xaf\xb4-\xb5\xb8], U+0132..0133,\n                             U+013F..0140, U+0149, U+017F,\n                             U+01C4..01CC ...)\n   \p{Decomposition_Type: Enc} \p{Decomposition_Type=Circle} (240)\n   \p{Decomposition_Type: Fin} \p{Decomposition_Type=Final} (240)\n   \p{Decomposition_Type: Final} (Short: \p{Dt=Fin}) (240: U+FB51,\n                             U+FB53, U+FB57, U+FB5B, U+FB5F, U+FB63\n                             ...)\n   \p{Decomposition_Type: Font} (Short: \p{Dt=Font}) (1184: U+2102,\n                             U+210A..2113, U+2115, U+2119..211D,\n                             U+2124, U+2128 ...)\n   \p{Decomposition_Type: Fra} \p{Decomposition_Type=Fraction} (20)\n   \p{Decomposition_Type: Fraction} (Short: \p{Dt=Fra}) (20: [\xbc-\n                             \xbe], U+2150..215F, U+2189)\n   \p{Decomposition_Type: Init} \p{Decomposition_Type=Initial} (171)\n   \p{Decomposition_Type: Initial} (Short: \p{Dt=Init}) (171: U+FB54,\n                             U+FB58, U+FB5C, U+FB60, U+FB64, U+FB68\n                             ...)\n   \p{Decomposition_Type: Iso} \p{Decomposition_Type=Isolated} (238)\n   \p{Decomposition_Type: Isolated} (Short: \p{Dt=Iso}) (238: U+FB50,\n                             U+FB52, U+FB56, U+FB5A, U+FB5E, U+FB62\n                             ...)\n   \p{Decomposition_Type: Med} \p{Decomposition_Type=Medial} (82)\n   \p{Decomposition_Type: Medial} (Short: \p{Dt=Med}) (82: U+FB55,\n                             U+FB59, U+FB5D, U+FB61, U+FB65, U+FB69\n                             ...)\n   \p{Decomposition_Type: Nar} \p{Decomposition_Type=Narrow} (122)\n   \p{Decomposition_Type: Narrow} (Short: \p{Dt=Nar}) (122:\n                             U+FF61..FFBE, U+FFC2..FFC7,\n                             U+FFCA..FFCF, U+FFD2..FFD7,\n                             U+FFDA..FFDC, U+FFE8..FFEE)\n   \p{Decomposition_Type: Nb} \p{Decomposition_Type=Nobreak} (5)\n   \p{Decomposition_Type: Nobreak} (Short: \p{Dt=Nb}) (5: [\xa0],\n                             U+0F0C, U+2007, U+2011, U+202F)\n   \p{Decomposition_Type: Non_Canon} \p{Decomposition_Type=\n                             Non_Canonical} (Perl extension) (3662)\n   \p{Decomposition_Type: Non_Canonical} Union of all non-canonical\n                             decompositions (Short: \p{Dt=NonCanon})\n                             (Perl extension) (3662:\n                             [\xa0\xa8\xaa\xaf\xb2-\xb5\xb8-\xba\xbc-\n                             \xbe], U+0132..0133, U+013F..0140,\n                             U+0149, U+017F, U+01C4..01CC ...)\n   \p{Decomposition_Type: None} (Short: \p{Dt=None}) (1_097_218 plus\n                             all above-Unicode code points: [\x00-\n                             \x9f\xa1-\xa7\xa9\xab-\xae\xb0-\xb1\xb6-\n                             \xb7\xbb\xbf\xc6\xd0\xd7-\xd8\xde-\n                             \xdf\xe6\xf0\xf7-\xf8\xfe],\n                             U+0110..0111, U+0126..0127, U+0131,\n                             U+0138, U+0141..0142 ...)\n   \p{Decomposition_Type: Small} (Short: \p{Dt=Sml}) (26:\n                             U+FE50..FE52, U+FE54..FE66, U+FE68..FE6B)\n   \p{Decomposition_Type: Sml} \p{Decomposition_Type=Small} (26)\n   \p{Decomposition_Type: Sqr} \p{Decomposition_Type=Square} (285)\n   \p{Decomposition_Type: Square} (Short: \p{Dt=Sqr}) (285: U+3250,\n                             U+32CC..32CF, U+3300..3357,\n                             U+3371..33DF, U+33FF, U+1F130..1F14F ...)\n   \p{Decomposition_Type: Sub} (Short: \p{Dt=Sub}) (38: U+1D62..1D6A,\n                             U+2080..208E, U+2090..209C, U+2C7C)\n   \p{Decomposition_Type: Sup} \p{Decomposition_Type=Super} (152)\n   \p{Decomposition_Type: Super} (Short: \p{Dt=Sup}) (152: [\xaa\xb2-\n                             \xb3\xb9-\xba], U+02B0..02B8,\n                             U+02E0..02E4, U+10FC, U+1D2C..1D2E,\n                             U+1D30..1D3A ...)\n   \p{Decomposition_Type: Vert} \p{Decomposition_Type=Vertical} (35)\n   \p{Decomposition_Type: Vertical} (Short: \p{Dt=Vert}) (35: U+309F,\n                             U+30FF, U+FE10..FE19, U+FE30..FE44,\n                             U+FE47..FE48)\n   \p{Decomposition_Type: Wide} (Short: \p{Dt=Wide}) (104: U+3000,\n                             U+FF01..FF60, U+FFE0..FFE6)\n   \p{Default_Ignorable_Code_Point} \p{Default_Ignorable_Code_Point=\n                             Y} (Short: \p{DI}) (4173)\n   \p{Default_Ignorable_Code_Point: N*} (Short: \p{DI=N}, \P{DI})\n                             (1_109_939 plus all above-Unicode code\n                             points: [\x00-\xac\xae-\xff],\n                             U+0100..034E, U+0350..061B,\n                             U+061D..115E, U+1161..17B3, U+17B6..180A\n                             ...)\n   \p{Default_Ignorable_Code_Point: Y*} (Short: \p{DI=Y}, \p{DI})\n                             (4173: [\xad], U+034F, U+061C,\n                             U+115F..1160, U+17B4..17B5, U+180B..180E\n                             ...)\n   \p{Dep}                 \p{Deprecated} (= \p{Deprecated=Y}) (15)\n   \p{Dep: *}              \p{Deprecated: *}\n   \p{Deprecated}          \p{Deprecated=Y} (Short: \p{Dep}) (15)\n   \p{Deprecated: N*}      (Short: \p{Dep=N}, \P{Dep}) (1_114_097\n                             plus all above-Unicode code points:\n                             U+0000..0148, U+014A..0672,\n                             U+0674..0F76, U+0F78, U+0F7A..17A2,\n                             U+17A5..2069 ...)\n   \p{Deprecated: Y*}      (Short: \p{Dep=Y}, \p{Dep}) (15: U+0149,\n                             U+0673, U+0F77, U+0F79, U+17A3..17A4,\n                             U+206A..206F ...)\n   \p{Deseret}             \p{Script_Extensions=Deseret} (Short:\n                             \p{Dsrt}) (80)\n   \p{Deva}                \p{Devanagari} (= \p{Script_Extensions=\n                             Devanagari}) (NOT \p{Block=Devanagari})\n                             (210)\n   \p{Devanagari}          \p{Script_Extensions=Devanagari} (Short:\n                             \p{Deva}; NOT \p{Block=Devanagari}) (210)\n X \p{Devanagari_Ext}      \p{Devanagari_Extended} (= \p{Block=\n                             Devanagari_Extended}) (32)\n X \p{Devanagari_Extended} \p{Block=Devanagari_Extended} (Short:\n                             \p{InDevanagariExt}) (32)\n   \p{DI}                  \p{Default_Ignorable_Code_Point} (=\n                             \p{Default_Ignorable_Code_Point=Y})\n                             (4173)\n   \p{DI: *}               \p{Default_Ignorable_Code_Point: *}\n   \p{Dia}                 \p{Diacritic} (= \p{Diacritic=Y}) (798)\n   \p{Dia: *}              \p{Diacritic: *}\n   \p{Diacritic}           \p{Diacritic=Y} (Short: \p{Dia}) (798)\n   \p{Diacritic: N*}       (Short: \p{Dia=N}, \P{Dia}) (1_113_314\n                             plus all above-Unicode code points:\n                             [\x00-\x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@A-Z\[\\\]_a-z\{\|\}~\x7f-\xa7\xa9-\n                             \xae\xb0-\xb3\xb5-\xb6\xb9-\xff],\n                             U+0100..02AF, U+034F, U+0358..035C,\n                             U+0363..0373, U+0376..0379 ...)\n   \p{Diacritic: Y*}       (Short: \p{Dia=Y}, \p{Dia}) (798:\n                             [\^`\xa8\xaf\xb4\xb7-\xb8],\n                             U+02B0..034E, U+0350..0357,\n                             U+035D..0362, U+0374..0375, U+037A ...)\n X \p{Diacriticals}        \p{Combining_Diacritical_Marks} (=\n                             \p{Block=Combining_Diacritical_Marks})\n                             (112)\n X \p{Diacriticals_Ext}    \p{Combining_Diacritical_Marks_Extended}\n                             (= \p{Block=\n                             Combining_Diacritical_Marks_Extended})\n                             (80)\n X \p{Diacriticals_For_Symbols}\n                             \p{Combining_Diacritical_Marks_For_-\n                             Symbols} (= \p{Block=\n                             Combining_Diacritical_Marks_For_-\n                             Symbols}) (48)\n X \p{Diacriticals_Sup}    \p{Combining_Diacritical_Marks_Supplement}\n                             (= \p{Block=\n                             Combining_Diacritical_Marks_Supplement})\n                             (64)\n   \p{Digit}               \p{XPosixDigit} (= \p{General_Category=\n                             Decimal_Number}) (590)\n X \p{Dingbats}            \p{Block=Dingbats} (192)\n X \p{Domino}              \p{Domino_Tiles} (= \p{Block=\n                             Domino_Tiles}) (112)\n X \p{Domino_Tiles}        \p{Block=Domino_Tiles} (Short:\n                             \p{InDomino}) (112)\n   \p{Dsrt}                \p{Deseret} (= \p{Script_Extensions=\n                             Deseret}) (80)\n   \p{Dt: *}               \p{Decomposition_Type: *}\n   \p{Dupl}                \p{Duployan} (= \p{Script_Extensions=\n                             Duployan}) (NOT \p{Block=Duployan}) (147)\n   \p{Duployan}            \p{Script_Extensions=Duployan} (Short:\n                             \p{Dupl}; NOT \p{Block=Duployan}) (147)\n   \p{Ea: *}               \p{East_Asian_Width: *}\n X \p{Early_Dynastic_Cuneiform} \p{Block=Early_Dynastic_Cuneiform}\n                             (208)\n   \p{East_Asian_Width: A} \p{East_Asian_Width=Ambiguous} (138_739)\n   \p{East_Asian_Width: Ambiguous} (Short: \p{Ea=A}) (138_739:\n                             [\xa1\xa4\xa7-\xa8\xaa\xad-\xae\xb0-\n                             \xb4\xb6-\xba\xbc-\xbf\xc6\xd0\xd7-\n                             \xd8\xde-\xe1\xe6\xe8-\xea\xec-\n                             \xed\xf0\xf2-\xf3\xf7-\xfa\xfc\xfe],\n                             U+0101, U+0111, U+0113, U+011B,\n                             U+0126..0127 ...)\n   \p{East_Asian_Width: F} \p{East_Asian_Width=Fullwidth} (104)\n   \p{East_Asian_Width: Fullwidth} (Short: \p{Ea=F}) (104: U+3000,\n                             U+FF01..FF60, U+FFE0..FFE6)\n   \p{East_Asian_Width: H} \p{East_Asian_Width=Halfwidth} (123)\n   \p{East_Asian_Width: Halfwidth} (Short: \p{Ea=H}) (123: U+20A9,\n                             U+FF61..FFBE, U+FFC2..FFC7,\n                             U+FFCA..FFCF, U+FFD2..FFD7, U+FFDA..FFDC\n                             ...)\n   \p{East_Asian_Width: N} \p{East_Asian_Width=Neutral} (793_401 plus\n                             all above-Unicode code points)\n   \p{East_Asian_Width: Na} \p{East_Asian_Width=Narrow} (111)\n   \p{East_Asian_Width: Narrow} (Short: \p{Ea=Na}) (111: [\x20-\n                             \x7e\xa2-\xa3\xa5-\xa6\xac\xaf],\n                             U+27E6..27ED, U+2985..2986)\n   \p{East_Asian_Width: Neutral} (Short: \p{Ea=N}) (793_401 plus all\n                             above-Unicode code points: [\x00-\n                             \x1f\x7f-\xa0\xa9\xab\xb5\xbb\xc0-\n                             \xc5\xc7-\xcf\xd1-\xd6\xd9-\xdd\xe2-\n                             \xe5\xe7\xeb\xee-\xef\xf1\xf4-\n                             \xf6\xfb\xfd\xff], U+00FF..0100,\n                             U+0102..0110, U+0112, U+0114..011A,\n                             U+011C..0125 ...)\n   \p{East_Asian_Width: W} \p{East_Asian_Width=Wide} (181_634)\n   \p{East_Asian_Width: Wide} (Short: \p{Ea=W}) (181_634:\n                             U+1100..115F, U+231A..231B,\n                             U+2329..232A, U+23E9..23EC, U+23F0,\n                             U+23F3 ...)\n   \p{Egyp}                \p{Egyptian_Hieroglyphs} (=\n                             \p{Script_Extensions=\n                             Egyptian_Hieroglyphs}) (NOT \p{Block=\n                             Egyptian_Hieroglyphs}) (1071)\n   \p{Egyptian_Hieroglyphs} \p{Script_Extensions=\n                             Egyptian_Hieroglyphs} (Short: \p{Egyp};\n                             NOT \p{Block=Egyptian_Hieroglyphs})\n                             (1071)\n   \p{Elba}                \p{Elbasan} (= \p{Script_Extensions=\n                             Elbasan}) (NOT \p{Block=Elbasan}) (40)\n   \p{Elbasan}             \p{Script_Extensions=Elbasan} (Short:\n                             \p{Elba}; NOT \p{Block=Elbasan}) (40)\n X \p{Emoticons}           \p{Block=Emoticons} (80)\n X \p{Enclosed_Alphanum}   \p{Enclosed_Alphanumerics} (= \p{Block=\n                             Enclosed_Alphanumerics}) (160)\n X \p{Enclosed_Alphanum_Sup} \p{Enclosed_Alphanumeric_Supplement} (=\n                             \p{Block=\n                             Enclosed_Alphanumeric_Supplement}) (256)\n X \p{Enclosed_Alphanumeric_Supplement} \p{Block=\n                             Enclosed_Alphanumeric_Supplement}\n                             (Short: \p{InEnclosedAlphanumSup}) (256)\n X \p{Enclosed_Alphanumerics} \p{Block=Enclosed_Alphanumerics}\n                             (Short: \p{InEnclosedAlphanum}) (160)\n X \p{Enclosed_CJK}        \p{Enclosed_CJK_Letters_And_Months} (=\n                             \p{Block=\n                             Enclosed_CJK_Letters_And_Months}) (256)\n X \p{Enclosed_CJK_Letters_And_Months} \p{Block=\n                             Enclosed_CJK_Letters_And_Months} (Short:\n                             \p{InEnclosedCJK}) (256)\n X \p{Enclosed_Ideographic_Sup} \p{Enclosed_Ideographic_Supplement}\n                             (= \p{Block=\n                             Enclosed_Ideographic_Supplement}) (256)\n X \p{Enclosed_Ideographic_Supplement} \p{Block=\n                             Enclosed_Ideographic_Supplement} (Short:\n                             \p{InEnclosedIdeographicSup}) (256)\n   \p{Enclosing_Mark}      \p{General_Category=Enclosing_Mark}\n                             (Short: \p{Me}) (13)\n   \p{Ethi}                \p{Ethiopic} (= \p{Script_Extensions=\n                             Ethiopic}) (NOT \p{Block=Ethiopic}) (495)\n   \p{Ethiopic}            \p{Script_Extensions=Ethiopic} (Short:\n                             \p{Ethi}; NOT \p{Block=Ethiopic}) (495)\n X \p{Ethiopic_Ext}        \p{Ethiopic_Extended} (= \p{Block=\n                             Ethiopic_Extended}) (96)\n X \p{Ethiopic_Ext_A}      \p{Ethiopic_Extended_A} (= \p{Block=\n                             Ethiopic_Extended_A}) (48)\n X \p{Ethiopic_Extended}   \p{Block=Ethiopic_Extended} (Short:\n                             \p{InEthiopicExt}) (96)\n X \p{Ethiopic_Extended_A} \p{Block=Ethiopic_Extended_A} (Short:\n                             \p{InEthiopicExtA}) (48)\n X \p{Ethiopic_Sup}        \p{Ethiopic_Supplement} (= \p{Block=\n                             Ethiopic_Supplement}) (32)\n X \p{Ethiopic_Supplement} \p{Block=Ethiopic_Supplement} (Short:\n                             \p{InEthiopicSup}) (32)\n   \p{Ext}                 \p{Extender} (= \p{Extender=Y}) (44)\n   \p{Ext: *}              \p{Extender: *}\n   \p{Extender}            \p{Extender=Y} (Short: \p{Ext}) (44)\n   \p{Extender: N*}        (Short: \p{Ext=N}, \P{Ext}) (1_114_068\n                             plus all above-Unicode code points:\n                             [\x00-\xb6\xb8-\xff], U+0100..02CF,\n                             U+02D2..063F, U+0641..07F9,\n                             U+07FB..0E45, U+0E47..0EC5 ...)\n   \p{Extender: Y*}        (Short: \p{Ext=Y}, \p{Ext}) (44: [\xb7],\n                             U+02D0..02D1, U+0640, U+07FA, U+0E46,\n                             U+0EC6 ...)\n   \p{Final_Punctuation}   \p{General_Category=Final_Punctuation}\n                             (Short: \p{Pf}) (10)\n   \p{Format}              \p{General_Category=Format} (Short:\n                             \p{Cf}) (151)\n   \p{Full_Composition_Exclusion} \p{Full_Composition_Exclusion=Y}\n                             (Short: \p{CompEx}) (1120)\n   \p{Full_Composition_Exclusion: N*} (Short: \p{CompEx=N},\n                             \P{CompEx}) (1_112_992 plus all above-\n                             Unicode code points: U+0000..033F,\n                             U+0342, U+0345..0373, U+0375..037D,\n                             U+037F..0386, U+0388..0957 ...)\n   \p{Full_Composition_Exclusion: Y*} (Short: \p{CompEx=Y},\n                             \p{CompEx}) (1120: U+0340..0341,\n                             U+0343..0344, U+0374, U+037E, U+0387,\n                             U+0958..095F ...)\n   \p{Gc: *}               \p{General_Category: *}\n   \p{GCB: *}              \p{Grapheme_Cluster_Break: *}\n   \p{General_Category: C} \p{General_Category=Other} (977_573 plus\n                             all above-Unicode code points)\n   \p{General_Category: Cased_Letter} [\p{Ll}\p{Lu}\p{Lt}] (Short:\n                             \p{Gc=LC}, \p{LC}) (3796: [A-Za-\n                             z\xb5\xc0-\xd6\xd8-\xf6\xf8-\xff],\n                             U+0100..01BA, U+01BC..01BF,\n                             U+01C4..0293, U+0295..02AF, U+0370..0373\n                             ...)\n   \p{General_Category: Cc} \p{General_Category=Control} (65)\n   \p{General_Category: Cf} \p{General_Category=Format} (151)\n   \p{General_Category: Close_Punctuation} (Short: \p{Gc=Pe}, \p{Pe})\n                             (73: [\)\]\}], U+0F3B, U+0F3D, U+169C,\n                             U+2046, U+207E ...)\n   \p{General_Category: Cn} \p{General_Category=Unassigned} (837_841\n                             plus all above-Unicode code points)\n   \p{General_Category: Cntrl} \p{General_Category=Control} (65)\n   \p{General_Category: Co} \p{General_Category=Private_Use} (137_468)\n   \p{General_Category: Combining_Mark} \p{General_Category=Mark}\n                             (2177)\n   \p{General_Category: Connector_Punctuation} (Short: \p{Gc=Pc},\n                             \p{Pc}) (10: [_], U+203F..2040, U+2054,\n                             U+FE33..FE34, U+FE4D..FE4F, U+FF3F)\n   \p{General_Category: Control} (Short: \p{Gc=Cc}, \p{Cc}) (65:\n                             [\x00-\x1f\x7f-\x9f])\n   \p{General_Category: Cs} \p{General_Category=Surrogate} (2048)\n   \p{General_Category: Currency_Symbol} (Short: \p{Gc=Sc}, \p{Sc})\n                             (54: [\$\xa2-\xa5], U+058F, U+060B,\n                             U+09F2..09F3, U+09FB, U+0AF1 ...)\n   \p{General_Category: Dash_Punctuation} (Short: \p{Gc=Pd}, \p{Pd})\n                             (24: [\-], U+058A, U+05BE, U+1400,\n                             U+1806, U+2010..2015 ...)\n   \p{General_Category: Decimal_Number} (Short: \p{Gc=Nd}, \p{Nd})\n                             (590: [0-9], U+0660..0669, U+06F0..06F9,\n                             U+07C0..07C9, U+0966..096F, U+09E6..09EF\n                             ...)\n   \p{General_Category: Digit} \p{General_Category=Decimal_Number}\n                             (590)\n   \p{General_Category: Enclosing_Mark} (Short: \p{Gc=Me}, \p{Me})\n                             (13: U+0488..0489, U+1ABE, U+20DD..20E0,\n                             U+20E2..20E4, U+A670..A672)\n   \p{General_Category: Final_Punctuation} (Short: \p{Gc=Pf}, \p{Pf})\n                             (10: [\xbb], U+2019, U+201D, U+203A,\n                             U+2E03, U+2E05 ...)\n   \p{General_Category: Format} (Short: \p{Gc=Cf}, \p{Cf}) (151:\n                             [\xad], U+0600..0605, U+061C, U+06DD,\n                             U+070F, U+08E2 ...)\n   \p{General_Category: Initial_Punctuation} (Short: \p{Gc=Pi},\n                             \p{Pi}) (12: [\xab], U+2018,\n                             U+201B..201C, U+201F, U+2039, U+2E02 ...)\n   \p{General_Category: L} \p{General_Category=Letter} (125_093)\n X \p{General_Category: L&} \p{General_Category=Cased_Letter} (3796)\n X \p{General_Category: L_} \p{General_Category=Cased_Letter} Note\n                             the trailing '_' matters in spite of\n                             loose matching rules. (3796)\n   \p{General_Category: LC} \p{General_Category=Cased_Letter} (3796)\n   \p{General_Category: Letter} (Short: \p{Gc=L}, \p{L}) (125_093:\n                             [A-Za-z\xaa\xb5\xba\xc0-\xd6\xd8-\n                             \xf6\xf8-\xff], U+0100..02C1,\n                             U+02C6..02D1, U+02E0..02E4, U+02EC,\n                             U+02EE ...)\n   \p{General_Category: Letter_Number} (Short: \p{Gc=Nl}, \p{Nl})\n                             (236: U+16EE..16F0, U+2160..2182,\n                             U+2185..2188, U+3007, U+3021..3029,\n                             U+3038..303A ...)\n   \p{General_Category: Line_Separator} (Short: \p{Gc=Zl}, \p{Zl})\n                             (1: U+2028)\n   \p{General_Category: Ll} \p{General_Category=Lowercase_Letter}\n                             (/i= General_Category=Cased_Letter)\n                             (2063)\n   \p{General_Category: Lm} \p{General_Category=Modifier_Letter} (250)\n   \p{General_Category: Lo} \p{General_Category=Other_Letter}\n                             (121_047)\n   \p{General_Category: Lowercase_Letter} (Short: \p{Gc=Ll}, \p{Ll};\n                             /i= General_Category=Cased_Letter)\n                             (2063: [a-z\xb5\xdf-\xf6\xf8-\xff],\n                             U+0101, U+0103, U+0105, U+0107, U+0109\n                             ...)\n   \p{General_Category: Lt} \p{General_Category=Titlecase_Letter}\n                             (/i= General_Category=Cased_Letter) (31)\n   \p{General_Category: Lu} \p{General_Category=Uppercase_Letter}\n                             (/i= General_Category=Cased_Letter)\n                             (1702)\n   \p{General_Category: M} \p{General_Category=Mark} (2177)\n   \p{General_Category: Mark} (Short: \p{Gc=M}, \p{M}) (2177:\n                             U+0300..036F, U+0483..0489,\n                             U+0591..05BD, U+05BF, U+05C1..05C2,\n                             U+05C4..05C5 ...)\n   \p{General_Category: Math_Symbol} (Short: \p{Gc=Sm}, \p{Sm}) (948:\n                             [+<=>\|~\xac\xb1\xd7\xf7], U+03F6,\n                             U+0606..0608, U+2044, U+2052,\n                             U+207A..207C ...)\n   \p{General_Category: Mc} \p{General_Category=Spacing_Mark} (401)\n   \p{General_Category: Me} \p{General_Category=Enclosing_Mark} (13)\n   \p{General_Category: Mn} \p{General_Category=Nonspacing_Mark}\n                             (1763)\n   \p{General_Category: Modifier_Letter} (Short: \p{Gc=Lm}, \p{Lm})\n                             (250: U+02B0..02C1, U+02C6..02D1,\n                             U+02E0..02E4, U+02EC, U+02EE, U+0374 ...)\n   \p{General_Category: Modifier_Symbol} (Short: \p{Gc=Sk}, \p{Sk})\n                             (121: [\^`\xa8\xaf\xb4\xb8],\n                             U+02C2..02C5, U+02D2..02DF,\n                             U+02E5..02EB, U+02ED, U+02EF..02FF ...)\n   \p{General_Category: N} \p{General_Category=Number} (1502)\n   \p{General_Category: Nd} \p{General_Category=Decimal_Number} (590)\n   \p{General_Category: Nl} \p{General_Category=Letter_Number} (236)\n   \p{General_Category: No} \p{General_Category=Other_Number} (676)\n   \p{General_Category: Nonspacing_Mark} (Short: \p{Gc=Mn}, \p{Mn})\n                             (1763: U+0300..036F, U+0483..0487,\n                             U+0591..05BD, U+05BF, U+05C1..05C2,\n                             U+05C4..05C5 ...)\n   \p{General_Category: Number} (Short: \p{Gc=N}, \p{N}) (1502:\n                             [0-9\xb2-\xb3\xb9\xbc-\xbe],\n                             U+0660..0669, U+06F0..06F9,\n                             U+07C0..07C9, U+0966..096F, U+09E6..09EF\n                             ...)\n   \p{General_Category: Open_Punctuation} (Short: \p{Gc=Ps}, \p{Ps})\n                             (75: [\(\[\{], U+0F3A, U+0F3C, U+169B,\n                             U+201A, U+201E ...)\n   \p{General_Category: Other} (Short: \p{Gc=C}, \p{C}) (977_573 plus\n                             all above-Unicode code points: [\x00-\n                             \x1f\x7f-\x9f\xad], U+0378..0379,\n                             U+0380..0383, U+038B, U+038D, U+03A2 ...)\n   \p{General_Category: Other_Letter} (Short: \p{Gc=Lo}, \p{Lo})\n                             (121_047: [\xaa\xba], U+01BB,\n                             U+01C0..01C3, U+0294, U+05D0..05EA,\n                             U+05F0..05F2 ...)\n   \p{General_Category: Other_Number} (Short: \p{Gc=No}, \p{No})\n                             (676: [\xb2-\xb3\xb9\xbc-\xbe],\n                             U+09F4..09F9, U+0B72..0B77,\n                             U+0BF0..0BF2, U+0C78..0C7E, U+0D58..0D5E\n                             ...)\n   \p{General_Category: Other_Punctuation} (Short: \p{Gc=Po}, \p{Po})\n                             (566:\n                             [!\"#\%&\'*,.\/:;?\@\\\xa1\xa7\xb6-\n                             \xb7\xbf], U+037E, U+0387, U+055A..055F,\n                             U+0589, U+05C0 ...)\n   \p{General_Category: Other_Symbol} (Short: \p{Gc=So}, \p{So})\n                             (5855: [\xa6\xa9\xae\xb0], U+0482,\n                             U+058D..058E, U+060E..060F, U+06DE,\n                             U+06E9 ...)\n   \p{General_Category: P} \p{General_Category=Punctuation} (770)\n   \p{General_Category: Paragraph_Separator} (Short: \p{Gc=Zp},\n                             \p{Zp}) (1: U+2029)\n   \p{General_Category: Pc} \p{General_Category=\n                             Connector_Punctuation} (10)\n   \p{General_Category: Pd} \p{General_Category=Dash_Punctuation} (24)\n   \p{General_Category: Pe} \p{General_Category=Close_Punctuation}\n                             (73)\n   \p{General_Category: Pf} \p{General_Category=Final_Punctuation}\n                             (10)\n   \p{General_Category: Pi} \p{General_Category=Initial_Punctuation}\n                             (12)\n   \p{General_Category: Po} \p{General_Category=Other_Punctuation}\n                             (566)\n   \p{General_Category: Private_Use} (Short: \p{Gc=Co}, \p{Co})\n                             (137_468: U+E000..F8FF, U+F0000..FFFFD,\n                             U+100000..10FFFD)\n   \p{General_Category: Ps} \p{General_Category=Open_Punctuation} (75)\n   \p{General_Category: Punct} \p{General_Category=Punctuation} (770)\n   \p{General_Category: Punctuation} (Short: \p{Gc=P}, \p{P}) (770:\n                             [!\"#\%&\'\(\)*,\-.\/:;?\@\[\\\]_-\n                             \{\}\xa1\xa7\xab\xb6-\xb7\xbb\xbf],\n                             U+037E, U+0387, U+055A..055F,\n                             U+0589..058A, U+05BE ...)\n   \p{General_Category: S} \p{General_Category=Symbol} (6978)\n   \p{General_Category: Sc} \p{General_Category=Currency_Symbol} (54)\n   \p{General_Category: Separator} (Short: \p{Gc=Z}, \p{Z}) (19:\n                             [\x20\xa0], U+1680, U+2000..200A,\n                             U+2028..2029, U+202F, U+205F ...)\n   \p{General_Category: Sk} \p{General_Category=Modifier_Symbol} (121)\n   \p{General_Category: Sm} \p{General_Category=Math_Symbol} (948)\n   \p{General_Category: So} \p{General_Category=Other_Symbol} (5855)\n   \p{General_Category: Space_Separator} (Short: \p{Gc=Zs}, \p{Zs})\n                             (17: [\x20\xa0], U+1680, U+2000..200A,\n                             U+202F, U+205F, U+3000)\n   \p{General_Category: Spacing_Mark} (Short: \p{Gc=Mc}, \p{Mc})\n                             (401: U+0903, U+093B, U+093E..0940,\n                             U+0949..094C, U+094E..094F, U+0982..0983\n                             ...)\n   \p{General_Category: Surrogate} (Short: \p{Gc=Cs}, \p{Cs}) (2048:\n                             U+D800..DFFF)\n   \p{General_Category: Symbol} (Short: \p{Gc=S}, \p{S}) (6978:\n                             [\$+<=>\^`\|~\xa2-\xa6\xa8-\xa9\xac\xae-\n                             \xb1\xb4\xb8\xd7\xf7], U+02C2..02C5,\n                             U+02D2..02DF, U+02E5..02EB, U+02ED,\n                             U+02EF..02FF ...)\n   \p{General_Category: Titlecase_Letter} (Short: \p{Gc=Lt}, \p{Lt};\n                             /i= General_Category=Cased_Letter) (31:\n                             U+01C5, U+01C8, U+01CB, U+01F2,\n                             U+1F88..1F8F, U+1F98..1F9F ...)\n   \p{General_Category: Unassigned} (Short: \p{Gc=Cn}, \p{Cn})\n                             (837_841 plus all above-Unicode code\n                             points: U+0378..0379, U+0380..0383,\n                             U+038B, U+038D, U+03A2, U+0530 ...)\n   \p{General_Category: Uppercase_Letter} (Short: \p{Gc=Lu}, \p{Lu};\n                             /i= General_Category=Cased_Letter)\n                             (1702: [A-Z\xc0-\xd6\xd8-\xde], U+0100,\n                             U+0102, U+0104, U+0106, U+0108 ...)\n   \p{General_Category: Z} \p{General_Category=Separator} (19)\n   \p{General_Category: Zl} \p{General_Category=Line_Separator} (1)\n   \p{General_Category: Zp} \p{General_Category=Paragraph_Separator}\n                             (1)\n   \p{General_Category: Zs} \p{General_Category=Space_Separator} (17)\n X \p{General_Punctuation} \p{Block=General_Punctuation} (Short:\n                             \p{InPunctuation}) (112)\n X \p{Geometric_Shapes}    \p{Block=Geometric_Shapes} (96)\n X \p{Geometric_Shapes_Ext} \p{Geometric_Shapes_Extended} (=\n                             \p{Block=Geometric_Shapes_Extended})\n                             (128)\n X \p{Geometric_Shapes_Extended} \p{Block=Geometric_Shapes_Extended}\n                             (Short: \p{InGeometricShapesExt}) (128)\n   \p{Geor}                \p{Georgian} (= \p{Script_Extensions=\n                             Georgian}) (NOT \p{Block=Georgian}) (129)\n   \p{Georgian}            \p{Script_Extensions=Georgian} (Short:\n                             \p{Geor}; NOT \p{Block=Georgian}) (129)\n X \p{Georgian_Sup}        \p{Georgian_Supplement} (= \p{Block=\n                             Georgian_Supplement}) (48)\n X \p{Georgian_Supplement} \p{Block=Georgian_Supplement} (Short:\n                             \p{InGeorgianSup}) (48)\n   \p{Glag}                \p{Glagolitic} (= \p{Script_Extensions=\n                             Glagolitic}) (NOT \p{Block=Glagolitic})\n                             (136)\n   \p{Glagolitic}          \p{Script_Extensions=Glagolitic} (Short:\n                             \p{Glag}; NOT \p{Block=Glagolitic}) (136)\n X \p{Glagolitic_Sup}      \p{Glagolitic_Supplement} (= \p{Block=\n                             Glagolitic_Supplement}) (48)\n X \p{Glagolitic_Supplement} \p{Block=Glagolitic_Supplement} (Short:\n                             \p{InGlagoliticSup}) (48)\n   \p{Gonm}                \p{Masaram_Gondi} (= \p{Script_Extensions=\n                             Masaram_Gondi}) (NOT \p{Block=\n                             Masaram_Gondi}) (75)\n   \p{Goth}                \p{Gothic} (= \p{Script_Extensions=\n                             Gothic}) (NOT \p{Block=Gothic}) (27)\n   \p{Gothic}              \p{Script_Extensions=Gothic} (Short:\n                             \p{Goth}; NOT \p{Block=Gothic}) (27)\n   \p{Gr_Base}             \p{Grapheme_Base} (= \p{Grapheme_Base=Y})\n                             (134_733)\n   \p{Gr_Base: *}          \p{Grapheme_Base: *}\n   \p{Gr_Ext}              \p{Grapheme_Extend} (= \p{Grapheme_Extend=\n                             Y}) (1901)\n   \p{Gr_Ext: *}           \p{Grapheme_Extend: *}\n   \p{Gran}                \p{Grantha} (= \p{Script_Extensions=\n                             Grantha}) (NOT \p{Block=Grantha}) (113)\n   \p{Grantha}             \p{Script_Extensions=Grantha} (Short:\n                             \p{Gran}; NOT \p{Block=Grantha}) (113)\n   \p{Graph}               \p{XPosixGraph} (274_139)\n   \p{Grapheme_Base}       \p{Grapheme_Base=Y} (Short: \p{GrBase})\n                             (134_733)\n   \p{Grapheme_Base: N*}   (Short: \p{GrBase=N}, \P{GrBase}) (979_379\n                             plus all above-Unicode code points:\n                             [\x00-\x1f\x7f-\x9f\xad], U+0300..036F,\n                             U+0378..0379, U+0380..0383, U+038B,\n                             U+038D ...)\n   \p{Grapheme_Base: Y*}   (Short: \p{GrBase=Y}, \p{GrBase})\n                             (134_733: [\x20-\x7e\xa0-\xac\xae-\xff],\n                             U+0100..02FF, U+0370..0377,\n                             U+037A..037F, U+0384..038A, U+038C ...)\n   \p{Grapheme_Cluster_Break: CN} \p{Grapheme_Cluster_Break=Control}\n                             (5925)\n   \p{Grapheme_Cluster_Break: Control} (Short: \p{GCB=CN}) (5925:\n                             [^\n\r\x20-\x7e\xa0-\xac\xae-\xff],\n                             U+061C, U+180E, U+200B, U+200E..200F,\n                             U+2028..202E ...)\n   \p{Grapheme_Cluster_Break: CR} (Short: \p{GCB=CR}) (1: [\r])\n   \p{Grapheme_Cluster_Break: E_Base} (Short: \p{GCB=EB}) (98:\n                             U+261D, U+26F9, U+270A..270D, U+1F385,\n                             U+1F3C2..1F3C4, U+1F3C7 ...)\n   \p{Grapheme_Cluster_Break: E_Base_GAZ} (Short: \p{GCB=EBG}) (4:\n                             U+1F466..1F469)\n   \p{Grapheme_Cluster_Break: E_Modifier} (Short: \p{GCB=EM}) (5:\n                             U+1F3FB..1F3FF)\n   \p{Grapheme_Cluster_Break: EB} \p{Grapheme_Cluster_Break=E_Base}\n                             (98)\n   \p{Grapheme_Cluster_Break: EBG} \p{Grapheme_Cluster_Break=\n                             E_Base_GAZ} (4)\n   \p{Grapheme_Cluster_Break: EM} \p{Grapheme_Cluster_Break=\n                             E_Modifier} (5)\n   \p{Grapheme_Cluster_Break: EX} \p{Grapheme_Cluster_Break=Extend}\n                             (1901)\n   \p{Grapheme_Cluster_Break: Extend} (Short: \p{GCB=EX}) (1901:\n                             U+0300..036F, U+0483..0489,\n                             U+0591..05BD, U+05BF, U+05C1..05C2,\n                             U+05C4..05C5 ...)\n   \p{Grapheme_Cluster_Break: GAZ} \p{Grapheme_Cluster_Break=\n                             Glue_After_Zwj} (22)\n   \p{Grapheme_Cluster_Break: Glue_After_Zwj} (Short: \p{GCB=GAZ})\n                             (22: U+2640, U+2642, U+2695..2696,\n                             U+2708, U+2764, U+1F308 ...)\n   \p{Grapheme_Cluster_Break: L} (Short: \p{GCB=L}) (125:\n                             U+1100..115F, U+A960..A97C)\n   \p{Grapheme_Cluster_Break: LF} (Short: \p{GCB=LF}) (1: [\n])\n   \p{Grapheme_Cluster_Break: LV} (Short: \p{GCB=LV}) (399: U+AC00,\n                             U+AC1C, U+AC38, U+AC54, U+AC70, U+AC8C\n                             ...)\n   \p{Grapheme_Cluster_Break: LVT} (Short: \p{GCB=LVT}) (10_773:\n                             U+AC01..AC1B, U+AC1D..AC37,\n                             U+AC39..AC53, U+AC55..AC6F,\n                             U+AC71..AC8B, U+AC8D..ACA7 ...)\n   \p{Grapheme_Cluster_Break: Other} (Short: \p{GCB=XX}) (1_094_232\n                             plus all above-Unicode code points:\n                             [\x20-\x7e\xa0-\xac\xae-\xff],\n                             U+0100..02FF, U+0370..0482,\n                             U+048A..0590, U+05BE, U+05C0 ...)\n   \p{Grapheme_Cluster_Break: PP} \p{Grapheme_Cluster_Break=Prepend}\n                             (19)\n   \p{Grapheme_Cluster_Break: Prepend} (Short: \p{GCB=PP}) (19:\n                             U+0600..0605, U+06DD, U+070F, U+08E2,\n                             U+0D4E, U+110BD ...)\n   \p{Grapheme_Cluster_Break: Regional_Indicator} (Short: \p{GCB=RI})\n                             (26: U+1F1E6..1F1FF)\n   \p{Grapheme_Cluster_Break: RI} \p{Grapheme_Cluster_Break=\n                             Regional_Indicator} (26)\n   \p{Grapheme_Cluster_Break: SM} \p{Grapheme_Cluster_Break=\n                             SpacingMark} (348)\n   \p{Grapheme_Cluster_Break: SpacingMark} (Short: \p{GCB=SM}) (348:\n                             U+0903, U+093B, U+093E..0940,\n                             U+0949..094C, U+094E..094F, U+0982..0983\n                             ...)\n   \p{Grapheme_Cluster_Break: T} (Short: \p{GCB=T}) (137:\n                             U+11A8..11FF, U+D7CB..D7FB)\n   \p{Grapheme_Cluster_Break: V} (Short: \p{GCB=V}) (95:\n                             U+1160..11A7, U+D7B0..D7C6)\n   \p{Grapheme_Cluster_Break: XX} \p{Grapheme_Cluster_Break=Other}\n                             (1_094_232 plus all above-Unicode code\n                             points)\n   \p{Grapheme_Cluster_Break: ZWJ} (Short: \p{GCB=ZWJ}) (1: U+200D)\n   \p{Grapheme_Extend}     \p{Grapheme_Extend=Y} (Short: \p{GrExt})\n                             (1901)\n   \p{Grapheme_Extend: N*} (Short: \p{GrExt=N}, \P{GrExt}) (1_112_211\n                             plus all above-Unicode code points:\n                             U+0000..02FF, U+0370..0482,\n                             U+048A..0590, U+05BE, U+05C0, U+05C3 ...)\n   \p{Grapheme_Extend: Y*} (Short: \p{GrExt=Y}, \p{GrExt}) (1901:\n                             U+0300..036F, U+0483..0489,\n                             U+0591..05BD, U+05BF, U+05C1..05C2,\n                             U+05C4..05C5 ...)\n   \p{Greek}               \p{Script_Extensions=Greek} (Short:\n                             \p{Grek}; NOT \p{Greek_And_Coptic}) (522)\n X \p{Greek_And_Coptic}    \p{Block=Greek_And_Coptic} (Short:\n                             \p{InGreek}) (144)\n X \p{Greek_Ext}           \p{Greek_Extended} (= \p{Block=\n                             Greek_Extended}) (256)\n X \p{Greek_Extended}      \p{Block=Greek_Extended} (Short:\n                             \p{InGreekExt}) (256)\n   \p{Grek}                \p{Greek} (= \p{Script_Extensions=Greek})\n                             (NOT \p{Greek_And_Coptic}) (522)\n   \p{Gujarati}            \p{Script_Extensions=Gujarati} (Short:\n                             \p{Gujr}; NOT \p{Block=Gujarati}) (105)\n   \p{Gujr}                \p{Gujarati} (= \p{Script_Extensions=\n                             Gujarati}) (NOT \p{Block=Gujarati}) (105)\n   \p{Gurmukhi}            \p{Script_Extensions=Gurmukhi} (Short:\n                             \p{Guru}; NOT \p{Block=Gurmukhi}) (93)\n   \p{Guru}                \p{Gurmukhi} (= \p{Script_Extensions=\n                             Gurmukhi}) (NOT \p{Block=Gurmukhi}) (93)\n X \p{Half_And_Full_Forms} \p{Halfwidth_And_Fullwidth_Forms} (=\n                             \p{Block=Halfwidth_And_Fullwidth_Forms})\n                             (240)\n X \p{Half_Marks}          \p{Combining_Half_Marks} (= \p{Block=\n                             Combining_Half_Marks}) (16)\n X \p{Halfwidth_And_Fullwidth_Forms} \p{Block=\n                             Halfwidth_And_Fullwidth_Forms} (Short:\n                             \p{InHalfAndFullForms}) (240)\n   \p{Han}                 \p{Script_Extensions=Han} (89_507)\n   \p{Hang}                \p{Hangul} (= \p{Script_Extensions=\n                             Hangul}) (NOT \p{Hangul_Syllables})\n                             (11_775)\n   \p{Hangul}              \p{Script_Extensions=Hangul} (Short:\n                             \p{Hang}; NOT \p{Hangul_Syllables})\n                             (11_775)\n X \p{Hangul_Compatibility_Jamo} \p{Block=Hangul_Compatibility_Jamo}\n                             (Short: \p{InCompatJamo}) (96)\n X \p{Hangul_Jamo}         \p{Block=Hangul_Jamo} (Short: \p{InJamo})\n                             (256)\n X \p{Hangul_Jamo_Extended_A} \p{Block=Hangul_Jamo_Extended_A}\n                             (Short: \p{InJamoExtA}) (32)\n X \p{Hangul_Jamo_Extended_B} \p{Block=Hangul_Jamo_Extended_B}\n                             (Short: \p{InJamoExtB}) (80)\n   \p{Hangul_Syllable_Type: L} \p{Hangul_Syllable_Type=Leading_Jamo}\n                             (125)\n   \p{Hangul_Syllable_Type: Leading_Jamo} (Short: \p{Hst=L}) (125:\n                             U+1100..115F, U+A960..A97C)\n   \p{Hangul_Syllable_Type: LV} \p{Hangul_Syllable_Type=LV_Syllable}\n                             (399)\n   \p{Hangul_Syllable_Type: LV_Syllable} (Short: \p{Hst=LV}) (399:\n                             U+AC00, U+AC1C, U+AC38, U+AC54, U+AC70,\n                             U+AC8C ...)\n   \p{Hangul_Syllable_Type: LVT} \p{Hangul_Syllable_Type=\n                             LVT_Syllable} (10_773)\n   \p{Hangul_Syllable_Type: LVT_Syllable} (Short: \p{Hst=LVT})\n                             (10_773: U+AC01..AC1B, U+AC1D..AC37,\n                             U+AC39..AC53, U+AC55..AC6F,\n                             U+AC71..AC8B, U+AC8D..ACA7 ...)\n   \p{Hangul_Syllable_Type: NA} \p{Hangul_Syllable_Type=\n                             Not_Applicable} (1_102_583 plus all\n                             above-Unicode code points)\n   \p{Hangul_Syllable_Type: Not_Applicable} (Short: \p{Hst=NA})\n                             (1_102_583 plus all above-Unicode code\n                             points: U+0000..10FF, U+1200..A95F,\n                             U+A97D..ABFF, U+D7A4..D7AF,\n                             U+D7C7..D7CA, U+D7FC..infinity)\n   \p{Hangul_Syllable_Type: T} \p{Hangul_Syllable_Type=Trailing_Jamo}\n                             (137)\n   \p{Hangul_Syllable_Type: Trailing_Jamo} (Short: \p{Hst=T}) (137:\n                             U+11A8..11FF, U+D7CB..D7FB)\n   \p{Hangul_Syllable_Type: V} \p{Hangul_Syllable_Type=Vowel_Jamo}\n                             (95)\n   \p{Hangul_Syllable_Type: Vowel_Jamo} (Short: \p{Hst=V}) (95:\n                             U+1160..11A7, U+D7B0..D7C6)\n X \p{Hangul_Syllables}    \p{Block=Hangul_Syllables} (Short:\n                             \p{InHangul}) (11_184)\n   \p{Hani}                \p{Han} (= \p{Script_Extensions=Han})\n                             (89_507)\n   \p{Hano}                \p{Hanunoo} (= \p{Script_Extensions=\n                             Hanunoo}) (NOT \p{Block=Hanunoo}) (23)\n   \p{Hanunoo}             \p{Script_Extensions=Hanunoo} (Short:\n                             \p{Hano}; NOT \p{Block=Hanunoo}) (23)\n   \p{Hatr}                \p{Hatran} (= \p{Script_Extensions=\n                             Hatran}) (NOT \p{Block=Hatran}) (26)\n   \p{Hatran}              \p{Script_Extensions=Hatran} (Short:\n                             \p{Hatr}; NOT \p{Block=Hatran}) (26)\n   \p{Hebr}                \p{Hebrew} (= \p{Script_Extensions=\n                             Hebrew}) (NOT \p{Block=Hebrew}) (133)\n   \p{Hebrew}              \p{Script_Extensions=Hebrew} (Short:\n                             \p{Hebr}; NOT \p{Block=Hebrew}) (133)\n   \p{Hex}                 \p{XPosixXDigit} (= \p{Hex_Digit=Y}) (44)\n   \p{Hex: *}              \p{Hex_Digit: *}\n   \p{Hex_Digit}           \p{XPosixXDigit} (= \p{Hex_Digit=Y}) (44)\n   \p{Hex_Digit: N*}       (Short: \p{Hex=N}, \P{Hex}) (1_114_068\n                             plus all above-Unicode code points:\n                             [\x00-\x20!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                             >?\@G-Z\[\\\]\^_`g-z\{\|\}~\x7f-\xff],\n                             U+0100..FF0F, U+FF1A..FF20,\n                             U+FF27..FF40, U+FF47..infinity)\n   \p{Hex_Digit: Y*}       (Short: \p{Hex=Y}, \p{Hex}) (44: [0-9A-Fa-\n                             f], U+FF10..FF19, U+FF21..FF26,\n                             U+FF41..FF46)\n X \p{High_Private_Use_Surrogates} \p{Block=\n                             High_Private_Use_Surrogates} (Short:\n                             \p{InHighPUSurrogates}) (128)\n X \p{High_PU_Surrogates}  \p{High_Private_Use_Surrogates} (=\n                             \p{Block=High_Private_Use_Surrogates})\n                             (128)\n X \p{High_Surrogates}     \p{Block=High_Surrogates} (896)\n   \p{Hira}                \p{Hiragana} (= \p{Script_Extensions=\n                             Hiragana}) (NOT \p{Block=Hiragana}) (428)\n   \p{Hiragana}            \p{Script_Extensions=Hiragana} (Short:\n                             \p{Hira}; NOT \p{Block=Hiragana}) (428)\n   \p{Hluw}                \p{Anatolian_Hieroglyphs} (=\n                             \p{Script_Extensions=\n                             Anatolian_Hieroglyphs}) (NOT \p{Block=\n                             Anatolian_Hieroglyphs}) (583)\n   \p{Hmng}                \p{Pahawh_Hmong} (= \p{Script_Extensions=\n                             Pahawh_Hmong}) (NOT \p{Block=\n                             Pahawh_Hmong}) (127)\n   \p{HorizSpace}          \p{XPosixBlank} (18)\n   \p{Hst: *}              \p{Hangul_Syllable_Type: *}\n   \p{Hung}                \p{Old_Hungarian} (= \p{Script_Extensions=\n                             Old_Hungarian}) (NOT \p{Block=\n                             Old_Hungarian}) (108)\n D \p{Hyphen}              \p{Hyphen=Y} (11)\n D \p{Hyphen: N*}          Supplanted by Line_Break property values;\n                             see www.unicode.org/reports/tr14\n                             (Single: \P{Hyphen}) (1_114_101 plus all\n                             above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,.\/0-9:;<=>?\@A-\n                             Z\[\\\]\^_`a-z\{\|\}~\x7f-\xac\xae-\n                             \xff], U+0100..0589, U+058B..1805,\n                             U+1807..200F, U+2012..2E16, U+2E18..30FA\n                             ...)\n D \p{Hyphen: Y*}          Supplanted by Line_Break property values;\n                             see www.unicode.org/reports/tr14\n                             (Single: \p{Hyphen}) (11: [\-\xad],\n                             U+058A, U+1806, U+2010..2011, U+2E17,\n                             U+30FB ...)\n   \p{ID_Continue}         \p{ID_Continue=Y} (Short: \p{IDC}; NOT\n                             \p{Ideographic_Description_Characters})\n                             (128_108)\n   \p{ID_Continue: N*}     (Short: \p{IDC=N}, \P{IDC}) (986_004 plus\n                             all above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                             >?\@\[\\\]\^`\{\|\}~\x7f-\xa9\xab-\n                             \xb4\xb6\xb8-\xb9\xbb-\xbf\xd7\xf7],\n                             U+02C2..02C5, U+02D2..02DF,\n                             U+02E5..02EB, U+02ED, U+02EF..02FF ...)\n   \p{ID_Continue: Y*}     (Short: \p{IDC=Y}, \p{IDC}) (128_108:\n                             [0-9A-Z_a-z\xaa\xb5\xb7\xba\xc0-\n                             \xd6\xd8-\xf6\xf8-\xff], U+0100..02C1,\n                             U+02C6..02D1, U+02E0..02E4, U+02EC,\n                             U+02EE ...)\n   \p{ID_Start}            \p{ID_Start=Y} (Short: \p{IDS}) (125_334)\n   \p{ID_Start: N*}        (Short: \p{IDS=N}, \P{IDS}) (988_778 plus\n                             all above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`\{\|\}~\x7f-\xa9\xab-\n                             \xb4\xb6-\xb9\xbb-\xbf\xd7\xf7],\n                             U+02C2..02C5, U+02D2..02DF,\n                             U+02E5..02EB, U+02ED, U+02EF..036F ...)\n   \p{ID_Start: Y*}        (Short: \p{IDS=Y}, \p{IDS}) (125_334: [A-\n                             Za-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\n                             \xff], U+0100..02C1, U+02C6..02D1,\n                             U+02E0..02E4, U+02EC, U+02EE ...)\n   \p{IDC}                 \p{ID_Continue} (= \p{ID_Continue=Y}) (NOT\n                             \p{Ideographic_Description_Characters})\n                             (128_108)\n   \p{IDC: *}              \p{ID_Continue: *}\n   \p{Ideo}                \p{Ideographic} (= \p{Ideographic=Y})\n                             (96_174)\n   \p{Ideo: *}             \p{Ideographic: *}\n   \p{Ideographic}         \p{Ideographic=Y} (Short: \p{Ideo})\n                             (96_174)\n   \p{Ideographic: N*}     (Short: \p{Ideo=N}, \P{Ideo}) (1_017_938\n                             plus all above-Unicode code points:\n                             U+0000..3005, U+3008..3020,\n                             U+302A..3037, U+303B..33FF,\n                             U+4DB6..4DFF, U+9FEB..F8FF ...)\n   \p{Ideographic: Y*}     (Short: \p{Ideo=Y}, \p{Ideo}) (96_174:\n                             U+3006..3007, U+3021..3029,\n                             U+3038..303A, U+3400..4DB5,\n                             U+4E00..9FEA, U+F900..FA6D ...)\n X \p{Ideographic_Description_Characters} \p{Block=\n                             Ideographic_Description_Characters}\n                             (Short: \p{InIDC}) (16)\n X \p{Ideographic_Symbols} \p{Ideographic_Symbols_And_Punctuation} (=\n                             \p{Block=\n                             Ideographic_Symbols_And_Punctuation})\n                             (32)\n X \p{Ideographic_Symbols_And_Punctuation} \p{Block=\n                             Ideographic_Symbols_And_Punctuation}\n                             (Short: \p{InIdeographicSymbols}) (32)\n   \p{IDS}                 \p{ID_Start} (= \p{ID_Start=Y}) (125_334)\n   \p{IDS: *}              \p{ID_Start: *}\n   \p{IDS_Binary_Operator} \p{IDS_Binary_Operator=Y} (Short:\n                             \p{IDSB}) (10)\n   \p{IDS_Binary_Operator: N*} (Short: \p{IDSB=N}, \P{IDSB})\n                             (1_114_102 plus all above-Unicode code\n                             points: U+0000..2FEF, U+2FF2..2FF3,\n                             U+2FFC..infinity)\n   \p{IDS_Binary_Operator: Y*} (Short: \p{IDSB=Y}, \p{IDSB}) (10:\n                             U+2FF0..2FF1, U+2FF4..2FFB)\n   \p{IDS_Trinary_Operator} \p{IDS_Trinary_Operator=Y} (Short:\n                             \p{IDST}) (2)\n   \p{IDS_Trinary_Operator: N*} (Short: \p{IDST=N}, \P{IDST})\n                             (1_114_110 plus all above-Unicode code\n                             points: U+0000..2FF1, U+2FF4..infinity)\n   \p{IDS_Trinary_Operator: Y*} (Short: \p{IDST=Y}, \p{IDST}) (2:\n                             U+2FF2..2FF3)\n   \p{IDSB}                \p{IDS_Binary_Operator} (=\n                             \p{IDS_Binary_Operator=Y}) (10)\n   \p{IDSB: *}             \p{IDS_Binary_Operator: *}\n   \p{IDST}                \p{IDS_Trinary_Operator} (=\n                             \p{IDS_Trinary_Operator=Y}) (2)\n   \p{IDST: *}             \p{IDS_Trinary_Operator: *}\n   \p{Imperial_Aramaic}    \p{Script_Extensions=Imperial_Aramaic}\n                             (Short: \p{Armi}; NOT \p{Block=\n                             Imperial_Aramaic}) (31)\n   \p{In: *}               \p{Present_In: *} (Perl extension)\n X \p{In_*}                \p{Block: *}\n X \p{Indic_Number_Forms}  \p{Common_Indic_Number_Forms} (= \p{Block=\n                             Common_Indic_Number_Forms}) (16)\n   \p{Indic_Positional_Category: Bottom} (Short: \p{InPC=Bottom})\n                             (330: U+093C, U+0941..0944, U+094D,\n                             U+0952, U+0956..0957, U+0962..0963 ...)\n   \p{Indic_Positional_Category: Bottom_And_Left} (Short: \p{InPC=\n                             BottomAndLeft}) (1: U+A9BF)\n   \p{Indic_Positional_Category: Bottom_And_Right} (Short: \p{InPC=\n                             BottomAndRight}) (2: U+1B3B, U+A9C0)\n   \p{Indic_Positional_Category: Left} (Short: \p{InPC=Left}) (57:\n                             U+093F, U+094E, U+09BF, U+09C7..09C8,\n                             U+0A3F, U+0ABF ...)\n   \p{Indic_Positional_Category: Left_And_Right} (Short: \p{InPC=\n                             LeftAndRight}) (21: U+09CB..09CC,\n                             U+0B4B, U+0BCA..0BCC, U+0D4A..0D4C,\n                             U+0DDC, U+0DDE ...)\n   \p{Indic_Positional_Category: NA} (Short: \p{InPC=NA}) (1_112_996\n                             plus all above-Unicode code points:\n                             U+0000..08FF, U+0904..0939, U+093D,\n                             U+0950, U+0958..0961, U+0964..0980 ...)\n   \p{Indic_Positional_Category: Overstruck} (Short: \p{InPC=\n                             Overstruck}) (10: U+1CD4, U+1CE2..1CE8,\n                             U+10A01, U+10A06)\n   \p{Indic_Positional_Category: Right} (Short: \p{InPC=Right}) (262:\n                             U+0903, U+093B, U+093E, U+0940,\n                             U+0949..094C, U+094F ...)\n   \p{Indic_Positional_Category: Top} (Short: \p{InPC=Top}) (380:\n                             U+0900..0902, U+093A, U+0945..0948,\n                             U+0951, U+0953..0955, U+0981 ...)\n   \p{Indic_Positional_Category: Top_And_Bottom} (Short: \p{InPC=\n                             TopAndBottom}) (10: U+0C48, U+0F73,\n                             U+0F76..0F79, U+0F81, U+1B3C,\n                             U+1112E..1112F)\n   \p{Indic_Positional_Category: Top_And_Bottom_And_Right} (Short:\n                             \p{InPC=TopAndBottomAndRight}) (1:\n                             U+1B3D)\n   \p{Indic_Positional_Category: Top_And_Left} (Short: \p{InPC=\n                             TopAndLeft}) (6: U+0B48, U+0DDA, U+17BE,\n                             U+1C29, U+114BB, U+115B9)\n   \p{Indic_Positional_Category: Top_And_Left_And_Right} (Short:\n                             \p{InPC=TopAndLeftAndRight}) (4: U+0B4C,\n                             U+0DDD, U+17BF, U+115BB)\n   \p{Indic_Positional_Category: Top_And_Right} (Short: \p{InPC=\n                             TopAndRight}) (13: U+0AC9, U+0B57,\n                             U+0CC0, U+0CC7..0CC8, U+0CCA..0CCB,\n                             U+1925..1926 ...)\n   \p{Indic_Positional_Category: Visual_Order_Left} (Short: \p{InPC=\n                             VisualOrderLeft}) (19: U+0E40..0E44,\n                             U+0EC0..0EC4, U+19B5..19B7, U+19BA,\n                             U+AAB5..AAB6, U+AAB9 ...)\n   \p{Indic_Syllabic_Category: Avagraha} (Short: \p{InSC=Avagraha})\n                             (15: U+093D, U+09BD, U+0ABD, U+0B3D,\n                             U+0C3D, U+0CBD ...)\n   \p{Indic_Syllabic_Category: Bindu} (Short: \p{InSC=Bindu}) (80:\n                             U+0900..0902, U+0981..0982, U+09FC,\n                             U+0A01..0A02, U+0A70, U+0A81..0A82 ...)\n   \p{Indic_Syllabic_Category: Brahmi_Joining_Number} (Short:\n                             \p{InSC=BrahmiJoiningNumber}) (20:\n                             U+11052..11065)\n   \p{Indic_Syllabic_Category: Cantillation_Mark} (Short: \p{InSC=\n                             CantillationMark}) (57: U+0951..0952,\n                             U+0AFA..0AFC, U+1CD0..1CD2,\n                             U+1CD4..1CE1, U+1CF4, U+1CF7..1CF9 ...)\n   \p{Indic_Syllabic_Category: Consonant} (Short: \p{InSC=Consonant})\n                             (2024: U+0915..0939, U+0958..095F,\n                             U+0978..097F, U+0995..09A8,\n                             U+09AA..09B0, U+09B2 ...)\n   \p{Indic_Syllabic_Category: Consonant_Dead} (Short: \p{InSC=\n                             ConsonantDead}) (10: U+09CE,\n                             U+0D54..0D56, U+0D7A..0D7F)\n   \p{Indic_Syllabic_Category: Consonant_Final} (Short: \p{InSC=\n                             ConsonantFinal}) (68: U+1930..1931,\n                             U+1933..1939, U+19C1..19C7,\n                             U+1A58..1A59, U+1BBE..1BBF, U+1BF0..1BF1\n                             ...)\n   \p{Indic_Syllabic_Category: Consonant_Head_Letter} (Short:\n                             \p{InSC=ConsonantHeadLetter}) (5:\n                             U+0F88..0F8C)\n   \p{Indic_Syllabic_Category: Consonant_Killer} (Short: \p{InSC=\n                             ConsonantKiller}) (2: U+0E4C, U+17CD)\n   \p{Indic_Syllabic_Category: Consonant_Medial} (Short: \p{InSC=\n                             ConsonantMedial}) (27: U+0A75,\n                             U+0EBC..0EBD, U+103B..103E,\n                             U+105E..1060, U+1082, U+1A55..1A56 ...)\n   \p{Indic_Syllabic_Category: Consonant_Placeholder} (Short:\n                             \p{InSC=ConsonantPlaceholder}) (18: [\-\n                             \xa0\xd7], U+0A72..0A73, U+104E, U+1900,\n                             U+2010..2014, U+25CC ...)\n   \p{Indic_Syllabic_Category: Consonant_Preceding_Repha} (Short:\n                             \p{InSC=ConsonantPrecedingRepha}) (2:\n                             U+0D4E, U+11D46)\n   \p{Indic_Syllabic_Category: Consonant_Prefixed} (Short: \p{InSC=\n                             ConsonantPrefixed}) (7: U+111C2..111C3,\n                             U+11A3A, U+11A86..11A89)\n   \p{Indic_Syllabic_Category: Consonant_Subjoined} (Short: \p{InSC=\n                             ConsonantSubjoined}) (95: U+0F8D..0F97,\n                             U+0F99..0FBC, U+1929..192B, U+1A57,\n                             U+1A5B..1A5E, U+1BA1..1BA3 ...)\n   \p{Indic_Syllabic_Category: Consonant_Succeeding_Repha} (Short:\n                             \p{InSC=ConsonantSucceedingRepha}) (5:\n                             U+17CC, U+1A5A, U+1B03, U+1B81, U+A982)\n   \p{Indic_Syllabic_Category: Consonant_With_Stacker} (Short:\n                             \p{InSC=ConsonantWithStacker}) (4:\n                             U+0CF1..0CF2, U+11003..11004)\n   \p{Indic_Syllabic_Category: Gemination_Mark} (Short: \p{InSC=\n                             GeminationMark}) (3: U+0A71, U+11237,\n                             U+11A98)\n   \p{Indic_Syllabic_Category: Invisible_Stacker} (Short: \p{InSC=\n                             InvisibleStacker}) (10: U+1039, U+17D2,\n                             U+1A60, U+1BAB, U+AAF6, U+10A3F ...)\n   \p{Indic_Syllabic_Category: Joiner} (Short: \p{InSC=Joiner}) (1:\n                             U+200D)\n   \p{Indic_Syllabic_Category: Modifying_Letter} (Short: \p{InSC=\n                             ModifyingLetter}) (1: U+0B83)\n   \p{Indic_Syllabic_Category: Non_Joiner} (Short: \p{InSC=\n                             NonJoiner}) (1: U+200C)\n   \p{Indic_Syllabic_Category: Nukta} (Short: \p{InSC=Nukta}) (28:\n                             U+093C, U+09BC, U+0A3C, U+0ABC,\n                             U+0AFD..0AFF, U+0B3C ...)\n   \p{Indic_Syllabic_Category: Number} (Short: \p{InSC=Number}) (469:\n                             [0-9], U+0966..096F, U+09E6..09EF,\n                             U+0A66..0A6F, U+0AE6..0AEF, U+0B66..0B6F\n                             ...)\n   \p{Indic_Syllabic_Category: Number_Joiner} (Short: \p{InSC=\n                             NumberJoiner}) (1: U+1107F)\n   \p{Indic_Syllabic_Category: Other} (Short: \p{InSC=Other})\n                             (1_109_901 plus all above-Unicode code\n                             points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,.\/:;<=>?\@A-\n                             Z\[\\\]\^_`a-z\{\|\}~\x7f-\x9f\xa1-\n                             \xb1\xb4-\xd6\xd8-\xff], U+0100..08FF,\n                             U+0950, U+0953..0954, U+0964..0965,\n                             U+0970..0971 ...)\n   \p{Indic_Syllabic_Category: Pure_Killer} (Short: \p{InSC=\n                             PureKiller}) (21: U+0D3B..0D3C, U+0E3A,\n                             U+0E4E, U+0F84, U+103A, U+1714 ...)\n   \p{Indic_Syllabic_Category: Register_Shifter} (Short: \p{InSC=\n                             RegisterShifter}) (2: U+17C9..17CA)\n   \p{Indic_Syllabic_Category: Syllable_Modifier} (Short: \p{InSC=\n                             SyllableModifier}) (22: [\xb2-\xb3],\n                             U+0F35, U+0F37, U+0FC6, U+17CB,\n                             U+17CE..17D0 ...)\n   \p{Indic_Syllabic_Category: Tone_Letter} (Short: \p{InSC=\n                             ToneLetter}) (7: U+1970..1974, U+AAC0,\n                             U+AAC2)\n   \p{Indic_Syllabic_Category: Tone_Mark} (Short: \p{InSC=ToneMark})\n                             (42: U+0E48..0E4B, U+0EC8..0ECB, U+1037,\n                             U+1063..1064, U+1069..106D, U+1087..108D\n                             ...)\n   \p{Indic_Syllabic_Category: Virama} (Short: \p{InSC=Virama}) (24:\n                             U+094D, U+09CD, U+0A4D, U+0ACD, U+0B4D,\n                             U+0BCD ...)\n   \p{Indic_Syllabic_Category: Visarga} (Short: \p{InSC=Visarga})\n                             (34: U+0903, U+0983, U+0A03, U+0A83,\n                             U+0B03, U+0C03 ...)\n   \p{Indic_Syllabic_Category: Vowel} (Short: \p{InSC=Vowel}) (30:\n                             U+1963..196D, U+A85E..A861, U+A866,\n                             U+A922..A92A, U+11150..11154)\n   \p{Indic_Syllabic_Category: Vowel_Dependent} (Short: \p{InSC=\n                             VowelDependent}) (633: U+093A..093B,\n                             U+093E..094C, U+094E..094F,\n                             U+0955..0957, U+0962..0963, U+09BE..09C4\n                             ...)\n   \p{Indic_Syllabic_Category: Vowel_Independent} (Short: \p{InSC=\n                             VowelIndependent}) (443: U+0904..0914,\n                             U+0960..0961, U+0972..0977,\n                             U+0985..098C, U+098F..0990, U+0993..0994\n                             ...)\n   \p{Inherited}           \p{Script_Extensions=Inherited} (Short:\n                             \p{Zinh}) (500)\n   \p{Initial_Punctuation} \p{General_Category=Initial_Punctuation}\n                             (Short: \p{Pi}) (12)\n   \p{InPC: *}             \p{Indic_Positional_Category: *}\n   \p{InSC: *}             \p{Indic_Syllabic_Category: *}\n   \p{Inscriptional_Pahlavi} \p{Script_Extensions=\n                             Inscriptional_Pahlavi} (Short: \p{Phli};\n                             NOT \p{Block=Inscriptional_Pahlavi}) (27)\n   \p{Inscriptional_Parthian} \p{Script_Extensions=\n                             Inscriptional_Parthian} (Short:\n                             \p{Prti}; NOT \p{Block=\n                             Inscriptional_Parthian}) (30)\n X \p{IPA_Ext}             \p{IPA_Extensions} (= \p{Block=\n                             IPA_Extensions}) (96)\n X \p{IPA_Extensions}      \p{Block=IPA_Extensions} (Short:\n                             \p{InIPAExt}) (96)\n   \p{Is_*}                \p{*} (Any exceptions are individually\n                             noted beginning with the word NOT.) If\n                             an entry has flag(s) at its beginning,\n                             like "D", the "Is_" form has the same\n                             flag(s)\n   \p{Ital}                \p{Old_Italic} (= \p{Script_Extensions=\n                             Old_Italic}) (NOT \p{Block=Old_Italic})\n                             (39)\n X \p{Jamo}                \p{Hangul_Jamo} (= \p{Block=Hangul_Jamo})\n                             (256)\n X \p{Jamo_Ext_A}          \p{Hangul_Jamo_Extended_A} (= \p{Block=\n                             Hangul_Jamo_Extended_A}) (32)\n X \p{Jamo_Ext_B}          \p{Hangul_Jamo_Extended_B} (= \p{Block=\n                             Hangul_Jamo_Extended_B}) (80)\n   \p{Java}                \p{Javanese} (= \p{Script_Extensions=\n                             Javanese}) (NOT \p{Block=Javanese}) (91)\n   \p{Javanese}            \p{Script_Extensions=Javanese} (Short:\n                             \p{Java}; NOT \p{Block=Javanese}) (91)\n   \p{Jg: *}               \p{Joining_Group: *}\n   \p{Join_C}              \p{Join_Control} (= \p{Join_Control=Y}) (2)\n   \p{Join_C: *}           \p{Join_Control: *}\n   \p{Join_Control}        \p{Join_Control=Y} (Short: \p{JoinC}) (2)\n   \p{Join_Control: N*}    (Short: \p{JoinC=N}, \P{JoinC}) (1_114_110\n                             plus all above-Unicode code points:\n                             U+0000..200B, U+200E..infinity)\n   \p{Join_Control: Y*}    (Short: \p{JoinC=Y}, \p{JoinC}) (2:\n                             U+200C..200D)\n   \p{Joining_Group: African_Feh} (Short: \p{Jg=AfricanFeh}) (1:\n                             U+08BB)\n   \p{Joining_Group: African_Noon} (Short: \p{Jg=AfricanNoon}) (1:\n                             U+08BD)\n   \p{Joining_Group: African_Qaf} (Short: \p{Jg=AfricanQaf}) (1:\n                             U+08BC)\n   \p{Joining_Group: Ain}  (Short: \p{Jg=Ain}) (8: U+0639..063A,\n                             U+06A0, U+06FC, U+075D..075F, U+08B3)\n   \p{Joining_Group: Alaph} (Short: \p{Jg=Alaph}) (1: U+0710)\n   \p{Joining_Group: Alef} (Short: \p{Jg=Alef}) (10: U+0622..0623,\n                             U+0625, U+0627, U+0671..0673, U+0675,\n                             U+0773..0774)\n   \p{Joining_Group: Beh}  (Short: \p{Jg=Beh}) (24: U+0628,\n                             U+062A..062B, U+066E, U+0679..0680,\n                             U+0750..0756, U+08A0..08A1 ...)\n   \p{Joining_Group: Beth} (Short: \p{Jg=Beth}) (2: U+0712, U+072D)\n   \p{Joining_Group: Burushaski_Yeh_Barree} (Short: \p{Jg=\n                             BurushaskiYehBarree}) (2: U+077A..077B)\n   \p{Joining_Group: Dal}  (Short: \p{Jg=Dal}) (15: U+062F..0630,\n                             U+0688..0690, U+06EE, U+0759..075A,\n                             U+08AE)\n   \p{Joining_Group: Dalath_Rish} (Short: \p{Jg=DalathRish}) (4:\n                             U+0715..0716, U+072A, U+072F)\n   \p{Joining_Group: E}    (Short: \p{Jg=E}) (1: U+0725)\n   \p{Joining_Group: Farsi_Yeh} (Short: \p{Jg=FarsiYeh}) (7:\n                             U+063D..063F, U+06CC, U+06CE,\n                             U+0775..0776)\n   \p{Joining_Group: Fe}   (Short: \p{Jg=Fe}) (1: U+074F)\n   \p{Joining_Group: Feh}  (Short: \p{Jg=Feh}) (10: U+0641,\n                             U+06A1..06A6, U+0760..0761, U+08A4)\n   \p{Joining_Group: Final_Semkath} (Short: \p{Jg=FinalSemkath}) (1:\n                             U+0724)\n   \p{Joining_Group: Gaf}  (Short: \p{Jg=Gaf}) (14: U+063B..063C,\n                             U+06A9, U+06AB, U+06AF..06B4,\n                             U+0762..0764, U+08B0)\n   \p{Joining_Group: Gamal} (Short: \p{Jg=Gamal}) (3: U+0713..0714,\n                             U+072E)\n   \p{Joining_Group: Hah}  (Short: \p{Jg=Hah}) (18: U+062C..062E,\n                             U+0681..0687, U+06BF, U+0757..0758,\n                             U+076E..076F, U+0772 ...)\n   \p{Joining_Group: Hamza_On_Heh_Goal} (Short: \p{Jg=\n                             HamzaOnHehGoal}) (1: U+06C3)\n   \p{Joining_Group: He}   (Short: \p{Jg=He}) (1: U+0717)\n   \p{Joining_Group: Heh}  (Short: \p{Jg=Heh}) (1: U+0647)\n   \p{Joining_Group: Heh_Goal} (Short: \p{Jg=HehGoal}) (2:\n                             U+06C1..06C2)\n   \p{Joining_Group: Heth} (Short: \p{Jg=Heth}) (1: U+071A)\n   \p{Joining_Group: Kaf}  (Short: \p{Jg=Kaf}) (6: U+0643,\n                             U+06AC..06AE, U+077F, U+08B4)\n   \p{Joining_Group: Kaph} (Short: \p{Jg=Kaph}) (1: U+071F)\n   \p{Joining_Group: Khaph} (Short: \p{Jg=Khaph}) (1: U+074E)\n   \p{Joining_Group: Knotted_Heh} (Short: \p{Jg=KnottedHeh}) (2:\n                             U+06BE, U+06FF)\n   \p{Joining_Group: Lam}  (Short: \p{Jg=Lam}) (7: U+0644,\n                             U+06B5..06B8, U+076A, U+08A6)\n   \p{Joining_Group: Lamadh} (Short: \p{Jg=Lamadh}) (1: U+0720)\n   \p{Joining_Group: Malayalam_Bha} (Short: \p{Jg=MalayalamBha}) (1:\n                             U+0866)\n   \p{Joining_Group: Malayalam_Ja} (Short: \p{Jg=MalayalamJa}) (1:\n                             U+0861)\n   \p{Joining_Group: Malayalam_Lla} (Short: \p{Jg=MalayalamLla}) (1:\n                             U+0868)\n   \p{Joining_Group: Malayalam_Llla} (Short: \p{Jg=MalayalamLlla})\n                             (1: U+0869)\n   \p{Joining_Group: Malayalam_Nga} (Short: \p{Jg=MalayalamNga}) (1:\n                             U+0860)\n   \p{Joining_Group: Malayalam_Nna} (Short: \p{Jg=MalayalamNna}) (1:\n                             U+0864)\n   \p{Joining_Group: Malayalam_Nnna} (Short: \p{Jg=MalayalamNnna})\n                             (1: U+0865)\n   \p{Joining_Group: Malayalam_Nya} (Short: \p{Jg=MalayalamNya}) (1:\n                             U+0862)\n   \p{Joining_Group: Malayalam_Ra} (Short: \p{Jg=MalayalamRa}) (1:\n                             U+0867)\n   \p{Joining_Group: Malayalam_Ssa} (Short: \p{Jg=MalayalamSsa}) (1:\n                             U+086A)\n   \p{Joining_Group: Malayalam_Tta} (Short: \p{Jg=MalayalamTta}) (1:\n                             U+0863)\n   \p{Joining_Group: Manichaean_Aleph} (Short: \p{Jg=\n                             ManichaeanAleph}) (1: U+10AC0)\n   \p{Joining_Group: Manichaean_Ayin} (Short: \p{Jg=ManichaeanAyin})\n                             (2: U+10AD9..10ADA)\n   \p{Joining_Group: Manichaean_Beth} (Short: \p{Jg=ManichaeanBeth})\n                             (2: U+10AC1..10AC2)\n   \p{Joining_Group: Manichaean_Daleth} (Short: \p{Jg=\n                             ManichaeanDaleth}) (1: U+10AC5)\n   \p{Joining_Group: Manichaean_Dhamedh} (Short: \p{Jg=\n                             ManichaeanDhamedh}) (1: U+10AD4)\n   \p{Joining_Group: Manichaean_Five} (Short: \p{Jg=ManichaeanFive})\n                             (1: U+10AEC)\n   \p{Joining_Group: Manichaean_Gimel} (Short: \p{Jg=\n                             ManichaeanGimel}) (2: U+10AC3..10AC4)\n   \p{Joining_Group: Manichaean_Heth} (Short: \p{Jg=ManichaeanHeth})\n                             (1: U+10ACD)\n   \p{Joining_Group: Manichaean_Hundred} (Short: \p{Jg=\n                             ManichaeanHundred}) (1: U+10AEF)\n   \p{Joining_Group: Manichaean_Kaph} (Short: \p{Jg=ManichaeanKaph})\n                             (3: U+10AD0..10AD2)\n   \p{Joining_Group: Manichaean_Lamedh} (Short: \p{Jg=\n                             ManichaeanLamedh}) (1: U+10AD3)\n   \p{Joining_Group: Manichaean_Mem} (Short: \p{Jg=ManichaeanMem})\n                             (1: U+10AD6)\n   \p{Joining_Group: Manichaean_Nun} (Short: \p{Jg=ManichaeanNun})\n                             (1: U+10AD7)\n   \p{Joining_Group: Manichaean_One} (Short: \p{Jg=ManichaeanOne})\n                             (1: U+10AEB)\n   \p{Joining_Group: Manichaean_Pe} (Short: \p{Jg=ManichaeanPe}) (2:\n                             U+10ADB..10ADC)\n   \p{Joining_Group: Manichaean_Qoph} (Short: \p{Jg=ManichaeanQoph})\n                             (3: U+10ADE..10AE0)\n   \p{Joining_Group: Manichaean_Resh} (Short: \p{Jg=ManichaeanResh})\n                             (1: U+10AE1)\n   \p{Joining_Group: Manichaean_Sadhe} (Short: \p{Jg=\n                             ManichaeanSadhe}) (1: U+10ADD)\n   \p{Joining_Group: Manichaean_Samekh} (Short: \p{Jg=\n                             ManichaeanSamekh}) (1: U+10AD8)\n   \p{Joining_Group: Manichaean_Taw} (Short: \p{Jg=ManichaeanTaw})\n                             (1: U+10AE4)\n   \p{Joining_Group: Manichaean_Ten} (Short: \p{Jg=ManichaeanTen})\n                             (1: U+10AED)\n   \p{Joining_Group: Manichaean_Teth} (Short: \p{Jg=ManichaeanTeth})\n                             (1: U+10ACE)\n   \p{Joining_Group: Manichaean_Thamedh} (Short: \p{Jg=\n                             ManichaeanThamedh}) (1: U+10AD5)\n   \p{Joining_Group: Manichaean_Twenty} (Short: \p{Jg=\n                             ManichaeanTwenty}) (1: U+10AEE)\n   \p{Joining_Group: Manichaean_Waw} (Short: \p{Jg=ManichaeanWaw})\n                             (1: U+10AC7)\n   \p{Joining_Group: Manichaean_Yodh} (Short: \p{Jg=ManichaeanYodh})\n                             (1: U+10ACF)\n   \p{Joining_Group: Manichaean_Zayin} (Short: \p{Jg=\n                             ManichaeanZayin}) (2: U+10AC9..10ACA)\n   \p{Joining_Group: Meem} (Short: \p{Jg=Meem}) (4: U+0645,\n                             U+0765..0766, U+08A7)\n   \p{Joining_Group: Mim}  (Short: \p{Jg=Mim}) (1: U+0721)\n   \p{Joining_Group: No_Joining_Group} (Short: \p{Jg=NoJoiningGroup})\n                             (1_113_807 plus all above-Unicode code\n                             points: U+0000..061F, U+0621, U+0640,\n                             U+064B..066D, U+0670, U+0674 ...)\n   \p{Joining_Group: Noon} (Short: \p{Jg=Noon}) (8: U+0646,\n                             U+06B9..06BC, U+0767..0769)\n   \p{Joining_Group: Nun}  (Short: \p{Jg=Nun}) (1: U+0722)\n   \p{Joining_Group: Nya}  (Short: \p{Jg=Nya}) (1: U+06BD)\n   \p{Joining_Group: Pe}   (Short: \p{Jg=Pe}) (1: U+0726)\n   \p{Joining_Group: Qaf}  (Short: \p{Jg=Qaf}) (5: U+0642, U+066F,\n                             U+06A7..06A8, U+08A5)\n   \p{Joining_Group: Qaph} (Short: \p{Jg=Qaph}) (1: U+0729)\n   \p{Joining_Group: Reh}  (Short: \p{Jg=Reh}) (19: U+0631..0632,\n                             U+0691..0699, U+06EF, U+075B,\n                             U+076B..076C, U+0771 ...)\n   \p{Joining_Group: Reversed_Pe} (Short: \p{Jg=ReversedPe}) (1:\n                             U+0727)\n   \p{Joining_Group: Rohingya_Yeh} (Short: \p{Jg=RohingyaYeh}) (1:\n                             U+08AC)\n   \p{Joining_Group: Sad}  (Short: \p{Jg=Sad}) (6: U+0635..0636,\n                             U+069D..069E, U+06FB, U+08AF)\n   \p{Joining_Group: Sadhe} (Short: \p{Jg=Sadhe}) (1: U+0728)\n   \p{Joining_Group: Seen} (Short: \p{Jg=Seen}) (11: U+0633..0634,\n                             U+069A..069C, U+06FA, U+075C, U+076D,\n                             U+0770 ...)\n   \p{Joining_Group: Semkath} (Short: \p{Jg=Semkath}) (1: U+0723)\n   \p{Joining_Group: Shin} (Short: \p{Jg=Shin}) (1: U+072B)\n   \p{Joining_Group: Straight_Waw} (Short: \p{Jg=StraightWaw}) (1:\n                             U+08B1)\n   \p{Joining_Group: Swash_Kaf} (Short: \p{Jg=SwashKaf}) (1: U+06AA)\n   \p{Joining_Group: Syriac_Waw} (Short: \p{Jg=SyriacWaw}) (1: U+0718)\n   \p{Joining_Group: Tah}  (Short: \p{Jg=Tah}) (4: U+0637..0638,\n                             U+069F, U+08A3)\n   \p{Joining_Group: Taw}  (Short: \p{Jg=Taw}) (1: U+072C)\n   \p{Joining_Group: Teh_Marbuta} (Short: \p{Jg=TehMarbuta}) (3:\n                             U+0629, U+06C0, U+06D5)\n   \p{Joining_Group: Teh_Marbuta_Goal} \p{Joining_Group=\n                             Hamza_On_Heh_Goal} (1)\n   \p{Joining_Group: Teth} (Short: \p{Jg=Teth}) (2: U+071B..071C)\n   \p{Joining_Group: Waw}  (Short: \p{Jg=Waw}) (16: U+0624, U+0648,\n                             U+0676..0677, U+06C4..06CB, U+06CF,\n                             U+0778..0779 ...)\n   \p{Joining_Group: Yeh}  (Short: \p{Jg=Yeh}) (11: U+0620, U+0626,\n                             U+0649..064A, U+0678, U+06D0..06D1,\n                             U+0777 ...)\n   \p{Joining_Group: Yeh_Barree} (Short: \p{Jg=YehBarree}) (2:\n                             U+06D2..06D3)\n   \p{Joining_Group: Yeh_With_Tail} (Short: \p{Jg=YehWithTail}) (1:\n                             U+06CD)\n   \p{Joining_Group: Yudh} (Short: \p{Jg=Yudh}) (1: U+071D)\n   \p{Joining_Group: Yudh_He} (Short: \p{Jg=YudhHe}) (1: U+071E)\n   \p{Joining_Group: Zain} (Short: \p{Jg=Zain}) (1: U+0719)\n   \p{Joining_Group: Zhain} (Short: \p{Jg=Zhain}) (1: U+074D)\n   \p{Joining_Type: C}     \p{Joining_Type=Join_Causing} (4)\n   \p{Joining_Type: D}     \p{Joining_Type=Dual_Joining} (507)\n   \p{Joining_Type: Dual_Joining} (Short: \p{Jt=D}) (507: U+0620,\n                             U+0626, U+0628, U+062A..062E,\n                             U+0633..063F, U+0641..0647 ...)\n   \p{Joining_Type: Join_Causing} (Short: \p{Jt=C}) (4: U+0640,\n                             U+07FA, U+180A, U+200D)\n   \p{Joining_Type: L}     \p{Joining_Type=Left_Joining} (3)\n   \p{Joining_Type: Left_Joining} (Short: \p{Jt=L}) (3: U+A872,\n                             U+10ACD, U+10AD7)\n   \p{Joining_Type: Non_Joining} (Short: \p{Jt=U}) (1_111_571 plus\n                             all above-Unicode code points: [\x00-\n                             \xac\xae-\xff], U+0100..02FF,\n                             U+0370..0482, U+048A..0590, U+05BE,\n                             U+05C0 ...)\n   \p{Joining_Type: R}     \p{Joining_Type=Right_Joining} (115)\n   \p{Joining_Type: Right_Joining} (Short: \p{Jt=R}) (115:\n                             U+0622..0625, U+0627, U+0629,\n                             U+062F..0632, U+0648, U+0671..0673 ...)\n   \p{Joining_Type: T}     \p{Joining_Type=Transparent} (1912)\n   \p{Joining_Type: Transparent} (Short: \p{Jt=T}) (1912: [\xad],\n                             U+0300..036F, U+0483..0489,\n                             U+0591..05BD, U+05BF, U+05C1..05C2 ...)\n   \p{Joining_Type: U}     \p{Joining_Type=Non_Joining} (1_111_571\n                             plus all above-Unicode code points)\n   \p{Jt: *}               \p{Joining_Type: *}\n   \p{Kaithi}              \p{Script_Extensions=Kaithi} (Short:\n                             \p{Kthi}; NOT \p{Block=Kaithi}) (86)\n   \p{Kali}                \p{Kayah_Li} (= \p{Script_Extensions=\n                             Kayah_Li}) (48)\n   \p{Kana}                \p{Katakana} (= \p{Script_Extensions=\n                             Katakana}) (NOT \p{Block=Katakana}) (352)\n X \p{Kana_Ext_A}          \p{Kana_Extended_A} (= \p{Block=\n                             Kana_Extended_A}) (48)\n X \p{Kana_Extended_A}     \p{Block=Kana_Extended_A} (Short:\n                             \p{InKanaExtA}) (48)\n X \p{Kana_Sup}            \p{Kana_Supplement} (= \p{Block=\n                             Kana_Supplement}) (256)\n X \p{Kana_Supplement}     \p{Block=Kana_Supplement} (Short:\n                             \p{InKanaSup}) (256)\n X \p{Kanbun}              \p{Block=Kanbun} (16)\n X \p{Kangxi}              \p{Kangxi_Radicals} (= \p{Block=\n                             Kangxi_Radicals}) (224)\n X \p{Kangxi_Radicals}     \p{Block=Kangxi_Radicals} (Short:\n                             \p{InKangxi}) (224)\n   \p{Kannada}             \p{Script_Extensions=Kannada} (Short:\n                             \p{Knda}; NOT \p{Block=Kannada}) (100)\n   \p{Katakana}            \p{Script_Extensions=Katakana} (Short:\n                             \p{Kana}; NOT \p{Block=Katakana}) (352)\n X \p{Katakana_Ext}        \p{Katakana_Phonetic_Extensions} (=\n                             \p{Block=Katakana_Phonetic_Extensions})\n                             (16)\n X \p{Katakana_Phonetic_Extensions} \p{Block=\n                             Katakana_Phonetic_Extensions} (Short:\n                             \p{InKatakanaExt}) (16)\n   \p{Kayah_Li}            \p{Script_Extensions=Kayah_Li} (Short:\n                             \p{Kali}) (48)\n   \p{Khar}                \p{Kharoshthi} (= \p{Script_Extensions=\n                             Kharoshthi}) (NOT \p{Block=Kharoshthi})\n                             (65)\n   \p{Kharoshthi}          \p{Script_Extensions=Kharoshthi} (Short:\n                             \p{Khar}; NOT \p{Block=Kharoshthi}) (65)\n   \p{Khmer}               \p{Script_Extensions=Khmer} (Short:\n                             \p{Khmr}; NOT \p{Block=Khmer}) (146)\n X \p{Khmer_Symbols}       \p{Block=Khmer_Symbols} (32)\n   \p{Khmr}                \p{Khmer} (= \p{Script_Extensions=Khmer})\n                             (NOT \p{Block=Khmer}) (146)\n   \p{Khoj}                \p{Khojki} (= \p{Script_Extensions=\n                             Khojki}) (NOT \p{Block=Khojki}) (72)\n   \p{Khojki}              \p{Script_Extensions=Khojki} (Short:\n                             \p{Khoj}; NOT \p{Block=Khojki}) (72)\n   \p{Khudawadi}           \p{Script_Extensions=Khudawadi} (Short:\n                             \p{Sind}; NOT \p{Block=Khudawadi}) (81)\n   \p{Knda}                \p{Kannada} (= \p{Script_Extensions=\n                             Kannada}) (NOT \p{Block=Kannada}) (100)\n   \p{Kthi}                \p{Kaithi} (= \p{Script_Extensions=\n                             Kaithi}) (NOT \p{Block=Kaithi}) (86)\n   \p{L} \pL               \p{Letter} (= \p{General_Category=Letter})\n                             (125_093)\n X \p{L&}                  \p{Cased_Letter} (= \p{General_Category=\n                             Cased_Letter}) (3796)\n X \p{L_}                  \p{Cased_Letter} (= \p{General_Category=\n                             Cased_Letter}) Note the trailing '_'\n                             matters in spite of loose matching\n                             rules. (3796)\n   \p{Lana}                \p{Tai_Tham} (= \p{Script_Extensions=\n                             Tai_Tham}) (NOT \p{Block=Tai_Tham}) (127)\n   \p{Lao}                 \p{Script_Extensions=Lao} (NOT \p{Block=\n                             Lao}) (67)\n   \p{Laoo}                \p{Lao} (= \p{Script_Extensions=Lao}) (NOT\n                             \p{Block=Lao}) (67)\n   \p{Latin}               \p{Script_Extensions=Latin} (Short:\n                             \p{Latn}) (1370)\n X \p{Latin_1}             \p{Latin_1_Supplement} (= \p{Block=\n                             Latin_1_Supplement}) (128)\n X \p{Latin_1_Sup}         \p{Latin_1_Supplement} (= \p{Block=\n                             Latin_1_Supplement}) (128)\n X \p{Latin_1_Supplement}  \p{Block=Latin_1_Supplement} (Short:\n                             \p{InLatin1}) (128)\n X \p{Latin_Ext_A}         \p{Latin_Extended_A} (= \p{Block=\n                             Latin_Extended_A}) (128)\n X \p{Latin_Ext_Additional} \p{Latin_Extended_Additional} (=\n                             \p{Block=Latin_Extended_Additional})\n                             (256)\n X \p{Latin_Ext_B}         \p{Latin_Extended_B} (= \p{Block=\n                             Latin_Extended_B}) (208)\n X \p{Latin_Ext_C}         \p{Latin_Extended_C} (= \p{Block=\n                             Latin_Extended_C}) (32)\n X \p{Latin_Ext_D}         \p{Latin_Extended_D} (= \p{Block=\n                             Latin_Extended_D}) (224)\n X \p{Latin_Ext_E}         \p{Latin_Extended_E} (= \p{Block=\n                             Latin_Extended_E}) (64)\n X \p{Latin_Extended_A}    \p{Block=Latin_Extended_A} (Short:\n                             \p{InLatinExtA}) (128)\n X \p{Latin_Extended_Additional} \p{Block=Latin_Extended_Additional}\n                             (Short: \p{InLatinExtAdditional}) (256)\n X \p{Latin_Extended_B}    \p{Block=Latin_Extended_B} (Short:\n                             \p{InLatinExtB}) (208)\n X \p{Latin_Extended_C}    \p{Block=Latin_Extended_C} (Short:\n                             \p{InLatinExtC}) (32)\n X \p{Latin_Extended_D}    \p{Block=Latin_Extended_D} (Short:\n                             \p{InLatinExtD}) (224)\n X \p{Latin_Extended_E}    \p{Block=Latin_Extended_E} (Short:\n                             \p{InLatinExtE}) (64)\n   \p{Latn}                \p{Latin} (= \p{Script_Extensions=Latin})\n                             (1370)\n   \p{Lb: *}               \p{Line_Break: *}\n   \p{LC}                  \p{Cased_Letter} (= \p{General_Category=\n                             Cased_Letter}) (3796)\n   \p{Lepc}                \p{Lepcha} (= \p{Script_Extensions=\n                             Lepcha}) (NOT \p{Block=Lepcha}) (74)\n   \p{Lepcha}              \p{Script_Extensions=Lepcha} (Short:\n                             \p{Lepc}; NOT \p{Block=Lepcha}) (74)\n   \p{Letter}              \p{General_Category=Letter} (Short: \p{L})\n                             (125_093)\n   \p{Letter_Number}       \p{General_Category=Letter_Number} (Short:\n                             \p{Nl}) (236)\n X \p{Letterlike_Symbols}  \p{Block=Letterlike_Symbols} (80)\n   \p{Limb}                \p{Limbu} (= \p{Script_Extensions=Limbu})\n                             (NOT \p{Block=Limbu}) (69)\n   \p{Limbu}               \p{Script_Extensions=Limbu} (Short:\n                             \p{Limb}; NOT \p{Block=Limbu}) (69)\n   \p{Lina}                \p{Linear_A} (= \p{Script_Extensions=\n                             Linear_A}) (NOT \p{Block=Linear_A}) (386)\n   \p{Linb}                \p{Linear_B} (= \p{Script_Extensions=\n                             Linear_B}) (268)\n   \p{Line_Break: AI}      \p{Line_Break=Ambiguous} (707)\n   \p{Line_Break: AL}      \p{Line_Break=Alphabetic} (19_690)\n   \p{Line_Break: Alphabetic} (Short: \p{Lb=AL}) (19_690: [#&*<=>\@A-\n                             Z\^_`a-z~\xa6\xa9\xac\xae-\xaf\xb5\xc0-\n                             \xd6\xd8-\xf6\xf8-\xff], U+0100..02C6,\n                             U+02CE..02CF, U+02D1..02D7, U+02DC,\n                             U+02DE ...)\n   \p{Line_Break: Ambiguous} (Short: \p{Lb=AI}) (707: [\xa7-\n                             \xa8\xaa\xb2-\xb3\xb6-\xba\xbc-\n                             \xbe\xd7\xf7], U+02C7, U+02C9..02CB,\n                             U+02CD, U+02D0, U+02D8..02DB ...)\n   \p{Line_Break: B2}      \p{Line_Break=Break_Both} (3)\n   \p{Line_Break: BA}      \p{Line_Break=Break_After} (232)\n   \p{Line_Break: BB}      \p{Line_Break=Break_Before} (42)\n   \p{Line_Break: BK}      \p{Line_Break=Mandatory_Break} (4)\n   \p{Line_Break: Break_After} (Short: \p{Lb=BA}) (232: [\t\|\xad],\n                             U+058A, U+05BE, U+0964..0965,\n                             U+0E5A..0E5B, U+0F0B ...)\n   \p{Line_Break: Break_Before} (Short: \p{Lb=BB}) (42: [\xb4],\n                             U+02C8, U+02CC, U+02DF, U+0F01..0F04,\n                             U+0F06..0F07 ...)\n   \p{Line_Break: Break_Both} (Short: \p{Lb=B2}) (3: U+2014,\n                             U+2E3A..2E3B)\n   \p{Line_Break: Break_Symbols} (Short: \p{Lb=SY}) (1: [\/])\n   \p{Line_Break: Carriage_Return} (Short: \p{Lb=CR}) (1: [\r])\n   \p{Line_Break: CB}      \p{Line_Break=Contingent_Break} (1)\n   \p{Line_Break: CJ}      \p{Line_Break=\n                             Conditional_Japanese_Starter} (51)\n   \p{Line_Break: CL}      \p{Line_Break=Close_Punctuation} (90)\n   \p{Line_Break: Close_Parenthesis} (Short: \p{Lb=CP}) (2: [\)\]])\n   \p{Line_Break: Close_Punctuation} (Short: \p{Lb=CL}) (90: [\}],\n                             U+0F3B, U+0F3D, U+169C, U+2046, U+207E\n                             ...)\n   \p{Line_Break: CM}      \p{Line_Break=Combining_Mark} (2170)\n   \p{Line_Break: Combining_Mark} (Short: \p{Lb=CM}) (2170:\n                             [^\t\n\cK\f\r\x20-\x7e\x85\xa0-\xff],\n                             U+0300..034E, U+0350..035B,\n                             U+0363..036F, U+0483..0489, U+0591..05BD\n                             ...)\n   \p{Line_Break: Complex_Context} (Short: \p{Lb=SA}) (734:\n                             U+0E01..0E3A, U+0E40..0E4E,\n                             U+0E81..0E82, U+0E84, U+0E87..0E88,\n                             U+0E8A ...)\n   \p{Line_Break: Conditional_Japanese_Starter} (Short: \p{Lb=CJ})\n                             (51: U+3041, U+3043, U+3045, U+3047,\n                             U+3049, U+3063 ...)\n   \p{Line_Break: Contingent_Break} (Short: \p{Lb=CB}) (1: U+FFFC)\n   \p{Line_Break: CP}      \p{Line_Break=Close_Parenthesis} (2)\n   \p{Line_Break: CR}      \p{Line_Break=Carriage_Return} (1)\n   \p{Line_Break: E_Base}  (Short: \p{Lb=EB}) (102: U+261D, U+26F9,\n                             U+270A..270D, U+1F385, U+1F3C2..1F3C4,\n                             U+1F3C7 ...)\n   \p{Line_Break: E_Modifier} (Short: \p{Lb=EM}) (5: U+1F3FB..1F3FF)\n   \p{Line_Break: EB}      \p{Line_Break=E_Base} (102)\n   \p{Line_Break: EM}      \p{Line_Break=E_Modifier} (5)\n   \p{Line_Break: EX}      \p{Line_Break=Exclamation} (37)\n   \p{Line_Break: Exclamation} (Short: \p{Lb=EX}) (37: [!?], U+05C6,\n                             U+061B, U+061E..061F, U+06D4, U+07F9 ...)\n   \p{Line_Break: GL}      \p{Line_Break=Glue} (18)\n   \p{Line_Break: Glue}    (Short: \p{Lb=GL}) (18: [\xa0], U+034F,\n                             U+035C..0362, U+0F08, U+0F0C, U+0F12 ...)\n   \p{Line_Break: H2}      (Short: \p{Lb=H2}) (399: U+AC00, U+AC1C,\n                             U+AC38, U+AC54, U+AC70, U+AC8C ...)\n   \p{Line_Break: H3}      (Short: \p{Lb=H3}) (10_773: U+AC01..AC1B,\n                             U+AC1D..AC37, U+AC39..AC53,\n                             U+AC55..AC6F, U+AC71..AC8B, U+AC8D..ACA7\n                             ...)\n   \p{Line_Break: Hebrew_Letter} (Short: \p{Lb=HL}) (74:\n                             U+05D0..05EA, U+05F0..05F2, U+FB1D,\n                             U+FB1F..FB28, U+FB2A..FB36, U+FB38..FB3C\n                             ...)\n   \p{Line_Break: HL}      \p{Line_Break=Hebrew_Letter} (74)\n   \p{Line_Break: HY}      \p{Line_Break=Hyphen} (1)\n   \p{Line_Break: Hyphen}  (Short: \p{Lb=HY}) (1: [\-])\n   \p{Line_Break: ID}      \p{Line_Break=Ideographic} (172_784)\n   \p{Line_Break: Ideographic} (Short: \p{Lb=ID}) (172_784:\n                             U+231A..231B, U+23F0..23F3,\n                             U+2600..2603, U+2614..2615, U+2618,\n                             U+261A..261C ...)\n   \p{Line_Break: IN}      \p{Line_Break=Inseparable} (6)\n   \p{Line_Break: Infix_Numeric} (Short: \p{Lb=IS}) (13: [,.:;],\n                             U+037E, U+0589, U+060C..060D, U+07F8,\n                             U+2044 ...)\n   \p{Line_Break: Inseparable} (Short: \p{Lb=IN}) (6: U+2024..2026,\n                             U+22EF, U+FE19, U+10AF6)\n   \p{Line_Break: Inseperable} \p{Line_Break=Inseparable} (6)\n   \p{Line_Break: IS}      \p{Line_Break=Infix_Numeric} (13)\n   \p{Line_Break: JL}      (Short: \p{Lb=JL}) (125: U+1100..115F,\n                             U+A960..A97C)\n   \p{Line_Break: JT}      (Short: \p{Lb=JT}) (137: U+11A8..11FF,\n                             U+D7CB..D7FB)\n   \p{Line_Break: JV}      (Short: \p{Lb=JV}) (95: U+1160..11A7,\n                             U+D7B0..D7C6)\n   \p{Line_Break: LF}      \p{Line_Break=Line_Feed} (1)\n   \p{Line_Break: Line_Feed} (Short: \p{Lb=LF}) (1: [\n])\n   \p{Line_Break: Mandatory_Break} (Short: \p{Lb=BK}) (4: [\cK\f],\n                             U+2028..2029)\n   \p{Line_Break: Next_Line} (Short: \p{Lb=NL}) (1: [\x85])\n   \p{Line_Break: NL}      \p{Line_Break=Next_Line} (1)\n   \p{Line_Break: Nonstarter} (Short: \p{Lb=NS}) (31: U+17D6,\n                             U+203C..203D, U+2047..2049, U+3005,\n                             U+301C, U+303B..303C ...)\n   \p{Line_Break: NS}      \p{Line_Break=Nonstarter} (31)\n   \p{Line_Break: NU}      \p{Line_Break=Numeric} (582)\n   \p{Line_Break: Numeric} (Short: \p{Lb=NU}) (582: [0-9],\n                             U+0660..0669, U+066B..066C,\n                             U+06F0..06F9, U+07C0..07C9, U+0966..096F\n                             ...)\n   \p{Line_Break: OP}      \p{Line_Break=Open_Punctuation} (87)\n   \p{Line_Break: Open_Punctuation} (Short: \p{Lb=OP}) (87:\n                             [\(\[\{\xa1\xbf], U+0F3A, U+0F3C,\n                             U+169B, U+201A, U+201E ...)\n   \p{Line_Break: PO}      \p{Line_Break=Postfix_Numeric} (30)\n   \p{Line_Break: Postfix_Numeric} (Short: \p{Lb=PO}) (30:\n                             [\%\xa2\xb0], U+0609..060B, U+066A,\n                             U+09F2..09F3, U+09F9, U+0D79 ...)\n   \p{Line_Break: PR}      \p{Line_Break=Prefix_Numeric} (65)\n   \p{Line_Break: Prefix_Numeric} (Short: \p{Lb=PR}) (65: [\$+\\\xa3-\n                             \xa5\xb1], U+058F, U+09FB, U+0AF1,\n                             U+0BF9, U+0E3F ...)\n   \p{Line_Break: QU}      \p{Line_Break=Quotation} (39)\n   \p{Line_Break: Quotation} (Short: \p{Lb=QU}) (39: [\"\'\xab\xbb],\n                             U+2018..2019, U+201B..201D, U+201F,\n                             U+2039..203A, U+275B..2760 ...)\n   \p{Line_Break: Regional_Indicator} (Short: \p{Lb=RI}) (26:\n                             U+1F1E6..1F1FF)\n   \p{Line_Break: RI}      \p{Line_Break=Regional_Indicator} (26)\n   \p{Line_Break: SA}      \p{Line_Break=Complex_Context} (734)\n D \p{Line_Break: SG}      \p{Line_Break=Surrogate} (2048)\n   \p{Line_Break: SP}      \p{Line_Break=Space} (1)\n   \p{Line_Break: Space}   (Short: \p{Lb=SP}) (1: [\x20])\n D \p{Line_Break: Surrogate} Deprecated by Unicode because surrogates\n                             should never appear in well-formed text,\n                             and therefore shouldn't be the basis for\n                             line breaking (Short: \p{Lb=SG}) (2048:\n                             U+D800..DFFF)\n   \p{Line_Break: SY}      \p{Line_Break=Break_Symbols} (1)\n   \p{Line_Break: Unknown} (Short: \p{Lb=XX}) (902_900 plus all\n                             above-Unicode code points: U+0378..0379,\n                             U+0380..0383, U+038B, U+038D, U+03A2,\n                             U+0530 ...)\n   \p{Line_Break: WJ}      \p{Line_Break=Word_Joiner} (2)\n   \p{Line_Break: Word_Joiner} (Short: \p{Lb=WJ}) (2: U+2060, U+FEFF)\n   \p{Line_Break: XX}      \p{Line_Break=Unknown} (902_900 plus all\n                             above-Unicode code points)\n   \p{Line_Break: ZW}      \p{Line_Break=ZWSpace} (1)\n   \p{Line_Break: ZWJ}     (Short: \p{Lb=ZWJ}) (1: U+200D)\n   \p{Line_Break: ZWSpace} (Short: \p{Lb=ZW}) (1: U+200B)\n   \p{Line_Separator}      \p{General_Category=Line_Separator}\n                             (Short: \p{Zl}) (1)\n   \p{Linear_A}            \p{Script_Extensions=Linear_A} (Short:\n                             \p{Lina}; NOT \p{Block=Linear_A}) (386)\n   \p{Linear_B}            \p{Script_Extensions=Linear_B} (Short:\n                             \p{Linb}) (268)\n X \p{Linear_B_Ideograms}  \p{Block=Linear_B_Ideograms} (128)\n X \p{Linear_B_Syllabary}  \p{Block=Linear_B_Syllabary} (128)\n   \p{Lisu}                \p{Script_Extensions=Lisu} (48)\n   \p{Ll}                  \p{Lowercase_Letter} (=\n                             \p{General_Category=Lowercase_Letter})\n                             (/i= General_Category=Cased_Letter)\n                             (2063)\n   \p{Lm}                  \p{Modifier_Letter} (=\n                             \p{General_Category=Modifier_Letter})\n                             (250)\n   \p{Lo}                  \p{Other_Letter} (= \p{General_Category=\n                             Other_Letter}) (121_047)\n   \p{LOE}                 \p{Logical_Order_Exception} (=\n                             \p{Logical_Order_Exception=Y}) (19)\n   \p{LOE: *}              \p{Logical_Order_Exception: *}\n   \p{Logical_Order_Exception} \p{Logical_Order_Exception=Y} (Short:\n                             \p{LOE}) (19)\n   \p{Logical_Order_Exception: N*} (Short: \p{LOE=N}, \P{LOE})\n                             (1_114_093 plus all above-Unicode code\n                             points: U+0000..0E3F, U+0E45..0EBF,\n                             U+0EC5..19B4, U+19B8..19B9,\n                             U+19BB..AAB4, U+AAB7..AAB8 ...)\n   \p{Logical_Order_Exception: Y*} (Short: \p{LOE=Y}, \p{LOE}) (19:\n                             U+0E40..0E44, U+0EC0..0EC4,\n                             U+19B5..19B7, U+19BA, U+AAB5..AAB6,\n                             U+AAB9 ...)\n X \p{Low_Surrogates}      \p{Block=Low_Surrogates} (1024)\n   \p{Lower}               \p{XPosixLower} (= \p{Lowercase=Y}) (/i=\n                             Cased=Yes) (2252)\n   \p{Lower: *}            \p{Lowercase: *}\n   \p{Lowercase}           \p{XPosixLower} (= \p{Lowercase=Y}) (/i=\n                             Cased=Yes) (2252)\n   \p{Lowercase: N*}       (Short: \p{Lower=N}, \P{Lower}; /i= Cased=\n                             No) (1_111_860 plus all above-Unicode\n                             code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-\n                             Z\[\\\]\^_`\{\|\}~\x7f-\xa9\xab-\n                             \xb4\xb6-\xb9\xbb-\xde\xf7], U+0100,\n                             U+0102, U+0104, U+0106, U+0108 ...)\n   \p{Lowercase: Y*}       (Short: \p{Lower=Y}, \p{Lower}; /i= Cased=\n                             Yes) (2252: [a-z\xaa\xb5\xba\xdf-\n                             \xf6\xf8-\xff], U+0101, U+0103, U+0105,\n                             U+0107, U+0109 ...)\n   \p{Lowercase_Letter}    \p{General_Category=Lowercase_Letter}\n                             (Short: \p{Ll}; /i= General_Category=\n                             Cased_Letter) (2063)\n   \p{Lt}                  \p{Titlecase_Letter} (=\n                             \p{General_Category=Titlecase_Letter})\n                             (/i= General_Category=Cased_Letter) (31)\n   \p{Lu}                  \p{Uppercase_Letter} (=\n                             \p{General_Category=Uppercase_Letter})\n                             (/i= General_Category=Cased_Letter)\n                             (1702)\n   \p{Lyci}                \p{Lycian} (= \p{Script_Extensions=\n                             Lycian}) (NOT \p{Block=Lycian}) (29)\n   \p{Lycian}              \p{Script_Extensions=Lycian} (Short:\n                             \p{Lyci}; NOT \p{Block=Lycian}) (29)\n   \p{Lydi}                \p{Lydian} (= \p{Script_Extensions=\n                             Lydian}) (NOT \p{Block=Lydian}) (27)\n   \p{Lydian}              \p{Script_Extensions=Lydian} (Short:\n                             \p{Lydi}; NOT \p{Block=Lydian}) (27)\n   \p{M} \pM               \p{Mark} (= \p{General_Category=Mark})\n                             (2177)\n   \p{Mahajani}            \p{Script_Extensions=Mahajani} (Short:\n                             \p{Mahj}; NOT \p{Block=Mahajani}) (61)\n   \p{Mahj}                \p{Mahajani} (= \p{Script_Extensions=\n                             Mahajani}) (NOT \p{Block=Mahajani}) (61)\n X \p{Mahjong}             \p{Mahjong_Tiles} (= \p{Block=\n                             Mahjong_Tiles}) (48)\n X \p{Mahjong_Tiles}       \p{Block=Mahjong_Tiles} (Short:\n                             \p{InMahjong}) (48)\n   \p{Malayalam}           \p{Script_Extensions=Malayalam} (Short:\n                             \p{Mlym}; NOT \p{Block=Malayalam}) (122)\n   \p{Mand}                \p{Mandaic} (= \p{Script_Extensions=\n                             Mandaic}) (NOT \p{Block=Mandaic}) (30)\n   \p{Mandaic}             \p{Script_Extensions=Mandaic} (Short:\n                             \p{Mand}; NOT \p{Block=Mandaic}) (30)\n   \p{Mani}                \p{Manichaean} (= \p{Script_Extensions=\n                             Manichaean}) (NOT \p{Block=Manichaean})\n                             (52)\n   \p{Manichaean}          \p{Script_Extensions=Manichaean} (Short:\n                             \p{Mani}; NOT \p{Block=Manichaean}) (52)\n   \p{Marc}                \p{Marchen} (= \p{Script_Extensions=\n                             Marchen}) (NOT \p{Block=Marchen}) (68)\n   \p{Marchen}             \p{Script_Extensions=Marchen} (Short:\n                             \p{Marc}; NOT \p{Block=Marchen}) (68)\n   \p{Mark}                \p{General_Category=Mark} (Short: \p{M})\n                             (2177)\n   \p{Masaram_Gondi}       \p{Script_Extensions=Masaram_Gondi}\n                             (Short: \p{Gonm}; NOT \p{Block=\n                             Masaram_Gondi}) (75)\n   \p{Math}                \p{Math=Y} (2310)\n   \p{Math: N*}            (Single: \P{Math}) (1_111_802 plus all\n                             above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*,\-.\/0-9:;?\@A-\n                             Z\[\\\]_`a-z\{\}\x7f-\xab\xad-\xb0\xb2-\n                             \xd6\xd8-\xf6\xf8-\xff], U+0100..03CF,\n                             U+03D3..03D4, U+03D6..03EF,\n                             U+03F2..03F3, U+03F7..0605 ...)\n   \p{Math: Y*}            (Single: \p{Math}) (2310: [+<=\n                             >\^\|~\xac\xb1\xd7\xf7], U+03D0..03D2,\n                             U+03D5, U+03F0..03F1, U+03F4..03F6,\n                             U+0606..0608 ...)\n X \p{Math_Alphanum}       \p{Mathematical_Alphanumeric_Symbols} (=\n                             \p{Block=\n                             Mathematical_Alphanumeric_Symbols})\n                             (1024)\n X \p{Math_Operators}      \p{Mathematical_Operators} (= \p{Block=\n                             Mathematical_Operators}) (256)\n   \p{Math_Symbol}         \p{General_Category=Math_Symbol} (Short:\n                             \p{Sm}) (948)\n X \p{Mathematical_Alphanumeric_Symbols} \p{Block=\n                             Mathematical_Alphanumeric_Symbols}\n                             (Short: \p{InMathAlphanum}) (1024)\n X \p{Mathematical_Operators} \p{Block=Mathematical_Operators}\n                             (Short: \p{InMathOperators}) (256)\n   \p{Mc}                  \p{Spacing_Mark} (= \p{General_Category=\n                             Spacing_Mark}) (401)\n   \p{Me}                  \p{Enclosing_Mark} (= \p{General_Category=\n                             Enclosing_Mark}) (13)\n   \p{Meetei_Mayek}        \p{Script_Extensions=Meetei_Mayek} (Short:\n                             \p{Mtei}; NOT \p{Block=Meetei_Mayek})\n                             (79)\n X \p{Meetei_Mayek_Ext}    \p{Meetei_Mayek_Extensions} (= \p{Block=\n                             Meetei_Mayek_Extensions}) (32)\n X \p{Meetei_Mayek_Extensions} \p{Block=Meetei_Mayek_Extensions}\n                             (Short: \p{InMeeteiMayekExt}) (32)\n   \p{Mend}                \p{Mende_Kikakui} (= \p{Script_Extensions=\n                             Mende_Kikakui}) (NOT \p{Block=\n                             Mende_Kikakui}) (213)\n   \p{Mende_Kikakui}       \p{Script_Extensions=Mende_Kikakui}\n                             (Short: \p{Mend}; NOT \p{Block=\n                             Mende_Kikakui}) (213)\n   \p{Merc}                \p{Meroitic_Cursive} (=\n                             \p{Script_Extensions=Meroitic_Cursive})\n                             (NOT \p{Block=Meroitic_Cursive}) (90)\n   \p{Mero}                \p{Meroitic_Hieroglyphs} (=\n                             \p{Script_Extensions=\n                             Meroitic_Hieroglyphs}) (32)\n   \p{Meroitic_Cursive}    \p{Script_Extensions=Meroitic_Cursive}\n                             (Short: \p{Merc}; NOT \p{Block=\n                             Meroitic_Cursive}) (90)\n   \p{Meroitic_Hieroglyphs} \p{Script_Extensions=\n                             Meroitic_Hieroglyphs} (Short: \p{Mero})\n                             (32)\n   \p{Miao}                \p{Script_Extensions=Miao} (NOT \p{Block=\n                             Miao}) (133)\n X \p{Misc_Arrows}         \p{Miscellaneous_Symbols_And_Arrows} (=\n                             \p{Block=\n                             Miscellaneous_Symbols_And_Arrows}) (256)\n X \p{Misc_Math_Symbols_A} \p{Miscellaneous_Mathematical_Symbols_A}\n                             (= \p{Block=\n                             Miscellaneous_Mathematical_Symbols_A})\n                             (48)\n X \p{Misc_Math_Symbols_B} \p{Miscellaneous_Mathematical_Symbols_B}\n                             (= \p{Block=\n                             Miscellaneous_Mathematical_Symbols_B})\n                             (128)\n X \p{Misc_Pictographs}    \p{Miscellaneous_Symbols_And_Pictographs}\n                             (= \p{Block=\n                             Miscellaneous_Symbols_And_Pictographs})\n                             (768)\n X \p{Misc_Symbols}        \p{Miscellaneous_Symbols} (= \p{Block=\n                             Miscellaneous_Symbols}) (256)\n X \p{Misc_Technical}      \p{Miscellaneous_Technical} (= \p{Block=\n                             Miscellaneous_Technical}) (256)\n X \p{Miscellaneous_Mathematical_Symbols_A} \p{Block=\n                             Miscellaneous_Mathematical_Symbols_A}\n                             (Short: \p{InMiscMathSymbolsA}) (48)\n X \p{Miscellaneous_Mathematical_Symbols_B} \p{Block=\n                             Miscellaneous_Mathematical_Symbols_B}\n                             (Short: \p{InMiscMathSymbolsB}) (128)\n X \p{Miscellaneous_Symbols} \p{Block=Miscellaneous_Symbols} (Short:\n                             \p{InMiscSymbols}) (256)\n X \p{Miscellaneous_Symbols_And_Arrows} \p{Block=\n                             Miscellaneous_Symbols_And_Arrows}\n                             (Short: \p{InMiscArrows}) (256)\n X \p{Miscellaneous_Symbols_And_Pictographs} \p{Block=\n                             Miscellaneous_Symbols_And_Pictographs}\n                             (Short: \p{InMiscPictographs}) (768)\n X \p{Miscellaneous_Technical} \p{Block=Miscellaneous_Technical}\n                             (Short: \p{InMiscTechnical}) (256)\n   \p{Mlym}                \p{Malayalam} (= \p{Script_Extensions=\n                             Malayalam}) (NOT \p{Block=Malayalam})\n                             (122)\n   \p{Mn}                  \p{Nonspacing_Mark} (=\n                             \p{General_Category=Nonspacing_Mark})\n                             (1763)\n   \p{Modi}                \p{Script_Extensions=Modi} (NOT \p{Block=\n                             Modi}) (89)\n   \p{Modifier_Letter}     \p{General_Category=Modifier_Letter}\n                             (Short: \p{Lm}) (250)\n X \p{Modifier_Letters}    \p{Spacing_Modifier_Letters} (= \p{Block=\n                             Spacing_Modifier_Letters}) (80)\n   \p{Modifier_Symbol}     \p{General_Category=Modifier_Symbol}\n                             (Short: \p{Sk}) (121)\n X \p{Modifier_Tone_Letters} \p{Block=Modifier_Tone_Letters} (32)\n   \p{Mong}                \p{Mongolian} (= \p{Script_Extensions=\n                             Mongolian}) (NOT \p{Block=Mongolian})\n                             (169)\n   \p{Mongolian}           \p{Script_Extensions=Mongolian} (Short:\n                             \p{Mong}; NOT \p{Block=Mongolian}) (169)\n X \p{Mongolian_Sup}       \p{Mongolian_Supplement} (= \p{Block=\n                             Mongolian_Supplement}) (32)\n X \p{Mongolian_Supplement} \p{Block=Mongolian_Supplement} (Short:\n                             \p{InMongolianSup}) (32)\n   \p{Mro}                 \p{Script_Extensions=Mro} (NOT \p{Block=\n                             Mro}) (43)\n   \p{Mroo}                \p{Mro} (= \p{Script_Extensions=Mro}) (NOT\n                             \p{Block=Mro}) (43)\n   \p{Mtei}                \p{Meetei_Mayek} (= \p{Script_Extensions=\n                             Meetei_Mayek}) (NOT \p{Block=\n                             Meetei_Mayek}) (79)\n   \p{Mult}                \p{Multani} (= \p{Script_Extensions=\n                             Multani}) (NOT \p{Block=Multani}) (48)\n   \p{Multani}             \p{Script_Extensions=Multani} (Short:\n                             \p{Mult}; NOT \p{Block=Multani}) (48)\n X \p{Music}               \p{Musical_Symbols} (= \p{Block=\n                             Musical_Symbols}) (256)\n X \p{Musical_Symbols}     \p{Block=Musical_Symbols} (Short:\n                             \p{InMusic}) (256)\n   \p{Myanmar}             \p{Script_Extensions=Myanmar} (Short:\n                             \p{Mymr}; NOT \p{Block=Myanmar}) (224)\n X \p{Myanmar_Ext_A}       \p{Myanmar_Extended_A} (= \p{Block=\n                             Myanmar_Extended_A}) (32)\n X \p{Myanmar_Ext_B}       \p{Myanmar_Extended_B} (= \p{Block=\n                             Myanmar_Extended_B}) (32)\n X \p{Myanmar_Extended_A}  \p{Block=Myanmar_Extended_A} (Short:\n                             \p{InMyanmarExtA}) (32)\n X \p{Myanmar_Extended_B}  \p{Block=Myanmar_Extended_B} (Short:\n                             \p{InMyanmarExtB}) (32)\n   \p{Mymr}                \p{Myanmar} (= \p{Script_Extensions=\n                             Myanmar}) (NOT \p{Block=Myanmar}) (224)\n   \p{N} \pN               \p{Number} (= \p{General_Category=Number})\n                             (1502)\n   \p{Nabataean}           \p{Script_Extensions=Nabataean} (Short:\n                             \p{Nbat}; NOT \p{Block=Nabataean}) (40)\n   \p{Narb}                \p{Old_North_Arabian} (=\n                             \p{Script_Extensions=Old_North_Arabian})\n                             (32)\n X \p{NB}                  \p{No_Block} (= \p{Block=No_Block})\n                             (834_096 plus all above-Unicode code\n                             points)\n   \p{Nbat}                \p{Nabataean} (= \p{Script_Extensions=\n                             Nabataean}) (NOT \p{Block=Nabataean})\n                             (40)\n   \p{NChar}               \p{Noncharacter_Code_Point} (=\n                             \p{Noncharacter_Code_Point=Y}) (66)\n   \p{NChar: *}            \p{Noncharacter_Code_Point: *}\n   \p{Nd}                  \p{XPosixDigit} (= \p{General_Category=\n                             Decimal_Number}) (590)\n   \p{New_Tai_Lue}         \p{Script_Extensions=New_Tai_Lue} (Short:\n                             \p{Talu}; NOT \p{Block=New_Tai_Lue}) (83)\n   \p{Newa}                \p{Script_Extensions=Newa} (NOT \p{Block=\n                             Newa}) (92)\n   \p{NFC_QC: *}           \p{NFC_Quick_Check: *}\n   \p{NFC_Quick_Check: M}  \p{NFC_Quick_Check=Maybe} (110)\n   \p{NFC_Quick_Check: Maybe} (Short: \p{NFCQC=M}) (110:\n                             U+0300..0304, U+0306..030C, U+030F,\n                             U+0311, U+0313..0314, U+031B ...)\n   \p{NFC_Quick_Check: N}  \p{NFC_Quick_Check=No} (NOT\n                             \P{NFC_Quick_Check} NOR \P{NFC_QC})\n                             (1120)\n   \p{NFC_Quick_Check: No} (Short: \p{NFCQC=N}; NOT\n                             \P{NFC_Quick_Check} NOR \P{NFC_QC})\n                             (1120: U+0340..0341, U+0343..0344,\n                             U+0374, U+037E, U+0387, U+0958..095F ...)\n   \p{NFC_Quick_Check: Y}  \p{NFC_Quick_Check=Yes} (NOT\n                             \p{NFC_Quick_Check} NOR \p{NFC_QC})\n                             (1_112_882 plus all above-Unicode code\n                             points)\n   \p{NFC_Quick_Check: Yes} (Short: \p{NFCQC=Y}; NOT\n                             \p{NFC_Quick_Check} NOR \p{NFC_QC})\n                             (1_112_882 plus all above-Unicode code\n                             points: U+0000..02FF, U+0305,\n                             U+030D..030E, U+0310, U+0312,\n                             U+0315..031A ...)\n   \p{NFD_QC: *}           \p{NFD_Quick_Check: *}\n   \p{NFD_Quick_Check: N}  \p{NFD_Quick_Check=No} (NOT\n                             \P{NFD_Quick_Check} NOR \P{NFD_QC})\n                             (13_232)\n   \p{NFD_Quick_Check: No} (Short: \p{NFDQC=N}; NOT\n                             \P{NFD_Quick_Check} NOR \P{NFD_QC})\n                             (13_232: [\xc0-\xc5\xc7-\xcf\xd1-\n                             \xd6\xd9-\xdd\xe0-\xe5\xe7-\xef\xf1-\n                             \xf6\xf9-\xfd\xff], U+0100..010F,\n                             U+0112..0125, U+0128..0130,\n                             U+0134..0137, U+0139..013E ...)\n   \p{NFD_Quick_Check: Y}  \p{NFD_Quick_Check=Yes} (NOT\n                             \p{NFD_Quick_Check} NOR \p{NFD_QC})\n                             (1_100_880 plus all above-Unicode code\n                             points)\n   \p{NFD_Quick_Check: Yes} (Short: \p{NFDQC=Y}; NOT\n                             \p{NFD_Quick_Check} NOR \p{NFD_QC})\n                             (1_100_880 plus all above-Unicode code\n                             points: [\x00-\xbf\xc6\xd0\xd7-\xd8\xde-\n                             \xdf\xe6\xf0\xf7-\xf8\xfe],\n                             U+0110..0111, U+0126..0127,\n                             U+0131..0133, U+0138, U+013F..0142 ...)\n   \p{NFKC_QC: *}          \p{NFKC_Quick_Check: *}\n   \p{NFKC_Quick_Check: M} \p{NFKC_Quick_Check=Maybe} (110)\n   \p{NFKC_Quick_Check: Maybe} (Short: \p{NFKCQC=M}) (110:\n                             U+0300..0304, U+0306..030C, U+030F,\n                             U+0311, U+0313..0314, U+031B ...)\n   \p{NFKC_Quick_Check: N} \p{NFKC_Quick_Check=No} (NOT\n                             \P{NFKC_Quick_Check} NOR \P{NFKC_QC})\n                             (4794)\n   \p{NFKC_Quick_Check: No} (Short: \p{NFKCQC=N}; NOT\n                             \P{NFKC_Quick_Check} NOR \P{NFKC_QC})\n                             (4794: [\xa0\xa8\xaa\xaf\xb2-\xb5\xb8-\n                             \xba\xbc-\xbe], U+0132..0133,\n                             U+013F..0140, U+0149, U+017F,\n                             U+01C4..01CC ...)\n   \p{NFKC_Quick_Check: Y} \p{NFKC_Quick_Check=Yes} (NOT\n                             \p{NFKC_Quick_Check} NOR \p{NFKC_QC})\n                             (1_109_208 plus all above-Unicode code\n                             points)\n   \p{NFKC_Quick_Check: Yes} (Short: \p{NFKCQC=Y}; NOT\n                             \p{NFKC_Quick_Check} NOR \p{NFKC_QC})\n                             (1_109_208 plus all above-Unicode code\n                             points: [\x00-\x9f\xa1-\xa7\xa9\xab-\n                             \xae\xb0-\xb1\xb6-\xb7\xbb\xbf-\xff],\n                             U+0100..0131, U+0134..013E,\n                             U+0141..0148, U+014A..017E, U+0180..01C3\n                             ...)\n   \p{NFKD_QC: *}          \p{NFKD_Quick_Check: *}\n   \p{NFKD_Quick_Check: N} \p{NFKD_Quick_Check=No} (NOT\n                             \P{NFKD_Quick_Check} NOR \P{NFKD_QC})\n                             (16_894)\n   \p{NFKD_Quick_Check: No} (Short: \p{NFKDQC=N}; NOT\n                             \P{NFKD_Quick_Check} NOR \P{NFKD_QC})\n                             (16_894: [\xa0\xa8\xaa\xaf\xb2-\xb5\xb8-\n                             \xba\xbc-\xbe\xc0-\xc5\xc7-\xcf\xd1-\n                             \xd6\xd9-\xdd\xe0-\xe5\xe7-\xef\xf1-\n                             \xf6\xf9-\xfd\xff], U+0100..010F,\n                             U+0112..0125, U+0128..0130,\n                             U+0132..0137, U+0139..0140 ...)\n   \p{NFKD_Quick_Check: Y} \p{NFKD_Quick_Check=Yes} (NOT\n                             \p{NFKD_Quick_Check} NOR \p{NFKD_QC})\n                             (1_097_218 plus all above-Unicode code\n                             points)\n   \p{NFKD_Quick_Check: Yes} (Short: \p{NFKDQC=Y}; NOT\n                             \p{NFKD_Quick_Check} NOR \p{NFKD_QC})\n                             (1_097_218 plus all above-Unicode code\n                             points: [\x00-\x9f\xa1-\xa7\xa9\xab-\n                             \xae\xb0-\xb1\xb6-\n                             \xb7\xbb\xbf\xc6\xd0\xd7-\xd8\xde-\n                             \xdf\xe6\xf0\xf7-\xf8\xfe],\n                             U+0110..0111, U+0126..0127, U+0131,\n                             U+0138, U+0141..0142 ...)\n   \p{Nko}                 \p{Script_Extensions=Nko} (NOT \p{Block=\n                             NKo}) (59)\n   \p{Nkoo}                \p{Nko} (= \p{Script_Extensions=Nko}) (NOT\n                             \p{Block=NKo}) (59)\n   \p{Nl}                  \p{Letter_Number} (= \p{General_Category=\n                             Letter_Number}) (236)\n   \p{No}                  \p{Other_Number} (= \p{General_Category=\n                             Other_Number}) (676)\n X \p{No_Block}            \p{Block=No_Block} (Short: \p{InNB})\n                             (834_096 plus all above-Unicode code\n                             points)\n   \p{Noncharacter_Code_Point} \p{Noncharacter_Code_Point=Y} (Short:\n                             \p{NChar}) (66)\n   \p{Noncharacter_Code_Point: N*} (Short: \p{NChar=N}, \P{NChar})\n                             (1_114_046 plus all above-Unicode code\n                             points: U+0000..FDCF, U+FDF0..FFFD,\n                             U+10000..1FFFD, U+20000..2FFFD,\n                             U+30000..3FFFD, U+40000..4FFFD ...)\n   \p{Noncharacter_Code_Point: Y*} (Short: \p{NChar=Y}, \p{NChar})\n                             (66: U+FDD0..FDEF, U+FFFE..FFFF,\n                             U+1FFFE..1FFFF, U+2FFFE..2FFFF,\n                             U+3FFFE..3FFFF, U+4FFFE..4FFFF ...)\n   \p{Nonspacing_Mark}     \p{General_Category=Nonspacing_Mark}\n                             (Short: \p{Mn}) (1763)\n   \p{Nshu}                \p{Nushu} (= \p{Script_Extensions=Nushu})\n                             (NOT \p{Block=Nushu}) (397)\n   \p{Nt: *}               \p{Numeric_Type: *}\n   \p{Number}              \p{General_Category=Number} (Short: \p{N})\n                             (1502)\n X \p{Number_Forms}        \p{Block=Number_Forms} (64)\n   \p{Numeric_Type: De}    \p{Numeric_Type=Decimal} (590)\n   \p{Numeric_Type: Decimal} (Short: \p{Nt=De}) (590: [0-9],\n                             U+0660..0669, U+06F0..06F9,\n                             U+07C0..07C9, U+0966..096F, U+09E6..09EF\n                             ...)\n   \p{Numeric_Type: Di}    \p{Numeric_Type=Digit} (128)\n   \p{Numeric_Type: Digit} (Short: \p{Nt=Di}) (128: [\xb2-\xb3\xb9],\n                             U+1369..1371, U+19DA, U+2070,\n                             U+2074..2079, U+2080..2089 ...)\n   \p{Numeric_Type: None}  (Short: \p{Nt=None}) (1_112_529 plus all\n                             above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/:;<=>?\@A-\n                             Z\[\\\]\^_`a-z\{\|\}~\x7f-\xb1\xb4-\n                             \xb8\xba-\xbb\xbf-\xff], U+0100..065F,\n                             U+066A..06EF, U+06FA..07BF,\n                             U+07CA..0965, U+0970..09E5 ...)\n   \p{Numeric_Type: Nu}    \p{Numeric_Type=Numeric} (865)\n   \p{Numeric_Type: Numeric} (Short: \p{Nt=Nu}) (865: [\xbc-\xbe],\n                             U+09F4..09F9, U+0B72..0B77,\n                             U+0BF0..0BF2, U+0C78..0C7E, U+0D58..0D5E\n                             ...)\n T \p{Numeric_Value: -1/2} (Short: \p{Nv=-1/2}) (1: U+0F33)\n T \p{Numeric_Value: 0}    (Short: \p{Nv=0}) (75: [0], U+0660,\n                             U+06F0, U+07C0, U+0966, U+09E6 ...)\n T \p{Numeric_Value: 1/160} (Short: \p{Nv=1/160}) (1: U+0D58)\n T \p{Numeric_Value: 1/40} (Short: \p{Nv=1/40}) (1: U+0D59)\n T \p{Numeric_Value: 3/80} (Short: \p{Nv=3/80}) (1: U+0D5A)\n T \p{Numeric_Value: 1/20} (Short: \p{Nv=1/20}) (1: U+0D5B)\n T \p{Numeric_Value: 1/16} (Short: \p{Nv=1/16}) (4: U+09F4, U+0B75,\n                             U+0D76, U+A833)\n T \p{Numeric_Value: 1/12} (Short: \p{Nv=1/12}) (1: U+109F6)\n T \p{Numeric_Value: 1/10} (Short: \p{Nv=1/10}) (2: U+0D5C, U+2152)\n T \p{Numeric_Value: 1/9}  (Short: \p{Nv=1/9}) (1: U+2151)\n T \p{Numeric_Value: 1/8}  (Short: \p{Nv=1/8}) (6: U+09F5, U+0B76,\n                             U+0D77, U+215B, U+A834, U+1245F)\n T \p{Numeric_Value: 1/7}  (Short: \p{Nv=1/7}) (1: U+2150)\n T \p{Numeric_Value: 3/20} (Short: \p{Nv=3/20}) (1: U+0D5D)\n T \p{Numeric_Value: 1/6}  (Short: \p{Nv=1/6}) (3: U+2159, U+109F7,\n                             U+12461)\n T \p{Numeric_Value: 3/16} (Short: \p{Nv=3/16}) (4: U+09F6, U+0B77,\n                             U+0D78, U+A835)\n T \p{Numeric_Value: 1/5}  (Short: \p{Nv=1/5}) (2: U+0D5E, U+2155)\n T \p{Numeric_Value: 1/4}  (Short: \p{Nv=1/4}) (12: [\xbc], U+09F7,\n                             U+0B72, U+0D73, U+A830, U+10140 ...)\n T \p{Numeric_Value: 1/3}  (Short: \p{Nv=1/3}) (6: U+2153, U+109F9,\n                             U+10E7D, U+1245A, U+1245D, U+12465)\n T \p{Numeric_Value: 3/8}  (Short: \p{Nv=3/8}) (1: U+215C)\n T \p{Numeric_Value: 2/5}  (Short: \p{Nv=2/5}) (1: U+2156)\n T \p{Numeric_Value: 5/12} (Short: \p{Nv=5/12}) (1: U+109FA)\n T \p{Numeric_Value: 1/2}  (Short: \p{Nv=1/2}) (13: [\xbd], U+0B73,\n                             U+0D74, U+0F2A, U+2CFD, U+A831 ...)\n T \p{Numeric_Value: 7/12} (Short: \p{Nv=7/12}) (1: U+109FC)\n T \p{Numeric_Value: 3/5}  (Short: \p{Nv=3/5}) (1: U+2157)\n T \p{Numeric_Value: 5/8}  (Short: \p{Nv=5/8}) (1: U+215D)\n T \p{Numeric_Value: 2/3}  (Short: \p{Nv=2/3}) (7: U+2154, U+10177,\n                             U+109FD, U+10E7E, U+1245B, U+1245E ...)\n T \p{Numeric_Value: 3/4}  (Short: \p{Nv=3/4}) (7: [\xbe], U+09F8,\n                             U+0B74, U+0D75, U+A832, U+10178 ...)\n T \p{Numeric_Value: 4/5}  (Short: \p{Nv=4/5}) (1: U+2158)\n T \p{Numeric_Value: 5/6}  (Short: \p{Nv=5/6}) (3: U+215A, U+109FF,\n                             U+1245C)\n T \p{Numeric_Value: 7/8}  (Short: \p{Nv=7/8}) (1: U+215E)\n T \p{Numeric_Value: 11/12} (Short: \p{Nv=11/12}) (1: U+109BC)\n T \p{Numeric_Value: 1}    (Short: \p{Nv=1}) (122: [1\xb9], U+0661,\n                             U+06F1, U+07C1, U+0967, U+09E7 ...)\n T \p{Numeric_Value: 3/2}  (Short: \p{Nv=3/2}) (1: U+0F2B)\n T \p{Numeric_Value: 2}    (Short: \p{Nv=2}) (122: [2\xb2], U+0662,\n                             U+06F2, U+07C2, U+0968, U+09E8 ...)\n T \p{Numeric_Value: 5/2}  (Short: \p{Nv=5/2}) (1: U+0F2C)\n T \p{Numeric_Value: 3}    (Short: \p{Nv=3}) (124: [3\xb3], U+0663,\n                             U+06F3, U+07C3, U+0969, U+09E9 ...)\n T \p{Numeric_Value: 7/2}  (Short: \p{Nv=7/2}) (1: U+0F2D)\n T \p{Numeric_Value: 4}    (Short: \p{Nv=4}) (116: [4], U+0664,\n                             U+06F4, U+07C4, U+096A, U+09EA ...)\n T \p{Numeric_Value: 9/2}  (Short: \p{Nv=9/2}) (1: U+0F2E)\n T \p{Numeric_Value: 5}    (Short: \p{Nv=5}) (114: [5], U+0665,\n                             U+06F5, U+07C5, U+096B, U+09EB ...)\n T \p{Numeric_Value: 11/2} (Short: \p{Nv=11/2}) (1: U+0F2F)\n T \p{Numeric_Value: 6}    (Short: \p{Nv=6}) (101: [6], U+0666,\n                             U+06F6, U+07C6, U+096C, U+09EC ...)\n T \p{Numeric_Value: 13/2} (Short: \p{Nv=13/2}) (1: U+0F30)\n T \p{Numeric_Value: 7}    (Short: \p{Nv=7}) (100: [7], U+0667,\n                             U+06F7, U+07C7, U+096D, U+09ED ...)\n T \p{Numeric_Value: 15/2} (Short: \p{Nv=15/2}) (1: U+0F31)\n T \p{Numeric_Value: 8}    (Short: \p{Nv=8}) (96: [8], U+0668,\n                             U+06F8, U+07C8, U+096E, U+09EE ...)\n T \p{Numeric_Value: 17/2} (Short: \p{Nv=17/2}) (1: U+0F32)\n T \p{Numeric_Value: 9}    (Short: \p{Nv=9}) (100: [9], U+0669,\n                             U+06F9, U+07C9, U+096F, U+09EF ...)\n T \p{Numeric_Value: 10}   (Short: \p{Nv=10}) (54: U+0BF0, U+0D70,\n                             U+1372, U+2169, U+2179, U+2469 ...)\n T \p{Numeric_Value: 11}   (Short: \p{Nv=11}) (6: U+216A, U+217A,\n                             U+246A, U+247E, U+2492, U+24EB)\n T \p{Numeric_Value: 12}   (Short: \p{Nv=12}) (6: U+216B, U+217B,\n                             U+246B, U+247F, U+2493, U+24EC)\n T \p{Numeric_Value: 13}   (Short: \p{Nv=13}) (4: U+246C, U+2480,\n                             U+2494, U+24ED)\n T \p{Numeric_Value: 14}   (Short: \p{Nv=14}) (4: U+246D, U+2481,\n                             U+2495, U+24EE)\n T \p{Numeric_Value: 15}   (Short: \p{Nv=15}) (4: U+246E, U+2482,\n                             U+2496, U+24EF)\n T \p{Numeric_Value: 16}   (Short: \p{Nv=16}) (5: U+09F9, U+246F,\n                             U+2483, U+2497, U+24F0)\n T \p{Numeric_Value: 17}   (Short: \p{Nv=17}) (5: U+16EE, U+2470,\n                             U+2484, U+2498, U+24F1)\n T \p{Numeric_Value: 18}   (Short: \p{Nv=18}) (5: U+16EF, U+2471,\n                             U+2485, U+2499, U+24F2)\n T \p{Numeric_Value: 19}   (Short: \p{Nv=19}) (5: U+16F0, U+2472,\n                             U+2486, U+249A, U+24F3)\n T \p{Numeric_Value: 20}   (Short: \p{Nv=20}) (31: U+1373, U+2473,\n                             U+2487, U+249B, U+24F4, U+3039 ...)\n T \p{Numeric_Value: 21}   (Short: \p{Nv=21}) (1: U+3251)\n T \p{Numeric_Value: 22}   (Short: \p{Nv=22}) (1: U+3252)\n T \p{Numeric_Value: 23}   (Short: \p{Nv=23}) (1: U+3253)\n T \p{Numeric_Value: 24}   (Short: \p{Nv=24}) (1: U+3254)\n T \p{Numeric_Value: 25}   (Short: \p{Nv=25}) (1: U+3255)\n T \p{Numeric_Value: 26}   (Short: \p{Nv=26}) (1: U+3256)\n T \p{Numeric_Value: 27}   (Short: \p{Nv=27}) (1: U+3257)\n T \p{Numeric_Value: 28}   (Short: \p{Nv=28}) (1: U+3258)\n T \p{Numeric_Value: 29}   (Short: \p{Nv=29}) (1: U+3259)\n T \p{Numeric_Value: 30}   (Short: \p{Nv=30}) (16: U+1374, U+303A,\n                             U+324A, U+325A, U+5345, U+10112 ...)\n T \p{Numeric_Value: 31}   (Short: \p{Nv=31}) (1: U+325B)\n T \p{Numeric_Value: 32}   (Short: \p{Nv=32}) (1: U+325C)\n T \p{Numeric_Value: 33}   (Short: \p{Nv=33}) (1: U+325D)\n T \p{Numeric_Value: 34}   (Short: \p{Nv=34}) (1: U+325E)\n T \p{Numeric_Value: 35}   (Short: \p{Nv=35}) (1: U+325F)\n T \p{Numeric_Value: 36}   (Short: \p{Nv=36}) (1: U+32B1)\n T \p{Numeric_Value: 37}   (Short: \p{Nv=37}) (1: U+32B2)\n T \p{Numeric_Value: 38}   (Short: \p{Nv=38}) (1: U+32B3)\n T \p{Numeric_Value: 39}   (Short: \p{Nv=39}) (1: U+32B4)\n T \p{Numeric_Value: 40}   (Short: \p{Nv=40}) (16: U+1375, U+324B,\n                             U+32B5, U+534C, U+10113, U+102ED ...)\n T \p{Numeric_Value: 41}   (Short: \p{Nv=41}) (1: U+32B6)\n T \p{Numeric_Value: 42}   (Short: \p{Nv=42}) (1: U+32B7)\n T \p{Numeric_Value: 43}   (Short: \p{Nv=43}) (1: U+32B8)\n T \p{Numeric_Value: 44}   (Short: \p{Nv=44}) (1: U+32B9)\n T \p{Numeric_Value: 45}   (Short: \p{Nv=45}) (1: U+32BA)\n T \p{Numeric_Value: 46}   (Short: \p{Nv=46}) (1: U+32BB)\n T \p{Numeric_Value: 47}   (Short: \p{Nv=47}) (1: U+32BC)\n T \p{Numeric_Value: 48}   (Short: \p{Nv=48}) (1: U+32BD)\n T \p{Numeric_Value: 49}   (Short: \p{Nv=49}) (1: U+32BE)\n T \p{Numeric_Value: 50}   (Short: \p{Nv=50}) (27: U+1376, U+216C,\n                             U+217C, U+2186, U+324C, U+32BF ...)\n T \p{Numeric_Value: 60}   (Short: \p{Nv=60}) (11: U+1377, U+324D,\n                             U+10115, U+102EF, U+109CE, U+10E6E ...)\n T \p{Numeric_Value: 70}   (Short: \p{Nv=70}) (11: U+1378, U+324E,\n                             U+10116, U+102F0, U+109CF, U+10E6F ...)\n T \p{Numeric_Value: 80}   (Short: \p{Nv=80}) (10: U+1379, U+324F,\n                             U+10117, U+102F1, U+10E70, U+11062 ...)\n T \p{Numeric_Value: 90}   (Short: \p{Nv=90}) (10: U+137A, U+10118,\n                             U+102F2, U+10341, U+10E71, U+11063 ...)\n T \p{Numeric_Value: 100}  (Short: \p{Nv=100}) (30: U+0BF1, U+0D71,\n                             U+137B, U+216D, U+217D, U+4F70 ...)\n T \p{Numeric_Value: 200}  (Short: \p{Nv=200}) (4: U+1011A, U+102F4,\n                             U+109D3, U+10E73)\n T \p{Numeric_Value: 300}  (Short: \p{Nv=300}) (5: U+1011B, U+1016B,\n                             U+102F5, U+109D4, U+10E74)\n T \p{Numeric_Value: 400}  (Short: \p{Nv=400}) (4: U+1011C, U+102F6,\n                             U+109D5, U+10E75)\n T \p{Numeric_Value: 500}  (Short: \p{Nv=500}) (14: U+216E, U+217E,\n                             U+1011D, U+10145, U+1014C, U+10153 ...)\n T \p{Numeric_Value: 600}  (Short: \p{Nv=600}) (4: U+1011E, U+102F8,\n                             U+109D7, U+10E77)\n T \p{Numeric_Value: 700}  (Short: \p{Nv=700}) (4: U+1011F, U+102F9,\n                             U+109D8, U+10E78)\n T \p{Numeric_Value: 800}  (Short: \p{Nv=800}) (4: U+10120, U+102FA,\n                             U+109D9, U+10E79)\n T \p{Numeric_Value: 900}  (Short: \p{Nv=900}) (5: U+10121, U+102FB,\n                             U+1034A, U+109DA, U+10E7A)\n T \p{Numeric_Value: 1000} (Short: \p{Nv=1000}) (20: U+0BF2, U+0D72,\n                             U+216F, U+217F..2180, U+4EDF, U+5343 ...)\n T \p{Numeric_Value: 2000} (Short: \p{Nv=2000}) (2: U+10123, U+109DC)\n T \p{Numeric_Value: 3000} (Short: \p{Nv=3000}) (2: U+10124, U+109DD)\n T \p{Numeric_Value: 4000} (Short: \p{Nv=4000}) (2: U+10125, U+109DE)\n T \p{Numeric_Value: 5000} (Short: \p{Nv=5000}) (6: U+2181, U+10126,\n                             U+10146, U+1014E, U+10172, U+109DF)\n T \p{Numeric_Value: 6000} (Short: \p{Nv=6000}) (2: U+10127, U+109E0)\n T \p{Numeric_Value: 7000} (Short: \p{Nv=7000}) (2: U+10128, U+109E1)\n T \p{Numeric_Value: 8000} (Short: \p{Nv=8000}) (2: U+10129, U+109E2)\n T \p{Numeric_Value: 9000} (Short: \p{Nv=9000}) (2: U+1012A, U+109E3)\n T \p{Numeric_Value: 10000} (= 1.0e+04) (Short: \p{Nv=10000}) (9:\n                             U+137C, U+2182, U+4E07, U+842C, U+1012B,\n                             U+10155 ...)\n T \p{Numeric_Value: 20000} (= 2.0e+04) (Short: \p{Nv=20000}) (2:\n                             U+1012C, U+109E5)\n T \p{Numeric_Value: 30000} (= 3.0e+04) (Short: \p{Nv=30000}) (2:\n                             U+1012D, U+109E6)\n T \p{Numeric_Value: 40000} (= 4.0e+04) (Short: \p{Nv=40000}) (2:\n                             U+1012E, U+109E7)\n T \p{Numeric_Value: 50000} (= 5.0e+04) (Short: \p{Nv=50000}) (5:\n                             U+2187, U+1012F, U+10147, U+10156,\n                             U+109E8)\n T \p{Numeric_Value: 60000} (= 6.0e+04) (Short: \p{Nv=60000}) (2:\n                             U+10130, U+109E9)\n T \p{Numeric_Value: 70000} (= 7.0e+04) (Short: \p{Nv=70000}) (2:\n                             U+10131, U+109EA)\n T \p{Numeric_Value: 80000} (= 8.0e+04) (Short: \p{Nv=80000}) (2:\n                             U+10132, U+109EB)\n T \p{Numeric_Value: 90000} (= 9.0e+04) (Short: \p{Nv=90000}) (2:\n                             U+10133, U+109EC)\n T \p{Numeric_Value: 100000} (= 1.0e+05) (Short: \p{Nv=100000}) (2:\n                             U+2188, U+109ED)\n T \p{Numeric_Value: 200000} (= 2.0e+05) (Short: \p{Nv=200000}) (1:\n                             U+109EE)\n T \p{Numeric_Value: 216000} (= 2.2e+05) (Short: \p{Nv=216000}) (1:\n                             U+12432)\n T \p{Numeric_Value: 300000} (= 3.0e+05) (Short: \p{Nv=300000}) (1:\n                             U+109EF)\n T \p{Numeric_Value: 400000} (= 4.0e+05) (Short: \p{Nv=400000}) (1:\n                             U+109F0)\n T \p{Numeric_Value: 432000} (= 4.3e+05) (Short: \p{Nv=432000}) (1:\n                             U+12433)\n T \p{Numeric_Value: 500000} (= 5.0e+05) (Short: \p{Nv=500000}) (1:\n                             U+109F1)\n T \p{Numeric_Value: 600000} (= 6.0e+05) (Short: \p{Nv=600000}) (1:\n                             U+109F2)\n T \p{Numeric_Value: 700000} (= 7.0e+05) (Short: \p{Nv=700000}) (1:\n                             U+109F3)\n T \p{Numeric_Value: 800000} (= 8.0e+05) (Short: \p{Nv=800000}) (1:\n                             U+109F4)\n T \p{Numeric_Value: 900000} (= 9.0e+05) (Short: \p{Nv=900000}) (1:\n                             U+109F5)\n T \p{Numeric_Value: 1000000} (= 1.0e+06) (Short: \p{Nv=1000000}) (1:\n                             U+16B5E)\n T \p{Numeric_Value: 100000000} (= 1.0e+08) (Short: \p{Nv=100000000})\n                             (3: U+4EBF, U+5104, U+16B5F)\n T \p{Numeric_Value: 10000000000} (= 1.0e+10) (Short: \p{Nv=\n                             10000000000}) (1: U+16B60)\n T \p{Numeric_Value: 1000000000000} (= 1.0e+12) (Short: \p{Nv=\n                             1000000000000}) (2: U+5146, U+16B61)\n   \p{Numeric_Value: NaN}  (Short: \p{Nv=NaN}) (1_112_529 plus all\n                             above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/:;<=>?\@A-\n                             Z\[\\\]\^_`a-z\{\|\}~\x7f-\xb1\xb4-\n                             \xb8\xba-\xbb\xbf-\xff], U+0100..065F,\n                             U+066A..06EF, U+06FA..07BF,\n                             U+07CA..0965, U+0970..09E5 ...)\n   \p{Nushu}               \p{Script_Extensions=Nushu} (Short:\n                             \p{Nshu}; NOT \p{Block=Nushu}) (397)\n   \p{Nv: *}               \p{Numeric_Value: *}\n X \p{OCR}                 \p{Optical_Character_Recognition} (=\n                             \p{Block=Optical_Character_Recognition})\n                             (32)\n   \p{Ogam}                \p{Ogham} (= \p{Script_Extensions=Ogham})\n                             (NOT \p{Block=Ogham}) (29)\n   \p{Ogham}               \p{Script_Extensions=Ogham} (Short:\n                             \p{Ogam}; NOT \p{Block=Ogham}) (29)\n   \p{Ol_Chiki}            \p{Script_Extensions=Ol_Chiki} (Short:\n                             \p{Olck}) (48)\n   \p{Olck}                \p{Ol_Chiki} (= \p{Script_Extensions=\n                             Ol_Chiki}) (48)\n   \p{Old_Hungarian}       \p{Script_Extensions=Old_Hungarian}\n                             (Short: \p{Hung}; NOT \p{Block=\n                             Old_Hungarian}) (108)\n   \p{Old_Italic}          \p{Script_Extensions=Old_Italic} (Short:\n                             \p{Ital}; NOT \p{Block=Old_Italic}) (39)\n   \p{Old_North_Arabian}   \p{Script_Extensions=Old_North_Arabian}\n                             (Short: \p{Narb}) (32)\n   \p{Old_Permic}          \p{Script_Extensions=Old_Permic} (Short:\n                             \p{Perm}; NOT \p{Block=Old_Permic}) (44)\n   \p{Old_Persian}         \p{Script_Extensions=Old_Persian} (Short:\n                             \p{Xpeo}; NOT \p{Block=Old_Persian}) (50)\n   \p{Old_South_Arabian}   \p{Script_Extensions=Old_South_Arabian}\n                             (Short: \p{Sarb}) (32)\n   \p{Old_Turkic}          \p{Script_Extensions=Old_Turkic} (Short:\n                             \p{Orkh}; NOT \p{Block=Old_Turkic}) (73)\n   \p{Open_Punctuation}    \p{General_Category=Open_Punctuation}\n                             (Short: \p{Ps}) (75)\n X \p{Optical_Character_Recognition} \p{Block=\n                             Optical_Character_Recognition} (Short:\n                             \p{InOCR}) (32)\n   \p{Oriya}               \p{Script_Extensions=Oriya} (Short:\n                             \p{Orya}; NOT \p{Block=Oriya}) (94)\n   \p{Orkh}                \p{Old_Turkic} (= \p{Script_Extensions=\n                             Old_Turkic}) (NOT \p{Block=Old_Turkic})\n                             (73)\n X \p{Ornamental_Dingbats} \p{Block=Ornamental_Dingbats} (48)\n   \p{Orya}                \p{Oriya} (= \p{Script_Extensions=Oriya})\n                             (NOT \p{Block=Oriya}) (94)\n   \p{Osage}               \p{Script_Extensions=Osage} (Short:\n                             \p{Osge}; NOT \p{Block=Osage}) (72)\n   \p{Osge}                \p{Osage} (= \p{Script_Extensions=Osage})\n                             (NOT \p{Block=Osage}) (72)\n   \p{Osma}                \p{Osmanya} (= \p{Script_Extensions=\n                             Osmanya}) (NOT \p{Block=Osmanya}) (40)\n   \p{Osmanya}             \p{Script_Extensions=Osmanya} (Short:\n                             \p{Osma}; NOT \p{Block=Osmanya}) (40)\n   \p{Other}               \p{General_Category=Other} (Short: \p{C})\n                             (977_573 plus all above-Unicode code\n                             points)\n   \p{Other_Letter}        \p{General_Category=Other_Letter} (Short:\n                             \p{Lo}) (121_047)\n   \p{Other_Number}        \p{General_Category=Other_Number} (Short:\n                             \p{No}) (676)\n   \p{Other_Punctuation}   \p{General_Category=Other_Punctuation}\n                             (Short: \p{Po}) (566)\n   \p{Other_Symbol}        \p{General_Category=Other_Symbol} (Short:\n                             \p{So}) (5855)\n   \p{P} \pP               \p{Punct} (= \p{General_Category=\n                             Punctuation}) (NOT\n                             \p{General_Punctuation}) (770)\n   \p{Pahawh_Hmong}        \p{Script_Extensions=Pahawh_Hmong} (Short:\n                             \p{Hmng}; NOT \p{Block=Pahawh_Hmong})\n                             (127)\n   \p{Palm}                \p{Palmyrene} (= \p{Script_Extensions=\n                             Palmyrene}) (32)\n   \p{Palmyrene}           \p{Script_Extensions=Palmyrene} (Short:\n                             \p{Palm}) (32)\n   \p{Paragraph_Separator} \p{General_Category=Paragraph_Separator}\n                             (Short: \p{Zp}) (1)\n   \p{Pat_Syn}             \p{Pattern_Syntax} (= \p{Pattern_Syntax=\n                             Y}) (2760)\n   \p{Pat_Syn: *}          \p{Pattern_Syntax: *}\n   \p{Pat_WS}              \p{Pattern_White_Space} (=\n                             \p{Pattern_White_Space=Y}) (11)\n   \p{Pat_WS: *}           \p{Pattern_White_Space: *}\n   \p{Pattern_Syntax}      \p{Pattern_Syntax=Y} (Short: \p{PatSyn})\n                             (2760)\n   \p{Pattern_Syntax: N*}  (Short: \p{PatSyn=N}, \P{PatSyn})\n                             (1_111_352 plus all above-Unicode code\n                             points: [\x00-\x200-9A-Z_a-z\x7f-\n                             \xa0\xa8\xaa\xad\xaf\xb2-\xb5\xb7-\n                             \xba\xbc-\xbe\xc0-\xd6\xd8-\xf6\xf8-\n                             \xff], U+0100..200F, U+2028..202F,\n                             U+203F..2040, U+2054, U+205F..218F ...)\n   \p{Pattern_Syntax: Y*}  (Short: \p{PatSyn=Y}, \p{PatSyn}) (2760:\n                             [!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                             >?\@\[\\\]\^`\{\|\}~\xa1-\xa7\xa9\xab-\n                             \xac\xae\xb0-\xb1\xb6\xbb\xbf\xd7\xf7],\n                             U+2010..2027, U+2030..203E,\n                             U+2041..2053, U+2055..205E, U+2190..245F\n                             ...)\n   \p{Pattern_White_Space} \p{Pattern_White_Space=Y} (Short:\n                             \p{PatWS}) (11)\n   \p{Pattern_White_Space: N*} (Short: \p{PatWS=N}, \P{PatWS})\n                             (1_114_101 plus all above-Unicode code\n                             points: [^\t\n\cK\f\r\x20\x85],\n                             U+0100..200D, U+2010..2027,\n                             U+202A..infinity)\n   \p{Pattern_White_Space: Y*} (Short: \p{PatWS=Y}, \p{PatWS}) (11:\n                             [\t\n\cK\f\r\x20\x85], U+200E..200F,\n                             U+2028..2029)\n   \p{Pau_Cin_Hau}         \p{Script_Extensions=Pau_Cin_Hau} (Short:\n                             \p{Pauc}; NOT \p{Block=Pau_Cin_Hau}) (57)\n   \p{Pauc}                \p{Pau_Cin_Hau} (= \p{Script_Extensions=\n                             Pau_Cin_Hau}) (NOT \p{Block=\n                             Pau_Cin_Hau}) (57)\n   \p{Pc}                  \p{Connector_Punctuation} (=\n                             \p{General_Category=\n                             Connector_Punctuation}) (10)\n   \p{PCM}                 \p{Prepended_Concatenation_Mark} (=\n                             \p{Prepended_Concatenation_Mark=Y}) (10)\n   \p{PCM: *}              \p{Prepended_Concatenation_Mark: *}\n   \p{Pd}                  \p{Dash_Punctuation} (=\n                             \p{General_Category=Dash_Punctuation})\n                             (24)\n   \p{Pe}                  \p{Close_Punctuation} (=\n                             \p{General_Category=Close_Punctuation})\n                             (73)\n   \p{PerlSpace}           \p{PosixSpace} (6)\n   \p{PerlWord}            \p{PosixWord} (63)\n   \p{Perm}                \p{Old_Permic} (= \p{Script_Extensions=\n                             Old_Permic}) (NOT \p{Block=Old_Permic})\n                             (44)\n   \p{Pf}                  \p{Final_Punctuation} (=\n                             \p{General_Category=Final_Punctuation})\n                             (10)\n   \p{Phag}                \p{Phags_Pa} (= \p{Script_Extensions=\n                             Phags_Pa}) (NOT \p{Block=Phags_Pa}) (59)\n   \p{Phags_Pa}            \p{Script_Extensions=Phags_Pa} (Short:\n                             \p{Phag}; NOT \p{Block=Phags_Pa}) (59)\n X \p{Phaistos}            \p{Phaistos_Disc} (= \p{Block=\n                             Phaistos_Disc}) (48)\n X \p{Phaistos_Disc}       \p{Block=Phaistos_Disc} (Short:\n                             \p{InPhaistos}) (48)\n   \p{Phli}                \p{Inscriptional_Pahlavi} (=\n                             \p{Script_Extensions=\n                             Inscriptional_Pahlavi}) (NOT \p{Block=\n                             Inscriptional_Pahlavi}) (27)\n   \p{Phlp}                \p{Psalter_Pahlavi} (=\n                             \p{Script_Extensions=Psalter_Pahlavi})\n                             (NOT \p{Block=Psalter_Pahlavi}) (30)\n   \p{Phnx}                \p{Phoenician} (= \p{Script_Extensions=\n                             Phoenician}) (NOT \p{Block=Phoenician})\n                             (29)\n   \p{Phoenician}          \p{Script_Extensions=Phoenician} (Short:\n                             \p{Phnx}; NOT \p{Block=Phoenician}) (29)\n X \p{Phonetic_Ext}        \p{Phonetic_Extensions} (= \p{Block=\n                             Phonetic_Extensions}) (128)\n X \p{Phonetic_Ext_Sup}    \p{Phonetic_Extensions_Supplement} (=\n                             \p{Block=\n                             Phonetic_Extensions_Supplement}) (64)\n X \p{Phonetic_Extensions} \p{Block=Phonetic_Extensions} (Short:\n                             \p{InPhoneticExt}) (128)\n X \p{Phonetic_Extensions_Supplement} \p{Block=\n                             Phonetic_Extensions_Supplement} (Short:\n                             \p{InPhoneticExtSup}) (64)\n   \p{Pi}                  \p{Initial_Punctuation} (=\n                             \p{General_Category=\n                             Initial_Punctuation}) (12)\n X \p{Playing_Cards}       \p{Block=Playing_Cards} (96)\n   \p{Plrd}                \p{Miao} (= \p{Script_Extensions=Miao})\n                             (NOT \p{Block=Miao}) (133)\n   \p{Po}                  \p{Other_Punctuation} (=\n                             \p{General_Category=Other_Punctuation})\n                             (566)\n   \p{PosixAlnum}          (62: [0-9A-Za-z])\n   \p{PosixAlpha}          (52: [A-Za-z])\n   \p{PosixBlank}          (2: [\t\x20])\n   \p{PosixCntrl}          ASCII control characters (33: ACK, BEL,\n                             BS, CAN, CR, DC1, DC2, DC3, DC4, DEL,\n                             DLE, ENQ, EOM, EOT, ESC, ETB, ETX, FF,\n                             FS, GS, HT, LF, NAK, NUL, RS, SI, SO,\n                             SOH, STX, SUB, SYN, US, VT)\n   \p{PosixDigit}          (10: [0-9])\n   \p{PosixGraph}          (94: [!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-\n                             Z\[\\\]\^_`a-z\{\|\}~])\n   \p{PosixLower}          (/i= PosixAlpha) (26: [a-z])\n   \p{PosixPrint}          (95: [\x20-\x7e])\n   \p{PosixPunct}          (32: [!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                             >?\@\[\\\]\^_`\{\|\}~])\n   \p{PosixSpace}          (Short: \p{PerlSpace}) (6:\n                             [\t\n\cK\f\r\x20])\n   \p{PosixUpper}          (/i= PosixAlpha) (26: [A-Z])\n   \p{PosixWord}           \w, restricted to ASCII (Short:\n                             \p{PerlWord}) (63: [0-9A-Z_a-z])\n   \p{PosixXDigit}         \p{ASCII_Hex_Digit=Y} (Short: \p{AHex})\n                             (22)\n   \p{Prepended_Concatenation_Mark} \p{Prepended_Concatenation_Mark=\n                             Y} (Short: \p{PCM}) (10)\n   \p{Prepended_Concatenation_Mark: N*} (Short: \p{PCM=N}, \P{PCM})\n                             (1_114_102 plus all above-Unicode code\n                             points: U+0000..05FF, U+0606..06DC,\n                             U+06DE..070E, U+0710..08E1,\n                             U+08E3..110BC, U+110BE..infinity)\n   \p{Prepended_Concatenation_Mark: Y*} (Short: \p{PCM=Y}, \p{PCM})\n                             (10: U+0600..0605, U+06DD, U+070F,\n                             U+08E2, U+110BD)\n T \p{Present_In: 1.1}     \p{Age=V1_1} (Short: \p{In=1.1}) (Perl\n                             extension) (33_979)\n T \p{Present_In: 2.0}     Code point's usage introduced in version\n                             2.0 or earlier (Short: \p{In=2.0}) (Perl\n                             extension) (178_500: U+0000..01F5,\n                             U+01FA..0217, U+0250..02A8,\n                             U+02B0..02DE, U+02E0..02E9, U+0300..0345\n                             ...)\n   \p{Present_In: V2_0}    \p{Present_In=2.0} (Perl extension)\n                             (178_500)\n T \p{Present_In: 2.1}     Code point's usage introduced in version\n                             2.1 or earlier (Short: \p{In=2.1}) (Perl\n                             extension) (178_502: U+0000..01F5,\n                             U+01FA..0217, U+0250..02A8,\n                             U+02B0..02DE, U+02E0..02E9, U+0300..0345\n                             ...)\n   \p{Present_In: V2_1}    \p{Present_In=2.1} (Perl extension)\n                             (178_502)\n T \p{Present_In: 3.0}     Code point's usage introduced in version\n                             3.0 or earlier (Short: \p{In=3.0}) (Perl\n                             extension) (188_809: U+0000..021F,\n                             U+0222..0233, U+0250..02AD,\n                             U+02B0..02EE, U+0300..034E, U+0360..0362\n                             ...)\n   \p{Present_In: V3_0}    \p{Present_In=3.0} (Perl extension)\n                             (188_809)\n T \p{Present_In: 3.1}     Code point's usage introduced in version\n                             3.1 or earlier (Short: \p{In=3.1}) (Perl\n                             extension) (233_787: U+0000..021F,\n                             U+0222..0233, U+0250..02AD,\n                             U+02B0..02EE, U+0300..034E, U+0360..0362\n                             ...)\n   \p{Present_In: V3_1}    \p{Present_In=3.1} (Perl extension)\n                             (233_787)\n T \p{Present_In: 3.2}     Code point's usage introduced in version\n                             3.2 or earlier (Short: \p{In=3.2}) (Perl\n                             extension) (234_803: U+0000..0220,\n                             U+0222..0233, U+0250..02AD,\n                             U+02B0..02EE, U+0300..034F, U+0360..036F\n                             ...)\n   \p{Present_In: V3_2}    \p{Present_In=3.2} (Perl extension)\n                             (234_803)\n T \p{Present_In: 4.0}     Code point's usage introduced in version\n                             4.0 or earlier (Short: \p{In=4.0}) (Perl\n                             extension) (236_029: U+0000..0236,\n                             U+0250..0357, U+035D..036F,\n                             U+0374..0375, U+037A, U+037E ...)\n   \p{Present_In: V4_0}    \p{Present_In=4.0} (Perl extension)\n                             (236_029)\n T \p{Present_In: 4.1}     Code point's usage introduced in version\n                             4.1 or earlier (Short: \p{In=4.1}) (Perl\n                             extension) (237_302: U+0000..0241,\n                             U+0250..036F, U+0374..0375, U+037A,\n                             U+037E, U+0384..038A ...)\n   \p{Present_In: V4_1}    \p{Present_In=4.1} (Perl extension)\n                             (237_302)\n T \p{Present_In: 5.0}     Code point's usage introduced in version\n                             5.0 or earlier (Short: \p{In=5.0}) (Perl\n                             extension) (238_671: U+0000..036F,\n                             U+0374..0375, U+037A..037E,\n                             U+0384..038A, U+038C, U+038E..03A1 ...)\n   \p{Present_In: V5_0}    \p{Present_In=5.0} (Perl extension)\n                             (238_671)\n T \p{Present_In: 5.1}     Code point's usage introduced in version\n                             5.1 or earlier (Short: \p{In=5.1}) (Perl\n                             extension) (240_295: U+0000..0377,\n                             U+037A..037E, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..0523 ...)\n   \p{Present_In: V5_1}    \p{Present_In=5.1} (Perl extension)\n                             (240_295)\n T \p{Present_In: 5.2}     Code point's usage introduced in version\n                             5.2 or earlier (Short: \p{In=5.2}) (Perl\n                             extension) (246_943: U+0000..0377,\n                             U+037A..037E, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..0525 ...)\n   \p{Present_In: V5_2}    \p{Present_In=5.2} (Perl extension)\n                             (246_943)\n T \p{Present_In: 6.0}     Code point's usage introduced in version\n                             6.0 or earlier (Short: \p{In=6.0}) (Perl\n                             extension) (249_031: U+0000..0377,\n                             U+037A..037E, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..0527 ...)\n   \p{Present_In: V6_0}    \p{Present_In=6.0} (Perl extension)\n                             (249_031)\n T \p{Present_In: 6.1}     Code point's usage introduced in version\n                             6.1 or earlier (Short: \p{In=6.1}) (Perl\n                             extension) (249_763: U+0000..0377,\n                             U+037A..037E, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..0527 ...)\n   \p{Present_In: V6_1}    \p{Present_In=6.1} (Perl extension)\n                             (249_763)\n T \p{Present_In: 6.2}     Code point's usage introduced in version\n                             6.2 or earlier (Short: \p{In=6.2}) (Perl\n                             extension) (249_764: U+0000..0377,\n                             U+037A..037E, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..0527 ...)\n   \p{Present_In: V6_2}    \p{Present_In=6.2} (Perl extension)\n                             (249_764)\n T \p{Present_In: 6.3}     Code point's usage introduced in version\n                             6.3 or earlier (Short: \p{In=6.3}) (Perl\n                             extension) (249_769: U+0000..0377,\n                             U+037A..037E, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..0527 ...)\n   \p{Present_In: V6_3}    \p{Present_In=6.3} (Perl extension)\n                             (249_769)\n T \p{Present_In: 7.0}     Code point's usage introduced in version\n                             7.0 or earlier (Short: \p{In=7.0}) (Perl\n                             extension) (252_603: U+0000..0377,\n                             U+037A..037F, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..052F ...)\n   \p{Present_In: V7_0}    \p{Present_In=7.0} (Perl extension)\n                             (252_603)\n T \p{Present_In: 8.0}     Code point's usage introduced in version\n                             8.0 or earlier (Short: \p{In=8.0}) (Perl\n                             extension) (260_319: U+0000..0377,\n                             U+037A..037F, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..052F ...)\n   \p{Present_In: V8_0}    \p{Present_In=8.0} (Perl extension)\n                             (260_319)\n T \p{Present_In: 9.0}     Code point's usage introduced in version\n                             9.0 or earlier (Short: \p{In=9.0}) (Perl\n                             extension) (267_819: U+0000..0377,\n                             U+037A..037F, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..052F ...)\n   \p{Present_In: V9_0}    \p{Present_In=9.0} (Perl extension)\n                             (267_819)\n T \p{Present_In: 10.0}    Code point's usage introduced in version\n                             10.0 or earlier (Short: \p{In=10.0})\n                             (Perl extension) (276_337: U+0000..0377,\n                             U+037A..037F, U+0384..038A, U+038C,\n                             U+038E..03A1, U+03A3..052F ...)\n   \p{Present_In: V10_0}   \p{Present_In=10.0} (Perl extension)\n                             (276_337)\n   \p{Present_In: Unassigned} \p{Age=Unassigned} (Short: \p{In=\n                             Unassigned}) (Perl extension) (837_775\n                             plus all above-Unicode code points)\n   \p{Print}               \p{XPosixPrint} (274_156)\n   \p{Private_Use}         \p{General_Category=Private_Use} (Short:\n                             \p{Co}; NOT \p{Private_Use_Area})\n                             (137_468)\n X \p{Private_Use_Area}    \p{Block=Private_Use_Area} (Short:\n                             \p{InPUA}) (6400)\n   \p{Prti}                \p{Inscriptional_Parthian} (=\n                             \p{Script_Extensions=\n                             Inscriptional_Parthian}) (NOT \p{Block=\n                             Inscriptional_Parthian}) (30)\n   \p{Ps}                  \p{Open_Punctuation} (=\n                             \p{General_Category=Open_Punctuation})\n                             (75)\n   \p{Psalter_Pahlavi}     \p{Script_Extensions=Psalter_Pahlavi}\n                             (Short: \p{Phlp}; NOT \p{Block=\n                             Psalter_Pahlavi}) (30)\n X \p{PUA}                 \p{Private_Use_Area} (= \p{Block=\n                             Private_Use_Area}) (6400)\n   \p{Punct}               \p{General_Category=Punctuation} (Short:\n                             \p{P}; NOT \p{General_Punctuation}) (770)\n   \p{Punctuation}         \p{Punct} (= \p{General_Category=\n                             Punctuation}) (NOT\n                             \p{General_Punctuation}) (770)\n   \p{Qaac}                \p{Coptic} (= \p{Script_Extensions=\n                             Coptic}) (NOT \p{Block=Coptic}) (165)\n   \p{Qaai}                \p{Inherited} (= \p{Script_Extensions=\n                             Inherited}) (500)\n   \p{QMark}               \p{Quotation_Mark} (= \p{Quotation_Mark=\n                             Y}) (30)\n   \p{QMark: *}            \p{Quotation_Mark: *}\n   \p{Quotation_Mark}      \p{Quotation_Mark=Y} (Short: \p{QMark})\n                             (30)\n   \p{Quotation_Mark: N*}  (Short: \p{QMark=N}, \P{QMark}) (1_114_082\n                             plus all above-Unicode code points:\n                             [\x00-\x20!#\$\%&\(\)*+,\-.\/0-9:;<=\n                             >?\@A-Z\[\\\]\^_`a-z\{\|\}~\x7f-\n                             \xaa\xac-\xba\xbc-\xff], U+0100..2017,\n                             U+2020..2038, U+203B..2E41,\n                             U+2E43..300B, U+3010..301C ...)\n   \p{Quotation_Mark: Y*}  (Short: \p{QMark=Y}, \p{QMark}) (30:\n                             [\"\'\xab\xbb], U+2018..201F,\n                             U+2039..203A, U+2E42, U+300C..300F,\n                             U+301D..301F ...)\n   \p{Radical}             \p{Radical=Y} (329)\n   \p{Radical: N*}         (Single: \P{Radical}) (1_113_783 plus all\n                             above-Unicode code points: U+0000..2E7F,\n                             U+2E9A, U+2EF4..2EFF, U+2FD6..infinity)\n   \p{Radical: Y*}         (Single: \p{Radical}) (329: U+2E80..2E99,\n                             U+2E9B..2EF3, U+2F00..2FD5)\n   \p{Regional_Indicator}  \p{Regional_Indicator=Y} (Short: \p{RI})\n                             (26)\n   \p{Regional_Indicator: N*} (Short: \p{RI=N}, \P{RI}) (1_114_086\n                             plus all above-Unicode code points:\n                             U+0000..1F1E5, U+1F200..infinity)\n   \p{Regional_Indicator: Y*} (Short: \p{RI=Y}, \p{RI}) (26:\n                             U+1F1E6..1F1FF)\n   \p{Rejang}              \p{Script_Extensions=Rejang} (Short:\n                             \p{Rjng}; NOT \p{Block=Rejang}) (37)\n   \p{RI}                  \p{Regional_Indicator} (=\n                             \p{Regional_Indicator=Y}) (26)\n   \p{RI: *}               \p{Regional_Indicator: *}\n   \p{Rjng}                \p{Rejang} (= \p{Script_Extensions=\n                             Rejang}) (NOT \p{Block=Rejang}) (37)\n X \p{Rumi}                \p{Rumi_Numeral_Symbols} (= \p{Block=\n                             Rumi_Numeral_Symbols}) (32)\n X \p{Rumi_Numeral_Symbols} \p{Block=Rumi_Numeral_Symbols} (Short:\n                             \p{InRumi}) (32)\n   \p{Runic}               \p{Script_Extensions=Runic} (Short:\n                             \p{Runr}; NOT \p{Block=Runic}) (86)\n   \p{Runr}                \p{Runic} (= \p{Script_Extensions=Runic})\n                             (NOT \p{Block=Runic}) (86)\n   \p{S} \pS               \p{Symbol} (= \p{General_Category=Symbol})\n                             (6978)\n   \p{Samaritan}           \p{Script_Extensions=Samaritan} (Short:\n                             \p{Samr}; NOT \p{Block=Samaritan}) (61)\n   \p{Samr}                \p{Samaritan} (= \p{Script_Extensions=\n                             Samaritan}) (NOT \p{Block=Samaritan})\n                             (61)\n   \p{Sarb}                \p{Old_South_Arabian} (=\n                             \p{Script_Extensions=Old_South_Arabian})\n                             (32)\n   \p{Saur}                \p{Saurashtra} (= \p{Script_Extensions=\n                             Saurashtra}) (NOT \p{Block=Saurashtra})\n                             (82)\n   \p{Saurashtra}          \p{Script_Extensions=Saurashtra} (Short:\n                             \p{Saur}; NOT \p{Block=Saurashtra}) (82)\n   \p{SB: *}               \p{Sentence_Break: *}\n   \p{Sc}                  \p{Currency_Symbol} (=\n                             \p{General_Category=Currency_Symbol})\n                             (54)\n   \p{Sc: *}               \p{Script: *}\n   \p{Script: Adlam}       (Short: \p{Sc=Adlm}) (87: U+1E900..1E94A,\n                             U+1E950..1E959, U+1E95E..1E95F)\n   \p{Script: Adlm}        \p{Script=Adlam} (87)\n   \p{Script: Aghb}        \p{Script=Caucasian_Albanian} (=\n                             \p{Script_Extensions=\n                             Caucasian_Albanian}) (53)\n   \p{Script: Ahom}        \p{Script_Extensions=Ahom} (Short: \p{Sc=\n                             Ahom}, \p{Ahom}) (57)\n   \p{Script: Anatolian_Hieroglyphs} \p{Script_Extensions=\n                             Anatolian_Hieroglyphs} (Short: \p{Sc=\n                             Hluw}, \p{Hluw}) (583)\n   \p{Script: Arab}        \p{Script=Arabic} (1280)\n   \p{Script: Arabic}      (Short: \p{Sc=Arab}) (1280: U+0600..0604,\n                             U+0606..060B, U+060D..061A, U+061C,\n                             U+061E, U+0620..063F ...)\n   \p{Script: Armenian}    (Short: \p{Sc=Armn}) (93: U+0531..0556,\n                             U+0559..055F, U+0561..0587, U+058A,\n                             U+058D..058F, U+FB13..FB17)\n   \p{Script: Armi}        \p{Script=Imperial_Aramaic} (=\n                             \p{Script_Extensions=Imperial_Aramaic})\n                             (31)\n   \p{Script: Armn}        \p{Script=Armenian} (93)\n   \p{Script: Avestan}     \p{Script_Extensions=Avestan} (Short:\n                             \p{Sc=Avst}, \p{Avst}) (61)\n   \p{Script: Avst}        \p{Script=Avestan} (=\n                             \p{Script_Extensions=Avestan}) (61)\n   \p{Script: Bali}        \p{Script=Balinese} (=\n                             \p{Script_Extensions=Balinese}) (121)\n   \p{Script: Balinese}    \p{Script_Extensions=Balinese} (Short:\n                             \p{Sc=Bali}, \p{Bali}) (121)\n   \p{Script: Bamu}        \p{Script=Bamum} (= \p{Script_Extensions=\n                             Bamum}) (657)\n   \p{Script: Bamum}       \p{Script_Extensions=Bamum} (Short: \p{Sc=\n                             Bamu}, \p{Bamu}) (657)\n   \p{Script: Bass}        \p{Script=Bassa_Vah} (=\n                             \p{Script_Extensions=Bassa_Vah}) (36)\n   \p{Script: Bassa_Vah}   \p{Script_Extensions=Bassa_Vah} (Short:\n                             \p{Sc=Bass}, \p{Bass}) (36)\n   \p{Script: Batak}       \p{Script_Extensions=Batak} (Short: \p{Sc=\n                             Batk}, \p{Batk}) (56)\n   \p{Script: Batk}        \p{Script=Batak} (= \p{Script_Extensions=\n                             Batak}) (56)\n   \p{Script: Beng}        \p{Script=Bengali} (95)\n   \p{Script: Bengali}     (Short: \p{Sc=Beng}) (95: U+0980..0983,\n                             U+0985..098C, U+098F..0990,\n                             U+0993..09A8, U+09AA..09B0, U+09B2 ...)\n   \p{Script: Bhaiksuki}   \p{Script_Extensions=Bhaiksuki} (Short:\n                             \p{Sc=Bhks}, \p{Bhks}) (97)\n   \p{Script: Bhks}        \p{Script=Bhaiksuki} (=\n                             \p{Script_Extensions=Bhaiksuki}) (97)\n   \p{Script: Bopo}        \p{Script=Bopomofo} (71)\n   \p{Script: Bopomofo}    (Short: \p{Sc=Bopo}) (71: U+02EA..02EB,\n                             U+3105..312E, U+31A0..31BA)\n   \p{Script: Brah}        \p{Script=Brahmi} (= \p{Script_Extensions=\n                             Brahmi}) (109)\n   \p{Script: Brahmi}      \p{Script_Extensions=Brahmi} (Short:\n                             \p{Sc=Brah}, \p{Brah}) (109)\n   \p{Script: Brai}        \p{Script=Braille} (=\n                             \p{Script_Extensions=Braille}) (256)\n   \p{Script: Braille}     \p{Script_Extensions=Braille} (Short:\n                             \p{Sc=Brai}, \p{Brai}) (256)\n   \p{Script: Bugi}        \p{Script=Buginese} (30)\n   \p{Script: Buginese}    (Short: \p{Sc=Bugi}) (30: U+1A00..1A1B,\n                             U+1A1E..1A1F)\n   \p{Script: Buhd}        \p{Script=Buhid} (20)\n   \p{Script: Buhid}       (Short: \p{Sc=Buhd}) (20: U+1740..1753)\n   \p{Script: Cakm}        \p{Script=Chakma} (67)\n   \p{Script: Canadian_Aboriginal} \p{Script_Extensions=\n                             Canadian_Aboriginal} (Short: \p{Sc=\n                             Cans}, \p{Cans}) (710)\n   \p{Script: Cans}        \p{Script=Canadian_Aboriginal} (=\n                             \p{Script_Extensions=\n                             Canadian_Aboriginal}) (710)\n   \p{Script: Cari}        \p{Script=Carian} (= \p{Script_Extensions=\n                             Carian}) (49)\n   \p{Script: Carian}      \p{Script_Extensions=Carian} (Short:\n                             \p{Sc=Cari}, \p{Cari}) (49)\n   \p{Script: Caucasian_Albanian} \p{Script_Extensions=\n                             Caucasian_Albanian} (Short: \p{Sc=Aghb},\n                             \p{Aghb}) (53)\n   \p{Script: Chakma}      (Short: \p{Sc=Cakm}) (67: U+11100..11134,\n                             U+11136..11143)\n   \p{Script: Cham}        \p{Script_Extensions=Cham} (Short: \p{Sc=\n                             Cham}, \p{Cham}) (83)\n   \p{Script: Cher}        \p{Script=Cherokee} (=\n                             \p{Script_Extensions=Cherokee}) (172)\n   \p{Script: Cherokee}    \p{Script_Extensions=Cherokee} (Short:\n                             \p{Sc=Cher}, \p{Cher}) (172)\n   \p{Script: Common}      (Short: \p{Sc=Zyyy}) (7363: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`\{\|\}~\x7f-\xa9\xab-\n                             \xb9\xbb-\xbf\xd7\xf7], U+02B9..02DF,\n                             U+02E5..02E9, U+02EC..02FF, U+0374,\n                             U+037E ...)\n   \p{Script: Copt}        \p{Script=Coptic} (137)\n   \p{Script: Coptic}      (Short: \p{Sc=Copt}) (137: U+03E2..03EF,\n                             U+2C80..2CF3, U+2CF9..2CFF)\n   \p{Script: Cprt}        \p{Script=Cypriot} (55)\n   \p{Script: Cuneiform}   \p{Script_Extensions=Cuneiform} (Short:\n                             \p{Sc=Xsux}, \p{Xsux}) (1234)\n   \p{Script: Cypriot}     (Short: \p{Sc=Cprt}) (55: U+10800..10805,\n                             U+10808, U+1080A..10835, U+10837..10838,\n                             U+1083C, U+1083F)\n   \p{Script: Cyrillic}    (Short: \p{Sc=Cyrl}) (443: U+0400..0484,\n                             U+0487..052F, U+1C80..1C88, U+1D2B,\n                             U+1D78, U+2DE0..2DFF ...)\n   \p{Script: Cyrl}        \p{Script=Cyrillic} (443)\n   \p{Script: Deseret}     \p{Script_Extensions=Deseret} (Short:\n                             \p{Sc=Dsrt}, \p{Dsrt}) (80)\n   \p{Script: Deva}        \p{Script=Devanagari} (154)\n   \p{Script: Devanagari}  (Short: \p{Sc=Deva}) (154: U+0900..0950,\n                             U+0953..0963, U+0966..097F, U+A8E0..A8FD)\n   \p{Script: Dsrt}        \p{Script=Deseret} (=\n                             \p{Script_Extensions=Deseret}) (80)\n   \p{Script: Dupl}        \p{Script=Duployan} (143)\n   \p{Script: Duployan}    (Short: \p{Sc=Dupl}) (143: U+1BC00..1BC6A,\n                             U+1BC70..1BC7C, U+1BC80..1BC88,\n                             U+1BC90..1BC99, U+1BC9C..1BC9F)\n   \p{Script: Egyp}        \p{Script=Egyptian_Hieroglyphs} (=\n                             \p{Script_Extensions=\n                             Egyptian_Hieroglyphs}) (1071)\n   \p{Script: Egyptian_Hieroglyphs} \p{Script_Extensions=\n                             Egyptian_Hieroglyphs} (Short: \p{Sc=\n                             Egyp}, \p{Egyp}) (1071)\n   \p{Script: Elba}        \p{Script=Elbasan} (=\n                             \p{Script_Extensions=Elbasan}) (40)\n   \p{Script: Elbasan}     \p{Script_Extensions=Elbasan} (Short:\n                             \p{Sc=Elba}, \p{Elba}) (40)\n   \p{Script: Ethi}        \p{Script=Ethiopic} (=\n                             \p{Script_Extensions=Ethiopic}) (495)\n   \p{Script: Ethiopic}    \p{Script_Extensions=Ethiopic} (Short:\n                             \p{Sc=Ethi}, \p{Ethi}) (495)\n   \p{Script: Geor}        \p{Script=Georgian} (127)\n   \p{Script: Georgian}    (Short: \p{Sc=Geor}) (127: U+10A0..10C5,\n                             U+10C7, U+10CD, U+10D0..10FA,\n                             U+10FC..10FF, U+2D00..2D25 ...)\n   \p{Script: Glag}        \p{Script=Glagolitic} (132)\n   \p{Script: Glagolitic}  (Short: \p{Sc=Glag}) (132: U+2C00..2C2E,\n                             U+2C30..2C5E, U+1E000..1E006,\n                             U+1E008..1E018, U+1E01B..1E021,\n                             U+1E023..1E024 ...)\n   \p{Script: Gonm}        \p{Script=Masaram_Gondi} (=\n                             \p{Script_Extensions=Masaram_Gondi}) (75)\n   \p{Script: Goth}        \p{Script=Gothic} (= \p{Script_Extensions=\n                             Gothic}) (27)\n   \p{Script: Gothic}      \p{Script_Extensions=Gothic} (Short:\n                             \p{Sc=Goth}, \p{Goth}) (27)\n   \p{Script: Gran}        \p{Script=Grantha} (85)\n   \p{Script: Grantha}     (Short: \p{Sc=Gran}) (85: U+11300..11303,\n                             U+11305..1130C, U+1130F..11310,\n                             U+11313..11328, U+1132A..11330,\n                             U+11332..11333 ...)\n   \p{Script: Greek}       (Short: \p{Sc=Grek}) (518: U+0370..0373,\n                             U+0375..0377, U+037A..037D, U+037F,\n                             U+0384, U+0386 ...)\n   \p{Script: Grek}        \p{Script=Greek} (518)\n   \p{Script: Gujarati}    (Short: \p{Sc=Gujr}) (91: U+0A81..0A83,\n                             U+0A85..0A8D, U+0A8F..0A91,\n                             U+0A93..0AA8, U+0AAA..0AB0, U+0AB2..0AB3\n                             ...)\n   \p{Script: Gujr}        \p{Script=Gujarati} (91)\n   \p{Script: Gurmukhi}    (Short: \p{Sc=Guru}) (79: U+0A01..0A03,\n                             U+0A05..0A0A, U+0A0F..0A10,\n                             U+0A13..0A28, U+0A2A..0A30, U+0A32..0A33\n                             ...)\n   \p{Script: Guru}        \p{Script=Gurmukhi} (79)\n   \p{Script: Han}         (Short: \p{Sc=Han}) (89_228: U+2E80..2E99,\n                             U+2E9B..2EF3, U+2F00..2FD5, U+3005,\n                             U+3007, U+3021..3029 ...)\n   \p{Script: Hang}        \p{Script=Hangul} (11_739)\n   \p{Script: Hangul}      (Short: \p{Sc=Hang}) (11_739:\n                             U+1100..11FF, U+302E..302F,\n                             U+3131..318E, U+3200..321E,\n                             U+3260..327E, U+A960..A97C ...)\n   \p{Script: Hani}        \p{Script=Han} (89_228)\n   \p{Script: Hano}        \p{Script=Hanunoo} (21)\n   \p{Script: Hanunoo}     (Short: \p{Sc=Hano}) (21: U+1720..1734)\n   \p{Script: Hatr}        \p{Script=Hatran} (= \p{Script_Extensions=\n                             Hatran}) (26)\n   \p{Script: Hatran}      \p{Script_Extensions=Hatran} (Short:\n                             \p{Sc=Hatr}, \p{Hatr}) (26)\n   \p{Script: Hebr}        \p{Script=Hebrew} (= \p{Script_Extensions=\n                             Hebrew}) (133)\n   \p{Script: Hebrew}      \p{Script_Extensions=Hebrew} (Short:\n                             \p{Sc=Hebr}, \p{Hebr}) (133)\n   \p{Script: Hira}        \p{Script=Hiragana} (376)\n   \p{Script: Hiragana}    (Short: \p{Sc=Hira}) (376: U+3041..3096,\n                             U+309D..309F, U+1B001..1B11E, U+1F200)\n   \p{Script: Hluw}        \p{Script=Anatolian_Hieroglyphs} (=\n                             \p{Script_Extensions=\n                             Anatolian_Hieroglyphs}) (583)\n   \p{Script: Hmng}        \p{Script=Pahawh_Hmong} (=\n                             \p{Script_Extensions=Pahawh_Hmong}) (127)\n   \p{Script: Hung}        \p{Script=Old_Hungarian} (=\n                             \p{Script_Extensions=Old_Hungarian})\n                             (108)\n   \p{Script: Imperial_Aramaic} \p{Script_Extensions=\n                             Imperial_Aramaic} (Short: \p{Sc=Armi},\n                             \p{Armi}) (31)\n   \p{Script: Inherited}   (Short: \p{Sc=Zinh}) (568: U+0300..036F,\n                             U+0485..0486, U+064B..0655, U+0670,\n                             U+0951..0952, U+1AB0..1ABE ...)\n   \p{Script: Inscriptional_Pahlavi} \p{Script_Extensions=\n                             Inscriptional_Pahlavi} (Short: \p{Sc=\n                             Phli}, \p{Phli}) (27)\n   \p{Script: Inscriptional_Parthian} \p{Script_Extensions=\n                             Inscriptional_Parthian} (Short: \p{Sc=\n                             Prti}, \p{Prti}) (30)\n   \p{Script: Ital}        \p{Script=Old_Italic} (=\n                             \p{Script_Extensions=Old_Italic}) (39)\n   \p{Script: Java}        \p{Script=Javanese} (90)\n   \p{Script: Javanese}    (Short: \p{Sc=Java}) (90: U+A980..A9CD,\n                             U+A9D0..A9D9, U+A9DE..A9DF)\n   \p{Script: Kaithi}      (Short: \p{Sc=Kthi}) (66: U+11080..110C1)\n   \p{Script: Kali}        \p{Script=Kayah_Li} (47)\n   \p{Script: Kana}        \p{Script=Katakana} (300)\n   \p{Script: Kannada}     (Short: \p{Sc=Knda}) (88: U+0C80..0C83,\n                             U+0C85..0C8C, U+0C8E..0C90,\n                             U+0C92..0CA8, U+0CAA..0CB3, U+0CB5..0CB9\n                             ...)\n   \p{Script: Katakana}    (Short: \p{Sc=Kana}) (300: U+30A1..30FA,\n                             U+30FD..30FF, U+31F0..31FF,\n                             U+32D0..32FE, U+3300..3357, U+FF66..FF6F\n                             ...)\n   \p{Script: Kayah_Li}    (Short: \p{Sc=Kali}) (47: U+A900..A92D,\n                             U+A92F)\n   \p{Script: Khar}        \p{Script=Kharoshthi} (=\n                             \p{Script_Extensions=Kharoshthi}) (65)\n   \p{Script: Kharoshthi}  \p{Script_Extensions=Kharoshthi} (Short:\n                             \p{Sc=Khar}, \p{Khar}) (65)\n   \p{Script: Khmer}       \p{Script_Extensions=Khmer} (Short: \p{Sc=\n                             Khmr}, \p{Khmr}) (146)\n   \p{Script: Khmr}        \p{Script=Khmer} (= \p{Script_Extensions=\n                             Khmer}) (146)\n   \p{Script: Khoj}        \p{Script=Khojki} (62)\n   \p{Script: Khojki}      (Short: \p{Sc=Khoj}) (62: U+11200..11211,\n                             U+11213..1123E)\n   \p{Script: Khudawadi}   (Short: \p{Sc=Sind}) (69: U+112B0..112EA,\n                             U+112F0..112F9)\n   \p{Script: Knda}        \p{Script=Kannada} (88)\n   \p{Script: Kthi}        \p{Script=Kaithi} (66)\n   \p{Script: Lana}        \p{Script=Tai_Tham} (=\n                             \p{Script_Extensions=Tai_Tham}) (127)\n   \p{Script: Lao}         \p{Script_Extensions=Lao} (Short: \p{Sc=\n                             Lao}, \p{Lao}) (67)\n   \p{Script: Laoo}        \p{Script=Lao} (= \p{Script_Extensions=\n                             Lao}) (67)\n   \p{Script: Latin}       (Short: \p{Sc=Latn}) (1350: [A-Za-\n                             z\xaa\xba\xc0-\xd6\xd8-\xf6\xf8-\xff],\n                             U+0100..02B8, U+02E0..02E4,\n                             U+1D00..1D25, U+1D2C..1D5C, U+1D62..1D65\n                             ...)\n   \p{Script: Latn}        \p{Script=Latin} (1350)\n   \p{Script: Lepc}        \p{Script=Lepcha} (= \p{Script_Extensions=\n                             Lepcha}) (74)\n   \p{Script: Lepcha}      \p{Script_Extensions=Lepcha} (Short:\n                             \p{Sc=Lepc}, \p{Lepc}) (74)\n   \p{Script: Limb}        \p{Script=Limbu} (68)\n   \p{Script: Limbu}       (Short: \p{Sc=Limb}) (68: U+1900..191E,\n                             U+1920..192B, U+1930..193B, U+1940,\n                             U+1944..194F)\n   \p{Script: Lina}        \p{Script=Linear_A} (341)\n   \p{Script: Linb}        \p{Script=Linear_B} (211)\n   \p{Script: Linear_A}    (Short: \p{Sc=Lina}) (341: U+10600..10736,\n                             U+10740..10755, U+10760..10767)\n   \p{Script: Linear_B}    (Short: \p{Sc=Linb}) (211: U+10000..1000B,\n                             U+1000D..10026, U+10028..1003A,\n                             U+1003C..1003D, U+1003F..1004D,\n                             U+10050..1005D ...)\n   \p{Script: Lisu}        \p{Script_Extensions=Lisu} (Short: \p{Sc=\n                             Lisu}, \p{Lisu}) (48)\n   \p{Script: Lyci}        \p{Script=Lycian} (= \p{Script_Extensions=\n                             Lycian}) (29)\n   \p{Script: Lycian}      \p{Script_Extensions=Lycian} (Short:\n                             \p{Sc=Lyci}, \p{Lyci}) (29)\n   \p{Script: Lydi}        \p{Script=Lydian} (= \p{Script_Extensions=\n                             Lydian}) (27)\n   \p{Script: Lydian}      \p{Script_Extensions=Lydian} (Short:\n                             \p{Sc=Lydi}, \p{Lydi}) (27)\n   \p{Script: Mahajani}    (Short: \p{Sc=Mahj}) (39: U+11150..11176)\n   \p{Script: Mahj}        \p{Script=Mahajani} (39)\n   \p{Script: Malayalam}   (Short: \p{Sc=Mlym}) (117: U+0D00..0D03,\n                             U+0D05..0D0C, U+0D0E..0D10,\n                             U+0D12..0D44, U+0D46..0D48, U+0D4A..0D4F\n                             ...)\n   \p{Script: Mand}        \p{Script=Mandaic} (29)\n   \p{Script: Mandaic}     (Short: \p{Sc=Mand}) (29: U+0840..085B,\n                             U+085E)\n   \p{Script: Mani}        \p{Script=Manichaean} (51)\n   \p{Script: Manichaean}  (Short: \p{Sc=Mani}) (51: U+10AC0..10AE6,\n                             U+10AEB..10AF6)\n   \p{Script: Marc}        \p{Script=Marchen} (=\n                             \p{Script_Extensions=Marchen}) (68)\n   \p{Script: Marchen}     \p{Script_Extensions=Marchen} (Short:\n                             \p{Sc=Marc}, \p{Marc}) (68)\n   \p{Script: Masaram_Gondi} \p{Script_Extensions=Masaram_Gondi}\n                             (Short: \p{Sc=Gonm}, \p{Gonm}) (75)\n   \p{Script: Meetei_Mayek} \p{Script_Extensions=Meetei_Mayek}\n                             (Short: \p{Sc=Mtei}, \p{Mtei}) (79)\n   \p{Script: Mend}        \p{Script=Mende_Kikakui} (=\n                             \p{Script_Extensions=Mende_Kikakui})\n                             (213)\n   \p{Script: Mende_Kikakui} \p{Script_Extensions=Mende_Kikakui}\n                             (Short: \p{Sc=Mend}, \p{Mend}) (213)\n   \p{Script: Merc}        \p{Script=Meroitic_Cursive} (=\n                             \p{Script_Extensions=Meroitic_Cursive})\n                             (90)\n   \p{Script: Mero}        \p{Script=Meroitic_Hieroglyphs} (=\n                             \p{Script_Extensions=\n                             Meroitic_Hieroglyphs}) (32)\n   \p{Script: Meroitic_Cursive} \p{Script_Extensions=\n                             Meroitic_Cursive} (Short: \p{Sc=Merc},\n                             \p{Merc}) (90)\n   \p{Script: Meroitic_Hieroglyphs} \p{Script_Extensions=\n                             Meroitic_Hieroglyphs} (Short: \p{Sc=\n                             Mero}, \p{Mero}) (32)\n   \p{Script: Miao}        \p{Script_Extensions=Miao} (Short: \p{Sc=\n                             Miao}, \p{Miao}) (133)\n   \p{Script: Mlym}        \p{Script=Malayalam} (117)\n   \p{Script: Modi}        (Short: \p{Sc=Modi}) (79: U+11600..11644,\n                             U+11650..11659)\n   \p{Script: Mong}        \p{Script=Mongolian} (166)\n   \p{Script: Mongolian}   (Short: \p{Sc=Mong}) (166: U+1800..1801,\n                             U+1804, U+1806..180E, U+1810..1819,\n                             U+1820..1877, U+1880..18AA ...)\n   \p{Script: Mro}         \p{Script_Extensions=Mro} (Short: \p{Sc=\n                             Mro}, \p{Mro}) (43)\n   \p{Script: Mroo}        \p{Script=Mro} (= \p{Script_Extensions=\n                             Mro}) (43)\n   \p{Script: Mtei}        \p{Script=Meetei_Mayek} (=\n                             \p{Script_Extensions=Meetei_Mayek}) (79)\n   \p{Script: Mult}        \p{Script=Multani} (38)\n   \p{Script: Multani}     (Short: \p{Sc=Mult}) (38: U+11280..11286,\n                             U+11288, U+1128A..1128D, U+1128F..1129D,\n                             U+1129F..112A9)\n   \p{Script: Myanmar}     (Short: \p{Sc=Mymr}) (223: U+1000..109F,\n                             U+A9E0..A9FE, U+AA60..AA7F)\n   \p{Script: Mymr}        \p{Script=Myanmar} (223)\n   \p{Script: Nabataean}   \p{Script_Extensions=Nabataean} (Short:\n                             \p{Sc=Nbat}, \p{Nbat}) (40)\n   \p{Script: Narb}        \p{Script=Old_North_Arabian} (=\n                             \p{Script_Extensions=Old_North_Arabian})\n                             (32)\n   \p{Script: Nbat}        \p{Script=Nabataean} (=\n                             \p{Script_Extensions=Nabataean}) (40)\n   \p{Script: New_Tai_Lue} \p{Script_Extensions=New_Tai_Lue} (Short:\n                             \p{Sc=Talu}, \p{Talu}) (83)\n   \p{Script: Newa}        \p{Script_Extensions=Newa} (Short: \p{Sc=\n                             Newa}, \p{Newa}) (92)\n   \p{Script: Nko}         \p{Script_Extensions=Nko} (Short: \p{Sc=\n                             Nko}, \p{Nko}) (59)\n   \p{Script: Nkoo}        \p{Script=Nko} (= \p{Script_Extensions=\n                             Nko}) (59)\n   \p{Script: Nshu}        \p{Script=Nushu} (= \p{Script_Extensions=\n                             Nushu}) (397)\n   \p{Script: Nushu}       \p{Script_Extensions=Nushu} (Short: \p{Sc=\n                             Nshu}, \p{Nshu}) (397)\n   \p{Script: Ogam}        \p{Script=Ogham} (= \p{Script_Extensions=\n                             Ogham}) (29)\n   \p{Script: Ogham}       \p{Script_Extensions=Ogham} (Short: \p{Sc=\n                             Ogam}, \p{Ogam}) (29)\n   \p{Script: Ol_Chiki}    \p{Script_Extensions=Ol_Chiki} (Short:\n                             \p{Sc=Olck}, \p{Olck}) (48)\n   \p{Script: Olck}        \p{Script=Ol_Chiki} (=\n                             \p{Script_Extensions=Ol_Chiki}) (48)\n   \p{Script: Old_Hungarian} \p{Script_Extensions=Old_Hungarian}\n                             (Short: \p{Sc=Hung}, \p{Hung}) (108)\n   \p{Script: Old_Italic}  \p{Script_Extensions=Old_Italic} (Short:\n                             \p{Sc=Ital}, \p{Ital}) (39)\n   \p{Script: Old_North_Arabian} \p{Script_Extensions=\n                             Old_North_Arabian} (Short: \p{Sc=Narb},\n                             \p{Narb}) (32)\n   \p{Script: Old_Permic}  (Short: \p{Sc=Perm}) (43: U+10350..1037A)\n   \p{Script: Old_Persian} \p{Script_Extensions=Old_Persian} (Short:\n                             \p{Sc=Xpeo}, \p{Xpeo}) (50)\n   \p{Script: Old_South_Arabian} \p{Script_Extensions=\n                             Old_South_Arabian} (Short: \p{Sc=Sarb},\n                             \p{Sarb}) (32)\n   \p{Script: Old_Turkic}  \p{Script_Extensions=Old_Turkic} (Short:\n                             \p{Sc=Orkh}, \p{Orkh}) (73)\n   \p{Script: Oriya}       (Short: \p{Sc=Orya}) (90: U+0B01..0B03,\n                             U+0B05..0B0C, U+0B0F..0B10,\n                             U+0B13..0B28, U+0B2A..0B30, U+0B32..0B33\n                             ...)\n   \p{Script: Orkh}        \p{Script=Old_Turkic} (=\n                             \p{Script_Extensions=Old_Turkic}) (73)\n   \p{Script: Orya}        \p{Script=Oriya} (90)\n   \p{Script: Osage}       \p{Script_Extensions=Osage} (Short: \p{Sc=\n                             Osge}, \p{Osge}) (72)\n   \p{Script: Osge}        \p{Script=Osage} (= \p{Script_Extensions=\n                             Osage}) (72)\n   \p{Script: Osma}        \p{Script=Osmanya} (=\n                             \p{Script_Extensions=Osmanya}) (40)\n   \p{Script: Osmanya}     \p{Script_Extensions=Osmanya} (Short:\n                             \p{Sc=Osma}, \p{Osma}) (40)\n   \p{Script: Pahawh_Hmong} \p{Script_Extensions=Pahawh_Hmong}\n                             (Short: \p{Sc=Hmng}, \p{Hmng}) (127)\n   \p{Script: Palm}        \p{Script=Palmyrene} (=\n                             \p{Script_Extensions=Palmyrene}) (32)\n   \p{Script: Palmyrene}   \p{Script_Extensions=Palmyrene} (Short:\n                             \p{Sc=Palm}, \p{Palm}) (32)\n   \p{Script: Pau_Cin_Hau} \p{Script_Extensions=Pau_Cin_Hau} (Short:\n                             \p{Sc=Pauc}, \p{Pauc}) (57)\n   \p{Script: Pauc}        \p{Script=Pau_Cin_Hau} (=\n                             \p{Script_Extensions=Pau_Cin_Hau}) (57)\n   \p{Script: Perm}        \p{Script=Old_Permic} (43)\n   \p{Script: Phag}        \p{Script=Phags_Pa} (56)\n   \p{Script: Phags_Pa}    (Short: \p{Sc=Phag}) (56: U+A840..A877)\n   \p{Script: Phli}        \p{Script=Inscriptional_Pahlavi} (=\n                             \p{Script_Extensions=\n                             Inscriptional_Pahlavi}) (27)\n   \p{Script: Phlp}        \p{Script=Psalter_Pahlavi} (29)\n   \p{Script: Phnx}        \p{Script=Phoenician} (=\n                             \p{Script_Extensions=Phoenician}) (29)\n   \p{Script: Phoenician}  \p{Script_Extensions=Phoenician} (Short:\n                             \p{Sc=Phnx}, \p{Phnx}) (29)\n   \p{Script: Plrd}        \p{Script=Miao} (= \p{Script_Extensions=\n                             Miao}) (133)\n   \p{Script: Prti}        \p{Script=Inscriptional_Parthian} (=\n                             \p{Script_Extensions=\n                             Inscriptional_Parthian}) (30)\n   \p{Script: Psalter_Pahlavi} (Short: \p{Sc=Phlp}) (29:\n                             U+10B80..10B91, U+10B99..10B9C,\n                             U+10BA9..10BAF)\n   \p{Script: Qaac}        \p{Script=Coptic} (137)\n   \p{Script: Qaai}        \p{Script=Inherited} (568)\n   \p{Script: Rejang}      \p{Script_Extensions=Rejang} (Short:\n                             \p{Sc=Rjng}, \p{Rjng}) (37)\n   \p{Script: Rjng}        \p{Script=Rejang} (= \p{Script_Extensions=\n                             Rejang}) (37)\n   \p{Script: Runic}       \p{Script_Extensions=Runic} (Short: \p{Sc=\n                             Runr}, \p{Runr}) (86)\n   \p{Script: Runr}        \p{Script=Runic} (= \p{Script_Extensions=\n                             Runic}) (86)\n   \p{Script: Samaritan}   \p{Script_Extensions=Samaritan} (Short:\n                             \p{Sc=Samr}, \p{Samr}) (61)\n   \p{Script: Samr}        \p{Script=Samaritan} (=\n                             \p{Script_Extensions=Samaritan}) (61)\n   \p{Script: Sarb}        \p{Script=Old_South_Arabian} (=\n                             \p{Script_Extensions=Old_South_Arabian})\n                             (32)\n   \p{Script: Saur}        \p{Script=Saurashtra} (=\n                             \p{Script_Extensions=Saurashtra}) (82)\n   \p{Script: Saurashtra}  \p{Script_Extensions=Saurashtra} (Short:\n                             \p{Sc=Saur}, \p{Saur}) (82)\n   \p{Script: Sgnw}        \p{Script=SignWriting} (=\n                             \p{Script_Extensions=SignWriting}) (672)\n   \p{Script: Sharada}     (Short: \p{Sc=Shrd}) (94: U+11180..111CD,\n                             U+111D0..111DF)\n   \p{Script: Shavian}     \p{Script_Extensions=Shavian} (Short:\n                             \p{Sc=Shaw}, \p{Shaw}) (48)\n   \p{Script: Shaw}        \p{Script=Shavian} (=\n                             \p{Script_Extensions=Shavian}) (48)\n   \p{Script: Shrd}        \p{Script=Sharada} (94)\n   \p{Script: Sidd}        \p{Script=Siddham} (=\n                             \p{Script_Extensions=Siddham}) (92)\n   \p{Script: Siddham}     \p{Script_Extensions=Siddham} (Short:\n                             \p{Sc=Sidd}, \p{Sidd}) (92)\n   \p{Script: SignWriting} \p{Script_Extensions=SignWriting} (Short:\n                             \p{Sc=Sgnw}, \p{Sgnw}) (672)\n   \p{Script: Sind}        \p{Script=Khudawadi} (69)\n   \p{Script: Sinh}        \p{Script=Sinhala} (110)\n   \p{Script: Sinhala}     (Short: \p{Sc=Sinh}) (110: U+0D82..0D83,\n                             U+0D85..0D96, U+0D9A..0DB1,\n                             U+0DB3..0DBB, U+0DBD, U+0DC0..0DC6 ...)\n   \p{Script: Sora}        \p{Script=Sora_Sompeng} (=\n                             \p{Script_Extensions=Sora_Sompeng}) (35)\n   \p{Script: Sora_Sompeng} \p{Script_Extensions=Sora_Sompeng}\n                             (Short: \p{Sc=Sora}, \p{Sora}) (35)\n   \p{Script: Soyo}        \p{Script=Soyombo} (=\n                             \p{Script_Extensions=Soyombo}) (80)\n   \p{Script: Soyombo}     \p{Script_Extensions=Soyombo} (Short:\n                             \p{Sc=Soyo}, \p{Soyo}) (80)\n   \p{Script: Sund}        \p{Script=Sundanese} (=\n                             \p{Script_Extensions=Sundanese}) (72)\n   \p{Script: Sundanese}   \p{Script_Extensions=Sundanese} (Short:\n                             \p{Sc=Sund}, \p{Sund}) (72)\n   \p{Script: Sylo}        \p{Script=Syloti_Nagri} (44)\n   \p{Script: Syloti_Nagri} (Short: \p{Sc=Sylo}) (44: U+A800..A82B)\n   \p{Script: Syrc}        \p{Script=Syriac} (88)\n   \p{Script: Syriac}      (Short: \p{Sc=Syrc}) (88: U+0700..070D,\n                             U+070F..074A, U+074D..074F, U+0860..086A)\n   \p{Script: Tagalog}     (Short: \p{Sc=Tglg}) (20: U+1700..170C,\n                             U+170E..1714)\n   \p{Script: Tagb}        \p{Script=Tagbanwa} (18)\n   \p{Script: Tagbanwa}    (Short: \p{Sc=Tagb}) (18: U+1760..176C,\n                             U+176E..1770, U+1772..1773)\n   \p{Script: Tai_Le}      (Short: \p{Sc=Tale}) (35: U+1950..196D,\n                             U+1970..1974)\n   \p{Script: Tai_Tham}    \p{Script_Extensions=Tai_Tham} (Short:\n                             \p{Sc=Lana}, \p{Lana}) (127)\n   \p{Script: Tai_Viet}    \p{Script_Extensions=Tai_Viet} (Short:\n                             \p{Sc=Tavt}, \p{Tavt}) (72)\n   \p{Script: Takr}        \p{Script=Takri} (66)\n   \p{Script: Takri}       (Short: \p{Sc=Takr}) (66: U+11680..116B7,\n                             U+116C0..116C9)\n   \p{Script: Tale}        \p{Script=Tai_Le} (35)\n   \p{Script: Talu}        \p{Script=New_Tai_Lue} (=\n                             \p{Script_Extensions=New_Tai_Lue}) (83)\n   \p{Script: Tamil}       (Short: \p{Sc=Taml}) (72: U+0B82..0B83,\n                             U+0B85..0B8A, U+0B8E..0B90,\n                             U+0B92..0B95, U+0B99..0B9A, U+0B9C ...)\n   \p{Script: Taml}        \p{Script=Tamil} (72)\n   \p{Script: Tang}        \p{Script=Tangut} (= \p{Script_Extensions=\n                             Tangut}) (6881)\n   \p{Script: Tangut}      \p{Script_Extensions=Tangut} (Short:\n                             \p{Sc=Tang}, \p{Tang}) (6881)\n   \p{Script: Tavt}        \p{Script=Tai_Viet} (=\n                             \p{Script_Extensions=Tai_Viet}) (72)\n   \p{Script: Telu}        \p{Script=Telugu} (96)\n   \p{Script: Telugu}      (Short: \p{Sc=Telu}) (96: U+0C00..0C03,\n                             U+0C05..0C0C, U+0C0E..0C10,\n                             U+0C12..0C28, U+0C2A..0C39, U+0C3D..0C44\n                             ...)\n   \p{Script: Tfng}        \p{Script=Tifinagh} (=\n                             \p{Script_Extensions=Tifinagh}) (59)\n   \p{Script: Tglg}        \p{Script=Tagalog} (20)\n   \p{Script: Thaa}        \p{Script=Thaana} (50)\n   \p{Script: Thaana}      (Short: \p{Sc=Thaa}) (50: U+0780..07B1)\n   \p{Script: Thai}        \p{Script_Extensions=Thai} (Short: \p{Sc=\n                             Thai}, \p{Thai}) (86)\n   \p{Script: Tibetan}     \p{Script_Extensions=Tibetan} (Short:\n                             \p{Sc=Tibt}, \p{Tibt}) (207)\n   \p{Script: Tibt}        \p{Script=Tibetan} (=\n                             \p{Script_Extensions=Tibetan}) (207)\n   \p{Script: Tifinagh}    \p{Script_Extensions=Tifinagh} (Short:\n                             \p{Sc=Tfng}, \p{Tfng}) (59)\n   \p{Script: Tirh}        \p{Script=Tirhuta} (82)\n   \p{Script: Tirhuta}     (Short: \p{Sc=Tirh}) (82: U+11480..114C7,\n                             U+114D0..114D9)\n   \p{Script: Ugar}        \p{Script=Ugaritic} (=\n                             \p{Script_Extensions=Ugaritic}) (31)\n   \p{Script: Ugaritic}    \p{Script_Extensions=Ugaritic} (Short:\n                             \p{Sc=Ugar}, \p{Ugar}) (31)\n   \p{Script: Unknown}     \p{Script_Extensions=Unknown} (Short:\n                             \p{Sc=Zzzz}, \p{Zzzz}) (977_357 plus all\n                             above-Unicode code points)\n   \p{Script: Vai}         \p{Script_Extensions=Vai} (Short: \p{Sc=\n                             Vai}, \p{Vai}) (300)\n   \p{Script: Vaii}        \p{Script=Vai} (= \p{Script_Extensions=\n                             Vai}) (300)\n   \p{Script: Wara}        \p{Script=Warang_Citi} (=\n                             \p{Script_Extensions=Warang_Citi}) (84)\n   \p{Script: Warang_Citi} \p{Script_Extensions=Warang_Citi} (Short:\n                             \p{Sc=Wara}, \p{Wara}) (84)\n   \p{Script: Xpeo}        \p{Script=Old_Persian} (=\n                             \p{Script_Extensions=Old_Persian}) (50)\n   \p{Script: Xsux}        \p{Script=Cuneiform} (=\n                             \p{Script_Extensions=Cuneiform}) (1234)\n   \p{Script: Yi}          (Short: \p{Sc=Yi}) (1220: U+A000..A48C,\n                             U+A490..A4C6)\n   \p{Script: Yiii}        \p{Script=Yi} (1220)\n   \p{Script: Zanabazar_Square} \p{Script_Extensions=\n                             Zanabazar_Square} (Short: \p{Sc=Zanb},\n                             \p{Zanb}) (72)\n   \p{Script: Zanb}        \p{Script=Zanabazar_Square} (=\n                             \p{Script_Extensions=Zanabazar_Square})\n                             (72)\n   \p{Script: Zinh}        \p{Script=Inherited} (568)\n   \p{Script: Zyyy}        \p{Script=Common} (7363)\n   \p{Script: Zzzz}        \p{Script=Unknown} (=\n                             \p{Script_Extensions=Unknown}) (977_357\n                             plus all above-Unicode code points)\n   \p{Script_Extensions: Adlam} (Short: \p{Scx=Adlm}, \p{Adlm}) (88:\n                             U+0640, U+1E900..1E94A, U+1E950..1E959,\n                             U+1E95E..1E95F)\n   \p{Script_Extensions: Adlm} \p{Script_Extensions=Adlam} (88)\n   \p{Script_Extensions: Aghb} \p{Script_Extensions=\n                             Caucasian_Albanian} (53)\n   \p{Script_Extensions: Ahom} (Short: \p{Scx=Ahom}, \p{Ahom}) (57:\n                             U+11700..11719, U+1171D..1172B,\n                             U+11730..1173F)\n   \p{Script_Extensions: Anatolian_Hieroglyphs} (Short: \p{Scx=Hluw},\n                             \p{Hluw}) (583: U+14400..14646)\n   \p{Script_Extensions: Arab} \p{Script_Extensions=Arabic} (1324)\n   \p{Script_Extensions: Arabic} (Short: \p{Scx=Arab}, \p{Arab})\n                             (1324: U+0600..0604, U+0606..061C,\n                             U+061E..06DC, U+06DE..06FF,\n                             U+0750..077F, U+08A0..08B4 ...)\n   \p{Script_Extensions: Armenian} (Short: \p{Scx=Armn}, \p{Armn})\n                             (94: U+0531..0556, U+0559..055F,\n                             U+0561..0587, U+0589..058A,\n                             U+058D..058F, U+FB13..FB17)\n   \p{Script_Extensions: Armi} \p{Script_Extensions=Imperial_Aramaic}\n                             (31)\n   \p{Script_Extensions: Armn} \p{Script_Extensions=Armenian} (94)\n   \p{Script_Extensions: Avestan} (Short: \p{Scx=Avst}, \p{Avst})\n                             (61: U+10B00..10B35, U+10B39..10B3F)\n   \p{Script_Extensions: Avst} \p{Script_Extensions=Avestan} (61)\n   \p{Script_Extensions: Bali} \p{Script_Extensions=Balinese} (121)\n   \p{Script_Extensions: Balinese} (Short: \p{Scx=Bali}, \p{Bali})\n                             (121: U+1B00..1B4B, U+1B50..1B7C)\n   \p{Script_Extensions: Bamu} \p{Script_Extensions=Bamum} (657)\n   \p{Script_Extensions: Bamum} (Short: \p{Scx=Bamu}, \p{Bamu}) (657:\n                             U+A6A0..A6F7, U+16800..16A38)\n   \p{Script_Extensions: Bass} \p{Script_Extensions=Bassa_Vah} (36)\n   \p{Script_Extensions: Bassa_Vah} (Short: \p{Scx=Bass}, \p{Bass})\n                             (36: U+16AD0..16AED, U+16AF0..16AF5)\n   \p{Script_Extensions: Batak} (Short: \p{Scx=Batk}, \p{Batk}) (56:\n                             U+1BC0..1BF3, U+1BFC..1BFF)\n   \p{Script_Extensions: Batk} \p{Script_Extensions=Batak} (56)\n   \p{Script_Extensions: Beng} \p{Script_Extensions=Bengali} (101)\n   \p{Script_Extensions: Bengali} (Short: \p{Scx=Beng}, \p{Beng})\n                             (101: U+0951..0952, U+0964..0965,\n                             U+0980..0983, U+0985..098C,\n                             U+098F..0990, U+0993..09A8 ...)\n   \p{Script_Extensions: Bhaiksuki} (Short: \p{Scx=Bhks}, \p{Bhks})\n                             (97: U+11C00..11C08, U+11C0A..11C36,\n                             U+11C38..11C45, U+11C50..11C6C)\n   \p{Script_Extensions: Bhks} \p{Script_Extensions=Bhaiksuki} (97)\n   \p{Script_Extensions: Bopo} \p{Script_Extensions=Bopomofo} (111)\n   \p{Script_Extensions: Bopomofo} (Short: \p{Scx=Bopo}, \p{Bopo})\n                             (111: U+02EA..02EB, U+3001..3003,\n                             U+3008..3011, U+3013..301F,\n                             U+302A..302D, U+3030 ...)\n   \p{Script_Extensions: Brah} \p{Script_Extensions=Brahmi} (109)\n   \p{Script_Extensions: Brahmi} (Short: \p{Scx=Brah}, \p{Brah})\n                             (109: U+11000..1104D, U+11052..1106F,\n                             U+1107F)\n   \p{Script_Extensions: Brai} \p{Script_Extensions=Braille} (256)\n   \p{Script_Extensions: Braille} (Short: \p{Scx=Brai}, \p{Brai})\n                             (256: U+2800..28FF)\n   \p{Script_Extensions: Bugi} \p{Script_Extensions=Buginese} (31)\n   \p{Script_Extensions: Buginese} (Short: \p{Scx=Bugi}, \p{Bugi})\n                             (31: U+1A00..1A1B, U+1A1E..1A1F, U+A9CF)\n   \p{Script_Extensions: Buhd} \p{Script_Extensions=Buhid} (22)\n   \p{Script_Extensions: Buhid} (Short: \p{Scx=Buhd}, \p{Buhd}) (22:\n                             U+1735..1736, U+1740..1753)\n   \p{Script_Extensions: Cakm} \p{Script_Extensions=Chakma} (87)\n   \p{Script_Extensions: Canadian_Aboriginal} (Short: \p{Scx=Cans},\n                             \p{Cans}) (710: U+1400..167F,\n                             U+18B0..18F5)\n   \p{Script_Extensions: Cans} \p{Script_Extensions=\n                             Canadian_Aboriginal} (710)\n   \p{Script_Extensions: Cari} \p{Script_Extensions=Carian} (49)\n   \p{Script_Extensions: Carian} (Short: \p{Scx=Cari}, \p{Cari}) (49:\n                             U+102A0..102D0)\n   \p{Script_Extensions: Caucasian_Albanian} (Short: \p{Scx=Aghb},\n                             \p{Aghb}) (53: U+10530..10563, U+1056F)\n   \p{Script_Extensions: Chakma} (Short: \p{Scx=Cakm}, \p{Cakm}) (87:\n                             U+09E6..09EF, U+1040..1049,\n                             U+11100..11134, U+11136..11143)\n   \p{Script_Extensions: Cham} (Short: \p{Scx=Cham}, \p{Cham}) (83:\n                             U+AA00..AA36, U+AA40..AA4D,\n                             U+AA50..AA59, U+AA5C..AA5F)\n   \p{Script_Extensions: Cher} \p{Script_Extensions=Cherokee} (172)\n   \p{Script_Extensions: Cherokee} (Short: \p{Scx=Cher}, \p{Cher})\n                             (172: U+13A0..13F5, U+13F8..13FD,\n                             U+AB70..ABBF)\n   \p{Script_Extensions: Common} (Short: \p{Scx=Zyyy}, \p{Zyyy})\n                             (6947: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`\{\|\}~\x7f-\xa9\xab-\n                             \xb9\xbb-\xbf\xd7\xf7], U+02B9..02DF,\n                             U+02E5..02E9, U+02EC..02FF, U+0374,\n                             U+037E ...)\n   \p{Script_Extensions: Copt} \p{Script_Extensions=Coptic} (165)\n   \p{Script_Extensions: Coptic} (Short: \p{Scx=Copt}, \p{Copt})\n                             (165: U+03E2..03EF, U+2C80..2CF3,\n                             U+2CF9..2CFF, U+102E0..102FB)\n   \p{Script_Extensions: Cprt} \p{Script_Extensions=Cypriot} (112)\n   \p{Script_Extensions: Cuneiform} (Short: \p{Scx=Xsux}, \p{Xsux})\n                             (1234: U+12000..12399, U+12400..1246E,\n                             U+12470..12474, U+12480..12543)\n   \p{Script_Extensions: Cypriot} (Short: \p{Scx=Cprt}, \p{Cprt})\n                             (112: U+10100..10102, U+10107..10133,\n                             U+10137..1013F, U+10800..10805, U+10808,\n                             U+1080A..10835 ...)\n   \p{Script_Extensions: Cyrillic} (Short: \p{Scx=Cyrl}, \p{Cyrl})\n                             (446: U+0400..052F, U+1C80..1C88,\n                             U+1D2B, U+1D78, U+2DE0..2DFF, U+2E43 ...)\n   \p{Script_Extensions: Cyrl} \p{Script_Extensions=Cyrillic} (446)\n   \p{Script_Extensions: Deseret} (Short: \p{Scx=Dsrt}, \p{Dsrt})\n                             (80: U+10400..1044F)\n   \p{Script_Extensions: Deva} \p{Script_Extensions=Devanagari} (210)\n   \p{Script_Extensions: Devanagari} (Short: \p{Scx=Deva}, \p{Deva})\n                             (210: U+0900..097F, U+1CD0..1CF6,\n                             U+1CF8..1CF9, U+20F0, U+A830..A839,\n                             U+A8E0..A8FD)\n   \p{Script_Extensions: Dsrt} \p{Script_Extensions=Deseret} (80)\n   \p{Script_Extensions: Dupl} \p{Script_Extensions=Duployan} (147)\n   \p{Script_Extensions: Duployan} (Short: \p{Scx=Dupl}, \p{Dupl})\n                             (147: U+1BC00..1BC6A, U+1BC70..1BC7C,\n                             U+1BC80..1BC88, U+1BC90..1BC99,\n                             U+1BC9C..1BCA3)\n   \p{Script_Extensions: Egyp} \p{Script_Extensions=\n                             Egyptian_Hieroglyphs} (1071)\n   \p{Script_Extensions: Egyptian_Hieroglyphs} (Short: \p{Scx=Egyp},\n                             \p{Egyp}) (1071: U+13000..1342E)\n   \p{Script_Extensions: Elba} \p{Script_Extensions=Elbasan} (40)\n   \p{Script_Extensions: Elbasan} (Short: \p{Scx=Elba}, \p{Elba})\n                             (40: U+10500..10527)\n   \p{Script_Extensions: Ethi} \p{Script_Extensions=Ethiopic} (495)\n   \p{Script_Extensions: Ethiopic} (Short: \p{Scx=Ethi}, \p{Ethi})\n                             (495: U+1200..1248, U+124A..124D,\n                             U+1250..1256, U+1258, U+125A..125D,\n                             U+1260..1288 ...)\n   \p{Script_Extensions: Geor} \p{Script_Extensions=Georgian} (129)\n   \p{Script_Extensions: Georgian} (Short: \p{Scx=Geor}, \p{Geor})\n                             (129: U+0589, U+10A0..10C5, U+10C7,\n                             U+10CD, U+10D0..10FF, U+2D00..2D25 ...)\n   \p{Script_Extensions: Glag} \p{Script_Extensions=Glagolitic} (136)\n   \p{Script_Extensions: Glagolitic} (Short: \p{Scx=Glag}, \p{Glag})\n                             (136: U+0484, U+0487, U+2C00..2C2E,\n                             U+2C30..2C5E, U+2E43, U+A66F ...)\n   \p{Script_Extensions: Gonm} \p{Script_Extensions=Masaram_Gondi}\n                             (75)\n   \p{Script_Extensions: Goth} \p{Script_Extensions=Gothic} (27)\n   \p{Script_Extensions: Gothic} (Short: \p{Scx=Goth}, \p{Goth}) (27:\n                             U+10330..1034A)\n   \p{Script_Extensions: Gran} \p{Script_Extensions=Grantha} (113)\n   \p{Script_Extensions: Grantha} (Short: \p{Scx=Gran}, \p{Gran})\n                             (113: U+0951..0952, U+0964..0965,\n                             U+0BAA, U+0BB5, U+0BE6..0BF2, U+1CD0 ...)\n   \p{Script_Extensions: Greek} (Short: \p{Scx=Grek}, \p{Grek}) (522:\n                             U+0342, U+0345, U+0370..0373,\n                             U+0375..0377, U+037A..037D, U+037F ...)\n   \p{Script_Extensions: Grek} \p{Script_Extensions=Greek} (522)\n   \p{Script_Extensions: Gujarati} (Short: \p{Scx=Gujr}, \p{Gujr})\n                             (105: U+0951..0952, U+0964..0965,\n                             U+0A81..0A83, U+0A85..0A8D,\n                             U+0A8F..0A91, U+0A93..0AA8 ...)\n   \p{Script_Extensions: Gujr} \p{Script_Extensions=Gujarati} (105)\n   \p{Script_Extensions: Gurmukhi} (Short: \p{Scx=Guru}, \p{Guru})\n                             (93: U+0951..0952, U+0964..0965,\n                             U+0A01..0A03, U+0A05..0A0A,\n                             U+0A0F..0A10, U+0A13..0A28 ...)\n   \p{Script_Extensions: Guru} \p{Script_Extensions=Gurmukhi} (93)\n   \p{Script_Extensions: Han} (Short: \p{Scx=Han}, \p{Han}) (89_507:\n                             U+2E80..2E99, U+2E9B..2EF3,\n                             U+2F00..2FD5, U+3001..3003,\n                             U+3005..3011, U+3013..301F ...)\n   \p{Script_Extensions: Hang} \p{Script_Extensions=Hangul} (11_775)\n   \p{Script_Extensions: Hangul} (Short: \p{Scx=Hang}, \p{Hang})\n                             (11_775: U+1100..11FF, U+3001..3003,\n                             U+3008..3011, U+3013..301F,\n                             U+302E..3030, U+3037 ...)\n   \p{Script_Extensions: Hani} \p{Script_Extensions=Han} (89_507)\n   \p{Script_Extensions: Hano} \p{Script_Extensions=Hanunoo} (23)\n   \p{Script_Extensions: Hanunoo} (Short: \p{Scx=Hano}, \p{Hano})\n                             (23: U+1720..1736)\n   \p{Script_Extensions: Hatr} \p{Script_Extensions=Hatran} (26)\n   \p{Script_Extensions: Hatran} (Short: \p{Scx=Hatr}, \p{Hatr}) (26:\n                             U+108E0..108F2, U+108F4..108F5,\n                             U+108FB..108FF)\n   \p{Script_Extensions: Hebr} \p{Script_Extensions=Hebrew} (133)\n   \p{Script_Extensions: Hebrew} (Short: \p{Scx=Hebr}, \p{Hebr})\n                             (133: U+0591..05C7, U+05D0..05EA,\n                             U+05F0..05F4, U+FB1D..FB36,\n                             U+FB38..FB3C, U+FB3E ...)\n   \p{Script_Extensions: Hira} \p{Script_Extensions=Hiragana} (428)\n   \p{Script_Extensions: Hiragana} (Short: \p{Scx=Hira}, \p{Hira})\n                             (428: U+3001..3003, U+3008..3011,\n                             U+3013..301F, U+3030..3035, U+3037,\n                             U+303C..303D ...)\n   \p{Script_Extensions: Hluw} \p{Script_Extensions=\n                             Anatolian_Hieroglyphs} (583)\n   \p{Script_Extensions: Hmng} \p{Script_Extensions=Pahawh_Hmong}\n                             (127)\n   \p{Script_Extensions: Hung} \p{Script_Extensions=Old_Hungarian}\n                             (108)\n   \p{Script_Extensions: Imperial_Aramaic} (Short: \p{Scx=Armi},\n                             \p{Armi}) (31: U+10840..10855,\n                             U+10857..1085F)\n   \p{Script_Extensions: Inherited} (Short: \p{Scx=Zinh}, \p{Zinh})\n                             (500: U+0300..0341, U+0343..0344,\n                             U+0346..0362, U+1AB0..1ABE,\n                             U+1DC2..1DF9, U+1DFB..1DFF ...)\n   \p{Script_Extensions: Inscriptional_Pahlavi} (Short: \p{Scx=Phli},\n                             \p{Phli}) (27: U+10B60..10B72,\n                             U+10B78..10B7F)\n   \p{Script_Extensions: Inscriptional_Parthian} (Short: \p{Scx=\n                             Prti}, \p{Prti}) (30: U+10B40..10B55,\n                             U+10B58..10B5F)\n   \p{Script_Extensions: Ital} \p{Script_Extensions=Old_Italic} (39)\n   \p{Script_Extensions: Java} \p{Script_Extensions=Javanese} (91)\n   \p{Script_Extensions: Javanese} (Short: \p{Scx=Java}, \p{Java})\n                             (91: U+A980..A9CD, U+A9CF..A9D9,\n                             U+A9DE..A9DF)\n   \p{Script_Extensions: Kaithi} (Short: \p{Scx=Kthi}, \p{Kthi}) (86:\n                             U+0966..096F, U+A830..A839,\n                             U+11080..110C1)\n   \p{Script_Extensions: Kali} \p{Script_Extensions=Kayah_Li} (48)\n   \p{Script_Extensions: Kana} \p{Script_Extensions=Katakana} (352)\n   \p{Script_Extensions: Kannada} (Short: \p{Scx=Knda}, \p{Knda})\n                             (100: U+0951..0952, U+0964..0965,\n                             U+0C80..0C83, U+0C85..0C8C,\n                             U+0C8E..0C90, U+0C92..0CA8 ...)\n   \p{Script_Extensions: Katakana} (Short: \p{Scx=Kana}, \p{Kana})\n                             (352: U+3001..3003, U+3008..3011,\n                             U+3013..301F, U+3030..3035, U+3037,\n                             U+303C..303D ...)\n   \p{Script_Extensions: Kayah_Li} (Short: \p{Scx=Kali}, \p{Kali})\n                             (48: U+A900..A92F)\n   \p{Script_Extensions: Khar} \p{Script_Extensions=Kharoshthi} (65)\n   \p{Script_Extensions: Kharoshthi} (Short: \p{Scx=Khar}, \p{Khar})\n                             (65: U+10A00..10A03, U+10A05..10A06,\n                             U+10A0C..10A13, U+10A15..10A17,\n                             U+10A19..10A33, U+10A38..10A3A ...)\n   \p{Script_Extensions: Khmer} (Short: \p{Scx=Khmr}, \p{Khmr}) (146:\n                             U+1780..17DD, U+17E0..17E9,\n                             U+17F0..17F9, U+19E0..19FF)\n   \p{Script_Extensions: Khmr} \p{Script_Extensions=Khmer} (146)\n   \p{Script_Extensions: Khoj} \p{Script_Extensions=Khojki} (72)\n   \p{Script_Extensions: Khojki} (Short: \p{Scx=Khoj}, \p{Khoj}) (72:\n                             U+0AE6..0AEF, U+11200..11211,\n                             U+11213..1123E)\n   \p{Script_Extensions: Khudawadi} (Short: \p{Scx=Sind}, \p{Sind})\n                             (81: U+0964..0965, U+A830..A839,\n                             U+112B0..112EA, U+112F0..112F9)\n   \p{Script_Extensions: Knda} \p{Script_Extensions=Kannada} (100)\n   \p{Script_Extensions: Kthi} \p{Script_Extensions=Kaithi} (86)\n   \p{Script_Extensions: Lana} \p{Script_Extensions=Tai_Tham} (127)\n   \p{Script_Extensions: Lao} (Short: \p{Scx=Lao}, \p{Lao}) (67:\n                             U+0E81..0E82, U+0E84, U+0E87..0E88,\n                             U+0E8A, U+0E8D, U+0E94..0E97 ...)\n   \p{Script_Extensions: Laoo} \p{Script_Extensions=Lao} (67)\n   \p{Script_Extensions: Latin} (Short: \p{Scx=Latn}, \p{Latn})\n                             (1370: [A-Za-z\xaa\xba\xc0-\xd6\xd8-\n                             \xf6\xf8-\xff], U+0100..02B8,\n                             U+02E0..02E4, U+0363..036F,\n                             U+0485..0486, U+0951..0952 ...)\n   \p{Script_Extensions: Latn} \p{Script_Extensions=Latin} (1370)\n   \p{Script_Extensions: Lepc} \p{Script_Extensions=Lepcha} (74)\n   \p{Script_Extensions: Lepcha} (Short: \p{Scx=Lepc}, \p{Lepc}) (74:\n                             U+1C00..1C37, U+1C3B..1C49, U+1C4D..1C4F)\n   \p{Script_Extensions: Limb} \p{Script_Extensions=Limbu} (69)\n   \p{Script_Extensions: Limbu} (Short: \p{Scx=Limb}, \p{Limb}) (69:\n                             U+0965, U+1900..191E, U+1920..192B,\n                             U+1930..193B, U+1940, U+1944..194F)\n   \p{Script_Extensions: Lina} \p{Script_Extensions=Linear_A} (386)\n   \p{Script_Extensions: Linb} \p{Script_Extensions=Linear_B} (268)\n   \p{Script_Extensions: Linear_A} (Short: \p{Scx=Lina}, \p{Lina})\n                             (386: U+10107..10133, U+10600..10736,\n                             U+10740..10755, U+10760..10767)\n   \p{Script_Extensions: Linear_B} (Short: \p{Scx=Linb}, \p{Linb})\n                             (268: U+10000..1000B, U+1000D..10026,\n                             U+10028..1003A, U+1003C..1003D,\n                             U+1003F..1004D, U+10050..1005D ...)\n   \p{Script_Extensions: Lisu} (Short: \p{Scx=Lisu}, \p{Lisu}) (48:\n                             U+A4D0..A4FF)\n   \p{Script_Extensions: Lyci} \p{Script_Extensions=Lycian} (29)\n   \p{Script_Extensions: Lycian} (Short: \p{Scx=Lyci}, \p{Lyci}) (29:\n                             U+10280..1029C)\n   \p{Script_Extensions: Lydi} \p{Script_Extensions=Lydian} (27)\n   \p{Script_Extensions: Lydian} (Short: \p{Scx=Lydi}, \p{Lydi}) (27:\n                             U+10920..10939, U+1093F)\n   \p{Script_Extensions: Mahajani} (Short: \p{Scx=Mahj}, \p{Mahj})\n                             (61: U+0964..096F, U+A830..A839,\n                             U+11150..11176)\n   \p{Script_Extensions: Mahj} \p{Script_Extensions=Mahajani} (61)\n   \p{Script_Extensions: Malayalam} (Short: \p{Scx=Mlym}, \p{Mlym})\n                             (122: U+0951..0952, U+0964..0965,\n                             U+0D00..0D03, U+0D05..0D0C,\n                             U+0D0E..0D10, U+0D12..0D44 ...)\n   \p{Script_Extensions: Mand} \p{Script_Extensions=Mandaic} (30)\n   \p{Script_Extensions: Mandaic} (Short: \p{Scx=Mand}, \p{Mand})\n                             (30: U+0640, U+0840..085B, U+085E)\n   \p{Script_Extensions: Mani} \p{Script_Extensions=Manichaean} (52)\n   \p{Script_Extensions: Manichaean} (Short: \p{Scx=Mani}, \p{Mani})\n                             (52: U+0640, U+10AC0..10AE6,\n                             U+10AEB..10AF6)\n   \p{Script_Extensions: Marc} \p{Script_Extensions=Marchen} (68)\n   \p{Script_Extensions: Marchen} (Short: \p{Scx=Marc}, \p{Marc})\n                             (68: U+11C70..11C8F, U+11C92..11CA7,\n                             U+11CA9..11CB6)\n   \p{Script_Extensions: Masaram_Gondi} (Short: \p{Scx=Gonm},\n                             \p{Gonm}) (75: U+11D00..11D06,\n                             U+11D08..11D09, U+11D0B..11D36, U+11D3A,\n                             U+11D3C..11D3D, U+11D3F..11D47 ...)\n   \p{Script_Extensions: Meetei_Mayek} (Short: \p{Scx=Mtei},\n                             \p{Mtei}) (79: U+AAE0..AAF6,\n                             U+ABC0..ABED, U+ABF0..ABF9)\n   \p{Script_Extensions: Mend} \p{Script_Extensions=Mende_Kikakui}\n                             (213)\n   \p{Script_Extensions: Mende_Kikakui} (Short: \p{Scx=Mend},\n                             \p{Mend}) (213: U+1E800..1E8C4,\n                             U+1E8C7..1E8D6)\n   \p{Script_Extensions: Merc} \p{Script_Extensions=Meroitic_Cursive}\n                             (90)\n   \p{Script_Extensions: Mero} \p{Script_Extensions=\n                             Meroitic_Hieroglyphs} (32)\n   \p{Script_Extensions: Meroitic_Cursive} (Short: \p{Scx=Merc},\n                             \p{Merc}) (90: U+109A0..109B7,\n                             U+109BC..109CF, U+109D2..109FF)\n   \p{Script_Extensions: Meroitic_Hieroglyphs} (Short: \p{Scx=Mero},\n                             \p{Mero}) (32: U+10980..1099F)\n   \p{Script_Extensions: Miao} (Short: \p{Scx=Miao}, \p{Miao}) (133:\n                             U+16F00..16F44, U+16F50..16F7E,\n                             U+16F8F..16F9F)\n   \p{Script_Extensions: Mlym} \p{Script_Extensions=Malayalam} (122)\n   \p{Script_Extensions: Modi} (Short: \p{Scx=Modi}, \p{Modi}) (89:\n                             U+A830..A839, U+11600..11644,\n                             U+11650..11659)\n   \p{Script_Extensions: Mong} \p{Script_Extensions=Mongolian} (169)\n   \p{Script_Extensions: Mongolian} (Short: \p{Scx=Mong}, \p{Mong})\n                             (169: U+1800..180E, U+1810..1819,\n                             U+1820..1877, U+1880..18AA,\n                             U+11660..1166C)\n   \p{Script_Extensions: Mro} (Short: \p{Scx=Mro}, \p{Mro}) (43:\n                             U+16A40..16A5E, U+16A60..16A69,\n                             U+16A6E..16A6F)\n   \p{Script_Extensions: Mroo} \p{Script_Extensions=Mro} (43)\n   \p{Script_Extensions: Mtei} \p{Script_Extensions=Meetei_Mayek} (79)\n   \p{Script_Extensions: Mult} \p{Script_Extensions=Multani} (48)\n   \p{Script_Extensions: Multani} (Short: \p{Scx=Mult}, \p{Mult})\n                             (48: U+0A66..0A6F, U+11280..11286,\n                             U+11288, U+1128A..1128D, U+1128F..1129D,\n                             U+1129F..112A9)\n   \p{Script_Extensions: Myanmar} (Short: \p{Scx=Mymr}, \p{Mymr})\n                             (224: U+1000..109F, U+A92E,\n                             U+A9E0..A9FE, U+AA60..AA7F)\n   \p{Script_Extensions: Mymr} \p{Script_Extensions=Myanmar} (224)\n   \p{Script_Extensions: Nabataean} (Short: \p{Scx=Nbat}, \p{Nbat})\n                             (40: U+10880..1089E, U+108A7..108AF)\n   \p{Script_Extensions: Narb} \p{Script_Extensions=\n                             Old_North_Arabian} (32)\n   \p{Script_Extensions: Nbat} \p{Script_Extensions=Nabataean} (40)\n   \p{Script_Extensions: New_Tai_Lue} (Short: \p{Scx=Talu}, \p{Talu})\n                             (83: U+1980..19AB, U+19B0..19C9,\n                             U+19D0..19DA, U+19DE..19DF)\n   \p{Script_Extensions: Newa} (Short: \p{Scx=Newa}, \p{Newa}) (92:\n                             U+11400..11459, U+1145B, U+1145D)\n   \p{Script_Extensions: Nko} (Short: \p{Scx=Nko}, \p{Nko}) (59:\n                             U+07C0..07FA)\n   \p{Script_Extensions: Nkoo} \p{Script_Extensions=Nko} (59)\n   \p{Script_Extensions: Nshu} \p{Script_Extensions=Nushu} (397)\n   \p{Script_Extensions: Nushu} (Short: \p{Scx=Nshu}, \p{Nshu}) (397:\n                             U+16FE1, U+1B170..1B2FB)\n   \p{Script_Extensions: Ogam} \p{Script_Extensions=Ogham} (29)\n   \p{Script_Extensions: Ogham} (Short: \p{Scx=Ogam}, \p{Ogam}) (29:\n                             U+1680..169C)\n   \p{Script_Extensions: Ol_Chiki} (Short: \p{Scx=Olck}, \p{Olck})\n                             (48: U+1C50..1C7F)\n   \p{Script_Extensions: Olck} \p{Script_Extensions=Ol_Chiki} (48)\n   \p{Script_Extensions: Old_Hungarian} (Short: \p{Scx=Hung},\n                             \p{Hung}) (108: U+10C80..10CB2,\n                             U+10CC0..10CF2, U+10CFA..10CFF)\n   \p{Script_Extensions: Old_Italic} (Short: \p{Scx=Ital}, \p{Ital})\n                             (39: U+10300..10323, U+1032D..1032F)\n   \p{Script_Extensions: Old_North_Arabian} (Short: \p{Scx=Narb},\n                             \p{Narb}) (32: U+10A80..10A9F)\n   \p{Script_Extensions: Old_Permic} (Short: \p{Scx=Perm}, \p{Perm})\n                             (44: U+0483, U+10350..1037A)\n   \p{Script_Extensions: Old_Persian} (Short: \p{Scx=Xpeo}, \p{Xpeo})\n                             (50: U+103A0..103C3, U+103C8..103D5)\n   \p{Script_Extensions: Old_South_Arabian} (Short: \p{Scx=Sarb},\n                             \p{Sarb}) (32: U+10A60..10A7F)\n   \p{Script_Extensions: Old_Turkic} (Short: \p{Scx=Orkh}, \p{Orkh})\n                             (73: U+10C00..10C48)\n   \p{Script_Extensions: Oriya} (Short: \p{Scx=Orya}, \p{Orya}) (94:\n                             U+0951..0952, U+0964..0965,\n                             U+0B01..0B03, U+0B05..0B0C,\n                             U+0B0F..0B10, U+0B13..0B28 ...)\n   \p{Script_Extensions: Orkh} \p{Script_Extensions=Old_Turkic} (73)\n   \p{Script_Extensions: Orya} \p{Script_Extensions=Oriya} (94)\n   \p{Script_Extensions: Osage} (Short: \p{Scx=Osge}, \p{Osge}) (72:\n                             U+104B0..104D3, U+104D8..104FB)\n   \p{Script_Extensions: Osge} \p{Script_Extensions=Osage} (72)\n   \p{Script_Extensions: Osma} \p{Script_Extensions=Osmanya} (40)\n   \p{Script_Extensions: Osmanya} (Short: \p{Scx=Osma}, \p{Osma})\n                             (40: U+10480..1049D, U+104A0..104A9)\n   \p{Script_Extensions: Pahawh_Hmong} (Short: \p{Scx=Hmng},\n                             \p{Hmng}) (127: U+16B00..16B45,\n                             U+16B50..16B59, U+16B5B..16B61,\n                             U+16B63..16B77, U+16B7D..16B8F)\n   \p{Script_Extensions: Palm} \p{Script_Extensions=Palmyrene} (32)\n   \p{Script_Extensions: Palmyrene} (Short: \p{Scx=Palm}, \p{Palm})\n                             (32: U+10860..1087F)\n   \p{Script_Extensions: Pau_Cin_Hau} (Short: \p{Scx=Pauc}, \p{Pauc})\n                             (57: U+11AC0..11AF8)\n   \p{Script_Extensions: Pauc} \p{Script_Extensions=Pau_Cin_Hau} (57)\n   \p{Script_Extensions: Perm} \p{Script_Extensions=Old_Permic} (44)\n   \p{Script_Extensions: Phag} \p{Script_Extensions=Phags_Pa} (59)\n   \p{Script_Extensions: Phags_Pa} (Short: \p{Scx=Phag}, \p{Phag})\n                             (59: U+1802..1803, U+1805, U+A840..A877)\n   \p{Script_Extensions: Phli} \p{Script_Extensions=\n                             Inscriptional_Pahlavi} (27)\n   \p{Script_Extensions: Phlp} \p{Script_Extensions=Psalter_Pahlavi}\n                             (30)\n   \p{Script_Extensions: Phnx} \p{Script_Extensions=Phoenician} (29)\n   \p{Script_Extensions: Phoenician} (Short: \p{Scx=Phnx}, \p{Phnx})\n                             (29: U+10900..1091B, U+1091F)\n   \p{Script_Extensions: Plrd} \p{Script_Extensions=Miao} (133)\n   \p{Script_Extensions: Prti} \p{Script_Extensions=\n                             Inscriptional_Parthian} (30)\n   \p{Script_Extensions: Psalter_Pahlavi} (Short: \p{Scx=Phlp},\n                             \p{Phlp}) (30: U+0640, U+10B80..10B91,\n                             U+10B99..10B9C, U+10BA9..10BAF)\n   \p{Script_Extensions: Qaac} \p{Script_Extensions=Coptic} (165)\n   \p{Script_Extensions: Qaai} \p{Script_Extensions=Inherited} (500)\n   \p{Script_Extensions: Rejang} (Short: \p{Scx=Rjng}, \p{Rjng}) (37:\n                             U+A930..A953, U+A95F)\n   \p{Script_Extensions: Rjng} \p{Script_Extensions=Rejang} (37)\n   \p{Script_Extensions: Runic} (Short: \p{Scx=Runr}, \p{Runr}) (86:\n                             U+16A0..16EA, U+16EE..16F8)\n   \p{Script_Extensions: Runr} \p{Script_Extensions=Runic} (86)\n   \p{Script_Extensions: Samaritan} (Short: \p{Scx=Samr}, \p{Samr})\n                             (61: U+0800..082D, U+0830..083E)\n   \p{Script_Extensions: Samr} \p{Script_Extensions=Samaritan} (61)\n   \p{Script_Extensions: Sarb} \p{Script_Extensions=\n                             Old_South_Arabian} (32)\n   \p{Script_Extensions: Saur} \p{Script_Extensions=Saurashtra} (82)\n   \p{Script_Extensions: Saurashtra} (Short: \p{Scx=Saur}, \p{Saur})\n                             (82: U+A880..A8C5, U+A8CE..A8D9)\n   \p{Script_Extensions: Sgnw} \p{Script_Extensions=SignWriting} (672)\n   \p{Script_Extensions: Sharada} (Short: \p{Scx=Shrd}, \p{Shrd})\n                             (100: U+0951, U+1CD7, U+1CD9,\n                             U+1CDC..1CDD, U+1CE0, U+11180..111CD ...)\n   \p{Script_Extensions: Shavian} (Short: \p{Scx=Shaw}, \p{Shaw})\n                             (48: U+10450..1047F)\n   \p{Script_Extensions: Shaw} \p{Script_Extensions=Shavian} (48)\n   \p{Script_Extensions: Shrd} \p{Script_Extensions=Sharada} (100)\n   \p{Script_Extensions: Sidd} \p{Script_Extensions=Siddham} (92)\n   \p{Script_Extensions: Siddham} (Short: \p{Scx=Sidd}, \p{Sidd})\n                             (92: U+11580..115B5, U+115B8..115DD)\n   \p{Script_Extensions: SignWriting} (Short: \p{Scx=Sgnw}, \p{Sgnw})\n                             (672: U+1D800..1DA8B, U+1DA9B..1DA9F,\n                             U+1DAA1..1DAAF)\n   \p{Script_Extensions: Sind} \p{Script_Extensions=Khudawadi} (81)\n   \p{Script_Extensions: Sinh} \p{Script_Extensions=Sinhala} (112)\n   \p{Script_Extensions: Sinhala} (Short: \p{Scx=Sinh}, \p{Sinh})\n                             (112: U+0964..0965, U+0D82..0D83,\n                             U+0D85..0D96, U+0D9A..0DB1,\n                             U+0DB3..0DBB, U+0DBD ...)\n   \p{Script_Extensions: Sora} \p{Script_Extensions=Sora_Sompeng} (35)\n   \p{Script_Extensions: Sora_Sompeng} (Short: \p{Scx=Sora},\n                             \p{Sora}) (35: U+110D0..110E8,\n                             U+110F0..110F9)\n   \p{Script_Extensions: Soyo} \p{Script_Extensions=Soyombo} (80)\n   \p{Script_Extensions: Soyombo} (Short: \p{Scx=Soyo}, \p{Soyo})\n                             (80: U+11A50..11A83, U+11A86..11A9C,\n                             U+11A9E..11AA2)\n   \p{Script_Extensions: Sund} \p{Script_Extensions=Sundanese} (72)\n   \p{Script_Extensions: Sundanese} (Short: \p{Scx=Sund}, \p{Sund})\n                             (72: U+1B80..1BBF, U+1CC0..1CC7)\n   \p{Script_Extensions: Sylo} \p{Script_Extensions=Syloti_Nagri} (56)\n   \p{Script_Extensions: Syloti_Nagri} (Short: \p{Scx=Sylo},\n                             \p{Sylo}) (56: U+0964..0965,\n                             U+09E6..09EF, U+A800..A82B)\n   \p{Script_Extensions: Syrc} \p{Script_Extensions=Syriac} (105)\n   \p{Script_Extensions: Syriac} (Short: \p{Scx=Syrc}, \p{Syrc})\n                             (105: U+060C, U+061B..061C, U+061F,\n                             U+0640, U+064B..0655, U+0670 ...)\n   \p{Script_Extensions: Tagalog} (Short: \p{Scx=Tglg}, \p{Tglg})\n                             (22: U+1700..170C, U+170E..1714,\n                             U+1735..1736)\n   \p{Script_Extensions: Tagb} \p{Script_Extensions=Tagbanwa} (20)\n   \p{Script_Extensions: Tagbanwa} (Short: \p{Scx=Tagb}, \p{Tagb})\n                             (20: U+1735..1736, U+1760..176C,\n                             U+176E..1770, U+1772..1773)\n   \p{Script_Extensions: Tai_Le} (Short: \p{Scx=Tale}, \p{Tale}) (45:\n                             U+1040..1049, U+1950..196D, U+1970..1974)\n   \p{Script_Extensions: Tai_Tham} (Short: \p{Scx=Lana}, \p{Lana})\n                             (127: U+1A20..1A5E, U+1A60..1A7C,\n                             U+1A7F..1A89, U+1A90..1A99, U+1AA0..1AAD)\n   \p{Script_Extensions: Tai_Viet} (Short: \p{Scx=Tavt}, \p{Tavt})\n                             (72: U+AA80..AAC2, U+AADB..AADF)\n   \p{Script_Extensions: Takr} \p{Script_Extensions=Takri} (78)\n   \p{Script_Extensions: Takri} (Short: \p{Scx=Takr}, \p{Takr}) (78:\n                             U+0964..0965, U+A830..A839,\n                             U+11680..116B7, U+116C0..116C9)\n   \p{Script_Extensions: Tale} \p{Script_Extensions=Tai_Le} (45)\n   \p{Script_Extensions: Talu} \p{Script_Extensions=New_Tai_Lue} (83)\n   \p{Script_Extensions: Tamil} (Short: \p{Scx=Taml}, \p{Taml}) (81:\n                             U+0951..0952, U+0964..0965,\n                             U+0B82..0B83, U+0B85..0B8A,\n                             U+0B8E..0B90, U+0B92..0B95 ...)\n   \p{Script_Extensions: Taml} \p{Script_Extensions=Tamil} (81)\n   \p{Script_Extensions: Tang} \p{Script_Extensions=Tangut} (6881)\n   \p{Script_Extensions: Tangut} (Short: \p{Scx=Tang}, \p{Tang})\n                             (6881: U+16FE0, U+17000..187EC,\n                             U+18800..18AF2)\n   \p{Script_Extensions: Tavt} \p{Script_Extensions=Tai_Viet} (72)\n   \p{Script_Extensions: Telu} \p{Script_Extensions=Telugu} (101)\n   \p{Script_Extensions: Telugu} (Short: \p{Scx=Telu}, \p{Telu})\n                             (101: U+0951..0952, U+0964..0965,\n                             U+0C00..0C03, U+0C05..0C0C,\n                             U+0C0E..0C10, U+0C12..0C28 ...)\n   \p{Script_Extensions: Tfng} \p{Script_Extensions=Tifinagh} (59)\n   \p{Script_Extensions: Tglg} \p{Script_Extensions=Tagalog} (22)\n   \p{Script_Extensions: Thaa} \p{Script_Extensions=Thaana} (66)\n   \p{Script_Extensions: Thaana} (Short: \p{Scx=Thaa}, \p{Thaa}) (66:\n                             U+060C, U+061B..061C, U+061F,\n                             U+0660..0669, U+0780..07B1, U+FDF2 ...)\n   \p{Script_Extensions: Thai} (Short: \p{Scx=Thai}, \p{Thai}) (86:\n                             U+0E01..0E3A, U+0E40..0E5B)\n   \p{Script_Extensions: Tibetan} (Short: \p{Scx=Tibt}, \p{Tibt})\n                             (207: U+0F00..0F47, U+0F49..0F6C,\n                             U+0F71..0F97, U+0F99..0FBC,\n                             U+0FBE..0FCC, U+0FCE..0FD4 ...)\n   \p{Script_Extensions: Tibt} \p{Script_Extensions=Tibetan} (207)\n   \p{Script_Extensions: Tifinagh} (Short: \p{Scx=Tfng}, \p{Tfng})\n                             (59: U+2D30..2D67, U+2D6F..2D70, U+2D7F)\n   \p{Script_Extensions: Tirh} \p{Script_Extensions=Tirhuta} (94)\n   \p{Script_Extensions: Tirhuta} (Short: \p{Scx=Tirh}, \p{Tirh})\n                             (94: U+0964..0965, U+A830..A839,\n                             U+11480..114C7, U+114D0..114D9)\n   \p{Script_Extensions: Ugar} \p{Script_Extensions=Ugaritic} (31)\n   \p{Script_Extensions: Ugaritic} (Short: \p{Scx=Ugar}, \p{Ugar})\n                             (31: U+10380..1039D, U+1039F)\n   \p{Script_Extensions: Unknown} (Short: \p{Scx=Zzzz}, \p{Zzzz})\n                             (977_357 plus all above-Unicode code\n                             points: U+0378..0379, U+0380..0383,\n                             U+038B, U+038D, U+03A2, U+0530 ...)\n   \p{Script_Extensions: Vai} (Short: \p{Scx=Vai}, \p{Vai}) (300:\n                             U+A500..A62B)\n   \p{Script_Extensions: Vaii} \p{Script_Extensions=Vai} (300)\n   \p{Script_Extensions: Wara} \p{Script_Extensions=Warang_Citi} (84)\n   \p{Script_Extensions: Warang_Citi} (Short: \p{Scx=Wara}, \p{Wara})\n                             (84: U+118A0..118F2, U+118FF)\n   \p{Script_Extensions: Xpeo} \p{Script_Extensions=Old_Persian} (50)\n   \p{Script_Extensions: Xsux} \p{Script_Extensions=Cuneiform} (1234)\n   \p{Script_Extensions: Yi} (Short: \p{Scx=Yi}, \p{Yi}) (1246:\n                             U+3001..3002, U+3008..3011,\n                             U+3014..301B, U+30FB, U+A000..A48C,\n                             U+A490..A4C6 ...)\n   \p{Script_Extensions: Yiii} \p{Script_Extensions=Yi} (1246)\n   \p{Script_Extensions: Zanabazar_Square} (Short: \p{Scx=Zanb},\n                             \p{Zanb}) (72: U+11A00..11A47)\n   \p{Script_Extensions: Zanb} \p{Script_Extensions=Zanabazar_Square}\n                             (72)\n   \p{Script_Extensions: Zinh} \p{Script_Extensions=Inherited} (500)\n   \p{Script_Extensions: Zyyy} \p{Script_Extensions=Common} (6947)\n   \p{Script_Extensions: Zzzz} \p{Script_Extensions=Unknown} (977_357\n                             plus all above-Unicode code points)\n   \p{Scx: *}              \p{Script_Extensions: *}\n   \p{SD}                  \p{Soft_Dotted} (= \p{Soft_Dotted=Y}) (46)\n   \p{SD: *}               \p{Soft_Dotted: *}\n   \p{Sentence_Break: AT}  \p{Sentence_Break=ATerm} (4)\n   \p{Sentence_Break: ATerm} (Short: \p{SB=AT}) (4: [.], U+2024,\n                             U+FE52, U+FF0E)\n   \p{Sentence_Break: CL}  \p{Sentence_Break=Close} (187)\n   \p{Sentence_Break: Close} (Short: \p{SB=CL}) (187:\n                             [\"\'\(\)\[\]\{\}\xab\xbb],\n                             U+0F3A..0F3D, U+169B..169C,\n                             U+2018..201F, U+2039..203A, U+2045..2046\n                             ...)\n   \p{Sentence_Break: CR}  (Short: \p{SB=CR}) (1: [\r])\n   \p{Sentence_Break: EX}  \p{Sentence_Break=Extend} (2277)\n   \p{Sentence_Break: Extend} (Short: \p{SB=EX}) (2277: U+0300..036F,\n                             U+0483..0489, U+0591..05BD, U+05BF,\n                             U+05C1..05C2, U+05C4..05C5 ...)\n   \p{Sentence_Break: FO}  \p{Sentence_Break=Format} (53)\n   \p{Sentence_Break: Format} (Short: \p{SB=FO}) (53: [\xad],\n                             U+0600..0605, U+061C, U+06DD, U+070F,\n                             U+08E2 ...)\n   \p{Sentence_Break: LE}  \p{Sentence_Break=OLetter} (121_354)\n   \p{Sentence_Break: LF}  (Short: \p{SB=LF}) (1: [\n])\n   \p{Sentence_Break: LO}  \p{Sentence_Break=Lower} (2251)\n   \p{Sentence_Break: Lower} (Short: \p{SB=LO}) (2251: [a-\n                             z\xaa\xb5\xba\xdf-\xf6\xf8-\xff],\n                             U+0101, U+0103, U+0105, U+0107, U+0109\n                             ...)\n   \p{Sentence_Break: NU}  \p{Sentence_Break=Numeric} (582)\n   \p{Sentence_Break: Numeric} (Short: \p{SB=NU}) (582: [0-9],\n                             U+0660..0669, U+066B..066C,\n                             U+06F0..06F9, U+07C0..07C9, U+0966..096F\n                             ...)\n   \p{Sentence_Break: OLetter} (Short: \p{SB=LE}) (121_354: U+01BB,\n                             U+01C0..01C3, U+0294, U+02B9..02BF,\n                             U+02C6..02D1, U+02EC ...)\n   \p{Sentence_Break: Other} (Short: \p{SB=XX}) (985_375 plus all\n                             above-Unicode code points:\n                             [^\t\n\cK\f\r\x20!\"\'\(\),\-.0-9:?A-\n                             Z\[\]a-z\{\}\x85\xa0\xaa-\n                             \xab\xad\xb5\xba-\xbb\xc0-\xd6\xd8-\n                             \xf6\xf8-\xff], U+02C2..02C5,\n                             U+02D2..02DF, U+02E5..02EB, U+02ED,\n                             U+02EF..02FF ...)\n   \p{Sentence_Break: SC}  \p{Sentence_Break=SContinue} (26)\n   \p{Sentence_Break: SContinue} (Short: \p{SB=SC}) (26: [,\-:],\n                             U+055D, U+060C..060D, U+07F8, U+1802,\n                             U+1808 ...)\n   \p{Sentence_Break: SE}  \p{Sentence_Break=Sep} (3)\n   \p{Sentence_Break: Sep} (Short: \p{SB=SE}) (3: [\x85],\n                             U+2028..2029)\n   \p{Sentence_Break: Sp}  (Short: \p{SB=Sp}) (20: [\t\cK\f\x20\xa0],\n                             U+1680, U+2000..200A, U+202F, U+205F,\n                             U+3000)\n   \p{Sentence_Break: ST}  \p{Sentence_Break=STerm} (125)\n   \p{Sentence_Break: STerm} (Short: \p{SB=ST}) (125: [!?], U+0589,\n                             U+061F, U+06D4, U+0700..0702, U+07F9 ...)\n   \p{Sentence_Break: UP}  \p{Sentence_Break=Upper} (1853)\n   \p{Sentence_Break: Upper} (Short: \p{SB=UP}) (1853: [A-Z\xc0-\n                             \xd6\xd8-\xde], U+0100, U+0102, U+0104,\n                             U+0106, U+0108 ...)\n   \p{Sentence_Break: XX}  \p{Sentence_Break=Other} (985_375 plus all\n                             above-Unicode code points)\n   \p{Sentence_Terminal}   \p{Sentence_Terminal=Y} (Short: \p{STerm})\n                             (128)\n   \p{Sentence_Terminal: N*} (Short: \p{STerm=N}, \P{STerm})\n                             (1_113_984 plus all above-Unicode code\n                             points: [\x00-\x20\"#\$\%&\'\(\)*+,\-\n                             \/0-9:;<=>\@A-Z\[\\\]\^_`a-z\{\|\}~\x7f-\n                             \xff], U+0100..0588, U+058A..061E,\n                             U+0620..06D3, U+06D5..06FF, U+0703..07F8\n                             ...)\n   \p{Sentence_Terminal: Y*} (Short: \p{STerm=Y}, \p{STerm}) (128:\n                             [!.?], U+0589, U+061F, U+06D4,\n                             U+0700..0702, U+07F9 ...)\n   \p{Separator}           \p{General_Category=Separator} (Short:\n                             \p{Z}) (19)\n   \p{Sgnw}                \p{SignWriting} (= \p{Script_Extensions=\n                             SignWriting}) (672)\n   \p{Sharada}             \p{Script_Extensions=Sharada} (Short:\n                             \p{Shrd}; NOT \p{Block=Sharada}) (100)\n   \p{Shavian}             \p{Script_Extensions=Shavian} (Short:\n                             \p{Shaw}) (48)\n   \p{Shaw}                \p{Shavian} (= \p{Script_Extensions=\n                             Shavian}) (48)\n X \p{Shorthand_Format_Controls} \p{Block=Shorthand_Format_Controls}\n                             (16)\n   \p{Shrd}                \p{Sharada} (= \p{Script_Extensions=\n                             Sharada}) (NOT \p{Block=Sharada}) (100)\n   \p{Sidd}                \p{Siddham} (= \p{Script_Extensions=\n                             Siddham}) (NOT \p{Block=Siddham}) (92)\n   \p{Siddham}             \p{Script_Extensions=Siddham} (Short:\n                             \p{Sidd}; NOT \p{Block=Siddham}) (92)\n   \p{SignWriting}         \p{Script_Extensions=SignWriting} (Short:\n                             \p{Sgnw}) (672)\n   \p{Sind}                \p{Khudawadi} (= \p{Script_Extensions=\n                             Khudawadi}) (NOT \p{Block=Khudawadi})\n                             (81)\n   \p{Sinh}                \p{Sinhala} (= \p{Script_Extensions=\n                             Sinhala}) (NOT \p{Block=Sinhala}) (112)\n   \p{Sinhala}             \p{Script_Extensions=Sinhala} (Short:\n                             \p{Sinh}; NOT \p{Block=Sinhala}) (112)\n X \p{Sinhala_Archaic_Numbers} \p{Block=Sinhala_Archaic_Numbers} (32)\n   \p{Sk}                  \p{Modifier_Symbol} (=\n                             \p{General_Category=Modifier_Symbol})\n                             (121)\n   \p{Sm}                  \p{Math_Symbol} (= \p{General_Category=\n                             Math_Symbol}) (948)\n X \p{Small_Form_Variants} \p{Block=Small_Form_Variants} (Short:\n                             \p{InSmallForms}) (32)\n X \p{Small_Forms}         \p{Small_Form_Variants} (= \p{Block=\n                             Small_Form_Variants}) (32)\n   \p{So}                  \p{Other_Symbol} (= \p{General_Category=\n                             Other_Symbol}) (5855)\n   \p{Soft_Dotted}         \p{Soft_Dotted=Y} (Short: \p{SD}) (46)\n   \p{Soft_Dotted: N*}     (Short: \p{SD=N}, \P{SD}) (1_114_066 plus\n                             all above-Unicode code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-\n                             Z\[\\\]\^_`a-hk-z\{\|\}~\x7f-\xff],\n                             U+0100..012E, U+0130..0248,\n                             U+024A..0267, U+0269..029C, U+029E..02B1\n                             ...)\n   \p{Soft_Dotted: Y*}     (Short: \p{SD=Y}, \p{SD}) (46: [i-j],\n                             U+012F, U+0249, U+0268, U+029D, U+02B2\n                             ...)\n   \p{Sora}                \p{Sora_Sompeng} (= \p{Script_Extensions=\n                             Sora_Sompeng}) (NOT \p{Block=\n                             Sora_Sompeng}) (35)\n   \p{Sora_Sompeng}        \p{Script_Extensions=Sora_Sompeng} (Short:\n                             \p{Sora}; NOT \p{Block=Sora_Sompeng})\n                             (35)\n   \p{Soyo}                \p{Soyombo} (= \p{Script_Extensions=\n                             Soyombo}) (NOT \p{Block=Soyombo}) (80)\n   \p{Soyombo}             \p{Script_Extensions=Soyombo} (Short:\n                             \p{Soyo}; NOT \p{Block=Soyombo}) (80)\n   \p{Space}               \p{White_Space} (= \p{White_Space=Y}) (25)\n   \p{Space: *}            \p{White_Space: *}\n   \p{Space_Separator}     \p{General_Category=Space_Separator}\n                             (Short: \p{Zs}) (17)\n   \p{SpacePerl}           \p{XPosixSpace} (25)\n   \p{Spacing_Mark}        \p{General_Category=Spacing_Mark} (Short:\n                             \p{Mc}) (401)\n X \p{Spacing_Modifier_Letters} \p{Block=Spacing_Modifier_Letters}\n                             (Short: \p{InModifierLetters}) (80)\n X \p{Specials}            \p{Block=Specials} (16)\n   \p{STerm}               \p{Sentence_Terminal} (=\n                             \p{Sentence_Terminal=Y}) (128)\n   \p{STerm: *}            \p{Sentence_Terminal: *}\n   \p{Sund}                \p{Sundanese} (= \p{Script_Extensions=\n                             Sundanese}) (NOT \p{Block=Sundanese})\n                             (72)\n   \p{Sundanese}           \p{Script_Extensions=Sundanese} (Short:\n                             \p{Sund}; NOT \p{Block=Sundanese}) (72)\n X \p{Sundanese_Sup}       \p{Sundanese_Supplement} (= \p{Block=\n                             Sundanese_Supplement}) (16)\n X \p{Sundanese_Supplement} \p{Block=Sundanese_Supplement} (Short:\n                             \p{InSundaneseSup}) (16)\n X \p{Sup_Arrows_A}        \p{Supplemental_Arrows_A} (= \p{Block=\n                             Supplemental_Arrows_A}) (16)\n X \p{Sup_Arrows_B}        \p{Supplemental_Arrows_B} (= \p{Block=\n                             Supplemental_Arrows_B}) (128)\n X \p{Sup_Arrows_C}        \p{Supplemental_Arrows_C} (= \p{Block=\n                             Supplemental_Arrows_C}) (256)\n X \p{Sup_Math_Operators}  \p{Supplemental_Mathematical_Operators} (=\n                             \p{Block=\n                             Supplemental_Mathematical_Operators})\n                             (256)\n X \p{Sup_PUA_A}           \p{Supplementary_Private_Use_Area_A} (=\n                             \p{Block=\n                             Supplementary_Private_Use_Area_A})\n                             (65_536)\n X \p{Sup_PUA_B}           \p{Supplementary_Private_Use_Area_B} (=\n                             \p{Block=\n                             Supplementary_Private_Use_Area_B})\n                             (65_536)\n X \p{Sup_Punctuation}     \p{Supplemental_Punctuation} (= \p{Block=\n                             Supplemental_Punctuation}) (128)\n X \p{Sup_Symbols_And_Pictographs}\n                             \p{Supplemental_Symbols_And_Pictographs}\n                             (= \p{Block=\n                             Supplemental_Symbols_And_Pictographs})\n                             (256)\n X \p{Super_And_Sub}       \p{Superscripts_And_Subscripts} (=\n                             \p{Block=Superscripts_And_Subscripts})\n                             (48)\n X \p{Superscripts_And_Subscripts} \p{Block=\n                             Superscripts_And_Subscripts} (Short:\n                             \p{InSuperAndSub}) (48)\n X \p{Supplemental_Arrows_A} \p{Block=Supplemental_Arrows_A} (Short:\n                             \p{InSupArrowsA}) (16)\n X \p{Supplemental_Arrows_B} \p{Block=Supplemental_Arrows_B} (Short:\n                             \p{InSupArrowsB}) (128)\n X \p{Supplemental_Arrows_C} \p{Block=Supplemental_Arrows_C} (Short:\n                             \p{InSupArrowsC}) (256)\n X \p{Supplemental_Mathematical_Operators} \p{Block=\n                             Supplemental_Mathematical_Operators}\n                             (Short: \p{InSupMathOperators}) (256)\n X \p{Supplemental_Punctuation} \p{Block=Supplemental_Punctuation}\n                             (Short: \p{InSupPunctuation}) (128)\n X \p{Supplemental_Symbols_And_Pictographs} \p{Block=\n                             Supplemental_Symbols_And_Pictographs}\n                             (Short: \p{InSupSymbolsAndPictographs})\n                             (256)\n X \p{Supplementary_Private_Use_Area_A} \p{Block=\n                             Supplementary_Private_Use_Area_A}\n                             (Short: \p{InSupPUAA}) (65_536)\n X \p{Supplementary_Private_Use_Area_B} \p{Block=\n                             Supplementary_Private_Use_Area_B}\n                             (Short: \p{InSupPUAB}) (65_536)\n   \p{Surrogate}           \p{General_Category=Surrogate} (Short:\n                             \p{Cs}) (2048)\n X \p{Sutton_SignWriting}  \p{Block=Sutton_SignWriting} (688)\n   \p{Sylo}                \p{Syloti_Nagri} (= \p{Script_Extensions=\n                             Syloti_Nagri}) (NOT \p{Block=\n                             Syloti_Nagri}) (56)\n   \p{Syloti_Nagri}        \p{Script_Extensions=Syloti_Nagri} (Short:\n                             \p{Sylo}; NOT \p{Block=Syloti_Nagri})\n                             (56)\n   \p{Symbol}              \p{General_Category=Symbol} (Short: \p{S})\n                             (6978)\n   \p{Syrc}                \p{Syriac} (= \p{Script_Extensions=\n                             Syriac}) (NOT \p{Block=Syriac}) (105)\n   \p{Syriac}              \p{Script_Extensions=Syriac} (Short:\n                             \p{Syrc}; NOT \p{Block=Syriac}) (105)\n X \p{Syriac_Sup}          \p{Syriac_Supplement} (= \p{Block=\n                             Syriac_Supplement}) (16)\n X \p{Syriac_Supplement}   \p{Block=Syriac_Supplement} (Short:\n                             \p{InSyriacSup}) (16)\n   \p{Tagalog}             \p{Script_Extensions=Tagalog} (Short:\n                             \p{Tglg}; NOT \p{Block=Tagalog}) (22)\n   \p{Tagb}                \p{Tagbanwa} (= \p{Script_Extensions=\n                             Tagbanwa}) (NOT \p{Block=Tagbanwa}) (20)\n   \p{Tagbanwa}            \p{Script_Extensions=Tagbanwa} (Short:\n                             \p{Tagb}; NOT \p{Block=Tagbanwa}) (20)\n X \p{Tags}                \p{Block=Tags} (128)\n   \p{Tai_Le}              \p{Script_Extensions=Tai_Le} (Short:\n                             \p{Tale}; NOT \p{Block=Tai_Le}) (45)\n   \p{Tai_Tham}            \p{Script_Extensions=Tai_Tham} (Short:\n                             \p{Lana}; NOT \p{Block=Tai_Tham}) (127)\n   \p{Tai_Viet}            \p{Script_Extensions=Tai_Viet} (Short:\n                             \p{Tavt}; NOT \p{Block=Tai_Viet}) (72)\n X \p{Tai_Xuan_Jing}       \p{Tai_Xuan_Jing_Symbols} (= \p{Block=\n                             Tai_Xuan_Jing_Symbols}) (96)\n X \p{Tai_Xuan_Jing_Symbols} \p{Block=Tai_Xuan_Jing_Symbols} (Short:\n                             \p{InTaiXuanJing}) (96)\n   \p{Takr}                \p{Takri} (= \p{Script_Extensions=Takri})\n                             (NOT \p{Block=Takri}) (78)\n   \p{Takri}               \p{Script_Extensions=Takri} (Short:\n                             \p{Takr}; NOT \p{Block=Takri}) (78)\n   \p{Tale}                \p{Tai_Le} (= \p{Script_Extensions=\n                             Tai_Le}) (NOT \p{Block=Tai_Le}) (45)\n   \p{Talu}                \p{New_Tai_Lue} (= \p{Script_Extensions=\n                             New_Tai_Lue}) (NOT \p{Block=\n                             New_Tai_Lue}) (83)\n   \p{Tamil}               \p{Script_Extensions=Tamil} (Short:\n                             \p{Taml}; NOT \p{Block=Tamil}) (81)\n   \p{Taml}                \p{Tamil} (= \p{Script_Extensions=Tamil})\n                             (NOT \p{Block=Tamil}) (81)\n   \p{Tang}                \p{Tangut} (= \p{Script_Extensions=\n                             Tangut}) (NOT \p{Block=Tangut}) (6881)\n   \p{Tangut}              \p{Script_Extensions=Tangut} (Short:\n                             \p{Tang}; NOT \p{Block=Tangut}) (6881)\n X \p{Tangut_Components}   \p{Block=Tangut_Components} (768)\n   \p{Tavt}                \p{Tai_Viet} (= \p{Script_Extensions=\n                             Tai_Viet}) (NOT \p{Block=Tai_Viet}) (72)\n   \p{Telu}                \p{Telugu} (= \p{Script_Extensions=\n                             Telugu}) (NOT \p{Block=Telugu}) (101)\n   \p{Telugu}              \p{Script_Extensions=Telugu} (Short:\n                             \p{Telu}; NOT \p{Block=Telugu}) (101)\n   \p{Term}                \p{Terminal_Punctuation} (=\n                             \p{Terminal_Punctuation=Y}) (252)\n   \p{Term: *}             \p{Terminal_Punctuation: *}\n   \p{Terminal_Punctuation} \p{Terminal_Punctuation=Y} (Short:\n                             \p{Term}) (252)\n   \p{Terminal_Punctuation: N*} (Short: \p{Term=N}, \P{Term})\n                             (1_113_860 plus all above-Unicode code\n                             points: [\x00-\x20\"#\$\%&\'\(\)*+\-\/0-\n                             9<=>\@A-Z\[\\\]\^_`a-z\{\|\}~\x7f-\xff],\n                             U+0100..037D, U+037F..0386,\n                             U+0388..0588, U+058A..05C2, U+05C4..060B\n                             ...)\n   \p{Terminal_Punctuation: Y*} (Short: \p{Term=Y}, \p{Term}) (252:\n                             [!,.:;?], U+037E, U+0387, U+0589,\n                             U+05C3, U+060C ...)\n   \p{Tfng}                \p{Tifinagh} (= \p{Script_Extensions=\n                             Tifinagh}) (NOT \p{Block=Tifinagh}) (59)\n   \p{Tglg}                \p{Tagalog} (= \p{Script_Extensions=\n                             Tagalog}) (NOT \p{Block=Tagalog}) (22)\n   \p{Thaa}                \p{Thaana} (= \p{Script_Extensions=\n                             Thaana}) (NOT \p{Block=Thaana}) (66)\n   \p{Thaana}              \p{Script_Extensions=Thaana} (Short:\n                             \p{Thaa}; NOT \p{Block=Thaana}) (66)\n   \p{Thai}                \p{Script_Extensions=Thai} (NOT \p{Block=\n                             Thai}) (86)\n   \p{Tibetan}             \p{Script_Extensions=Tibetan} (Short:\n                             \p{Tibt}; NOT \p{Block=Tibetan}) (207)\n   \p{Tibt}                \p{Tibetan} (= \p{Script_Extensions=\n                             Tibetan}) (NOT \p{Block=Tibetan}) (207)\n   \p{Tifinagh}            \p{Script_Extensions=Tifinagh} (Short:\n                             \p{Tfng}; NOT \p{Block=Tifinagh}) (59)\n   \p{Tirh}                \p{Tirhuta} (= \p{Script_Extensions=\n                             Tirhuta}) (NOT \p{Block=Tirhuta}) (94)\n   \p{Tirhuta}             \p{Script_Extensions=Tirhuta} (Short:\n                             \p{Tirh}; NOT \p{Block=Tirhuta}) (94)\n   \p{Title}               \p{Titlecase} (/i= Cased=Yes) (31)\n   \p{Titlecase}           (= \p{Gc=Lt}) (Short: \p{Title}; /i=\n                             Cased=Yes) (31: U+01C5, U+01C8, U+01CB,\n                             U+01F2, U+1F88..1F8F, U+1F98..1F9F ...)\n   \p{Titlecase_Letter}    \p{General_Category=Titlecase_Letter}\n                             (Short: \p{Lt}; /i= General_Category=\n                             Cased_Letter) (31)\n X \p{Transport_And_Map}   \p{Transport_And_Map_Symbols} (= \p{Block=\n                             Transport_And_Map_Symbols}) (128)\n X \p{Transport_And_Map_Symbols} \p{Block=Transport_And_Map_Symbols}\n                             (Short: \p{InTransportAndMap}) (128)\n X \p{UCAS}                \p{Unified_Canadian_Aboriginal_Syllabics}\n                             (= \p{Block=\n                             Unified_Canadian_Aboriginal_Syllabics})\n                             (640)\n X \p{UCAS_Ext}            \p{Unified_Canadian_Aboriginal_Syllabics_-\n                             Extended} (= \p{Block=\n                             Unified_Canadian_Aboriginal_Syllabics_-\n                             Extended}) (80)\n   \p{Ugar}                \p{Ugaritic} (= \p{Script_Extensions=\n                             Ugaritic}) (NOT \p{Block=Ugaritic}) (31)\n   \p{Ugaritic}            \p{Script_Extensions=Ugaritic} (Short:\n                             \p{Ugar}; NOT \p{Block=Ugaritic}) (31)\n   \p{UIdeo}               \p{Unified_Ideograph} (=\n                             \p{Unified_Ideograph=Y}) (87_882)\n   \p{UIdeo: *}            \p{Unified_Ideograph: *}\n   \p{Unassigned}          \p{General_Category=Unassigned} (Short:\n                             \p{Cn}) (837_841 plus all above-Unicode\n                             code points)\n   \p{Unicode}             \p{Any} (1_114_112)\n X \p{Unified_Canadian_Aboriginal_Syllabics} \p{Block=\n                             Unified_Canadian_Aboriginal_Syllabics}\n                             (Short: \p{InUCAS}) (640)\n X \p{Unified_Canadian_Aboriginal_Syllabics_Extended} \p{Block=\n                             Unified_Canadian_Aboriginal_Syllabics_-\n                             Extended} (Short: \p{InUCASExt}) (80)\n   \p{Unified_Ideograph}   \p{Unified_Ideograph=Y} (Short: \p{UIdeo})\n                             (87_882)\n   \p{Unified_Ideograph: N*} (Short: \p{UIdeo=N}, \P{UIdeo})\n                             (1_026_230 plus all above-Unicode code\n                             points: U+0000..33FF, U+4DB6..4DFF,\n                             U+9FEB..FA0D, U+FA10, U+FA12,\n                             U+FA15..FA1E ...)\n   \p{Unified_Ideograph: Y*} (Short: \p{UIdeo=Y}, \p{UIdeo}) (87_882:\n                             U+3400..4DB5, U+4E00..9FEA,\n                             U+FA0E..FA0F, U+FA11, U+FA13..FA14,\n                             U+FA1F ...)\n   \p{Unknown}             \p{Script_Extensions=Unknown} (Short:\n                             \p{Zzzz}) (977_357 plus all above-\n                             Unicode code points)\n   \p{Upper}               \p{XPosixUpper} (= \p{Uppercase=Y}) (/i=\n                             Cased=Yes) (1822)\n   \p{Upper: *}            \p{Uppercase: *}\n   \p{Uppercase}           \p{XPosixUpper} (= \p{Uppercase=Y}) (/i=\n                             Cased=Yes) (1822)\n   \p{Uppercase: N*}       (Short: \p{Upper=N}, \P{Upper}; /i= Cased=\n                             No) (1_112_290 plus all above-Unicode\n                             code points: [\x00-\n                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`a-z\{\|\}~\x7f-\n                             \xbf\xd7\xdf-\xff], U+0101, U+0103,\n                             U+0105, U+0107, U+0109 ...)\n   \p{Uppercase: Y*}       (Short: \p{Upper=Y}, \p{Upper}; /i= Cased=\n                             Yes) (1822: [A-Z\xc0-\xd6\xd8-\xde],\n                             U+0100, U+0102, U+0104, U+0106, U+0108\n                             ...)\n   \p{Uppercase_Letter}    \p{General_Category=Uppercase_Letter}\n                             (Short: \p{Lu}; /i= General_Category=\n                             Cased_Letter) (1702)\n   \p{Vai}                 \p{Script_Extensions=Vai} (NOT \p{Block=\n                             Vai}) (300)\n   \p{Vaii}                \p{Vai} (= \p{Script_Extensions=Vai}) (NOT\n                             \p{Block=Vai}) (300)\n   \p{Variation_Selector}  \p{Variation_Selector=Y} (Short: \p{VS};\n                             NOT \p{Variation_Selectors}) (259)\n   \p{Variation_Selector: N*} (Short: \p{VS=N}, \P{VS}) (1_113_853\n                             plus all above-Unicode code points:\n                             U+0000..180A, U+180E..FDFF,\n                             U+FE10..E00FF, U+E01F0..infinity)\n   \p{Variation_Selector: Y*} (Short: \p{VS=Y}, \p{VS}) (259:\n                             U+180B..180D, U+FE00..FE0F,\n                             U+E0100..E01EF)\n X \p{Variation_Selectors} \p{Block=Variation_Selectors} (Short:\n                             \p{InVS}) (16)\n X \p{Variation_Selectors_Supplement} \p{Block=\n                             Variation_Selectors_Supplement} (Short:\n                             \p{InVSSup}) (240)\n X \p{Vedic_Ext}           \p{Vedic_Extensions} (= \p{Block=\n                             Vedic_Extensions}) (48)\n X \p{Vedic_Extensions}    \p{Block=Vedic_Extensions} (Short:\n                             \p{InVedicExt}) (48)\n X \p{Vertical_Forms}      \p{Block=Vertical_Forms} (16)\n   \p{Vertical_Orientation: R} \p{Vertical_Orientation=Rotated}\n                             (787_892 plus all above-Unicode code\n                             points)\n   \p{Vertical_Orientation: Rotated} (Short: \p{Vo=R}) (787_892 plus\n                             all above-Unicode code points: [\x00-\n                             \xa6\xa8\xaa-\xad\xaf-\xb0\xb2-\xbb\xbf-\n                             \xd6\xd8-\xf6\xf8-\xff], U+0100..02E9,\n                             U+02EC..10FF, U+1200..1400,\n                             U+1680..18AF, U+1900..2015 ...)\n   \p{Vertical_Orientation: Tr} \p{Vertical_Orientation=\n                             Transformed_Rotated} (47)\n   \p{Vertical_Orientation: Transformed_Rotated} (Short: \p{Vo=Tr})\n                             (47: U+2329..232A, U+3008..3011,\n                             U+3014..301F, U+3030, U+30A0, U+30FC ...)\n   \p{Vertical_Orientation: Transformed_Upright} (Short: \p{Vo=Tu})\n                             (147: U+3001..3002, U+3041, U+3043,\n                             U+3045, U+3047, U+3049 ...)\n   \p{Vertical_Orientation: Tu} \p{Vertical_Orientation=\n                             Transformed_Upright} (147)\n   \p{Vertical_Orientation: U} \p{Vertical_Orientation=Upright}\n                             (326_026)\n   \p{Vertical_Orientation: Upright} (Short: \p{Vo=U}) (326_026:\n                             [\xa7\xa9\xae\xb1\xbc-\xbe\xd7\xf7],\n                             U+02EA..02EB, U+1100..11FF,\n                             U+1401..167F, U+18B0..18FF, U+2016 ...)\n   \p{VertSpace}           \v (7: [\n\cK\f\r\x85], U+2028..2029)\n   \p{Vo: *}               \p{Vertical_Orientation: *}\n   \p{VS}                  \p{Variation_Selector} (=\n                             \p{Variation_Selector=Y}) (NOT\n                             \p{Variation_Selectors}) (259)\n   \p{VS: *}               \p{Variation_Selector: *}\n X \p{VS_Sup}              \p{Variation_Selectors_Supplement} (=\n                             \p{Block=\n                             Variation_Selectors_Supplement}) (240)\n   \p{Wara}                \p{Warang_Citi} (= \p{Script_Extensions=\n                             Warang_Citi}) (NOT \p{Block=\n                             Warang_Citi}) (84)\n   \p{Warang_Citi}         \p{Script_Extensions=Warang_Citi} (Short:\n                             \p{Wara}; NOT \p{Block=Warang_Citi}) (84)\n   \p{WB: *}               \p{Word_Break: *}\n   \p{White_Space}         \p{White_Space=Y} (Short: \p{Space}) (25)\n   \p{White_Space: N*}     (Short: \p{Space=N}, \P{Space}) (1_114_087\n                             plus all above-Unicode code points:\n                             [^\t\n\cK\f\r\x20\x85\xa0],\n                             U+0100..167F, U+1681..1FFF,\n                             U+200B..2027, U+202A..202E, U+2030..205E\n                             ...)\n   \p{White_Space: Y*}     (Short: \p{Space=Y}, \p{Space}) (25:\n                             [\t\n\cK\f\r\x20\x85\xa0], U+1680,\n                             U+2000..200A, U+2028..2029, U+202F,\n                             U+205F ...)\n   \p{Word}                \p{XPosixWord} (128_238)\n   \p{Word_Break: ALetter} (Short: \p{WB=LE}) (28_179: [A-Za-\n                             z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\n                             \xff], U+0100..02D7, U+02DE..02E4,\n                             U+02EC..02FF, U+0370..0374, U+0376..0377\n                             ...)\n   \p{Word_Break: CR}      (Short: \p{WB=CR}) (1: [\r])\n   \p{Word_Break: Double_Quote} (Short: \p{WB=DQ}) (1: [\"])\n   \p{Word_Break: DQ}      \p{Word_Break=Double_Quote} (1)\n   \p{Word_Break: E_Base}  (Short: \p{WB=EB}) (98: U+261D, U+26F9,\n                             U+270A..270D, U+1F385, U+1F3C2..1F3C4,\n                             U+1F3C7 ...)\n   \p{Word_Break: E_Base_GAZ} (Short: \p{WB=EBG}) (4: U+1F466..1F469)\n   \p{Word_Break: E_Modifier} (Short: \p{WB=EM}) (5: U+1F3FB..1F3FF)\n   \p{Word_Break: EB}      \p{Word_Break=E_Base} (98)\n   \p{Word_Break: EBG}     \p{Word_Break=E_Base_GAZ} (4)\n   \p{Word_Break: EM}      \p{Word_Break=E_Modifier} (5)\n   \p{Word_Break: EX}      \p{Word_Break=ExtendNumLet} (11)\n   \p{Word_Break: Extend}  (Short: \p{WB=Extend}) (2276:\n                             U+0300..036F, U+0483..0489,\n                             U+0591..05BD, U+05BF, U+05C1..05C2,\n                             U+05C4..05C5 ...)\n   \p{Word_Break: ExtendNumLet} (Short: \p{WB=EX}) (11: [_], U+202F,\n                             U+203F..2040, U+2054, U+FE33..FE34,\n                             U+FE4D..FE4F ...)\n   \p{Word_Break: FO}      \p{Word_Break=Format} (52)\n   \p{Word_Break: Format}  (Short: \p{WB=FO}) (52: [\xad],\n                             U+0600..0605, U+061C, U+06DD, U+070F,\n                             U+08E2 ...)\n   \p{Word_Break: GAZ}     \p{Word_Break=Glue_After_Zwj} (22)\n   \p{Word_Break: Glue_After_Zwj} (Short: \p{WB=GAZ}) (22: U+2640,\n                             U+2642, U+2695..2696, U+2708, U+2764,\n                             U+1F308 ...)\n   \p{Word_Break: Hebrew_Letter} (Short: \p{WB=HL}) (74:\n                             U+05D0..05EA, U+05F0..05F2, U+FB1D,\n                             U+FB1F..FB28, U+FB2A..FB36, U+FB38..FB3C\n                             ...)\n   \p{Word_Break: HL}      \p{Word_Break=Hebrew_Letter} (74)\n   \p{Word_Break: KA}      \p{Word_Break=Katakana} (310)\n   \p{Word_Break: Katakana} (Short: \p{WB=KA}) (310: U+3031..3035,\n                             U+309B..309C, U+30A0..30FA,\n                             U+30FC..30FF, U+31F0..31FF, U+32D0..32FE\n                             ...)\n   \p{Word_Break: LE}      \p{Word_Break=ALetter} (28_179)\n   \p{Word_Break: LF}      (Short: \p{WB=LF}) (1: [\n])\n   \p{Word_Break: MB}      \p{Word_Break=MidNumLet} (7)\n   \p{Word_Break: MidLetter} (Short: \p{WB=ML}) (8: [:\xb7], U+0387,\n                             U+05F4, U+2027, U+FE13, U+FE55 ...)\n   \p{Word_Break: MidNum}  (Short: \p{WB=MN}) (15: [,;], U+037E,\n                             U+0589, U+060C..060D, U+066C, U+07F8 ...)\n   \p{Word_Break: MidNumLet} (Short: \p{WB=MB}) (7: [.],\n                             U+2018..2019, U+2024, U+FE52, U+FF07,\n                             U+FF0E)\n   \p{Word_Break: ML}      \p{Word_Break=MidLetter} (8)\n   \p{Word_Break: MN}      \p{Word_Break=MidNum} (15)\n   \p{Word_Break: Newline} (Short: \p{WB=NL}) (5: [\cK\f\x85],\n                             U+2028..2029)\n   \p{Word_Break: NL}      \p{Word_Break=Newline} (5)\n   \p{Word_Break: NU}      \p{Word_Break=Numeric} (581)\n   \p{Word_Break: Numeric} (Short: \p{WB=NU}) (581: [0-9],\n                             U+0660..0669, U+066B, U+06F0..06F9,\n                             U+07C0..07C9, U+0966..096F ...)\n   \p{Word_Break: Other}   (Short: \p{WB=XX}) (1_082_434 plus all\n                             above-Unicode code points:\n                             [^\n\cK\f\r\"\',.0-9:;A-Z_a-\n                             z\x85\xaa\xad\xb5\xb7\xba\xc0-\xd6\xd8-\n                             \xf6\xf8-\xff], U+02D8..02DD,\n                             U+02E5..02EB, U+0375, U+0378..0379,\n                             U+0380..0385 ...)\n   \p{Word_Break: Regional_Indicator} (Short: \p{WB=RI}) (26:\n                             U+1F1E6..1F1FF)\n   \p{Word_Break: RI}      \p{Word_Break=Regional_Indicator} (26)\n   \p{Word_Break: Single_Quote} (Short: \p{WB=SQ}) (1: [\'])\n   \p{Word_Break: SQ}      \p{Word_Break=Single_Quote} (1)\n   \p{Word_Break: XX}      \p{Word_Break=Other} (1_082_434 plus all\n                             above-Unicode code points)\n   \p{Word_Break: ZWJ}     (Short: \p{WB=ZWJ}) (1: U+200D)\n   \p{WSpace}              \p{White_Space} (= \p{White_Space=Y}) (25)\n   \p{WSpace: *}           \p{White_Space: *}\n   \p{XDigit}              \p{XPosixXDigit} (= \p{Hex_Digit=Y}) (44)\n   \p{XID_Continue}        \p{XID_Continue=Y} (Short: \p{XIDC})\n                             (128_089)\n   \p{XID_Continue: N*}    (Short: \p{XIDC=N}, \P{XIDC}) (986_023\n                             plus all above-Unicode code points:\n                             [\x00-\x20!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                             >?\@\[\\\]\^`\{\|\}~\x7f-\xa9\xab-\n                             \xb4\xb6\xb8-\xb9\xbb-\xbf\xd7\xf7],\n                             U+02C2..02C5, U+02D2..02DF,\n                             U+02E5..02EB, U+02ED, U+02EF..02FF ...)\n   \p{XID_Continue: Y*}    (Short: \p{XIDC=Y}, \p{XIDC}) (128_089:\n                             [0-9A-Z_a-z\xaa\xb5\xb7\xba\xc0-\n                             \xd6\xd8-\xf6\xf8-\xff], U+0100..02C1,\n                             U+02C6..02D1, U+02E0..02E4, U+02EC,\n                             U+02EE ...)\n   \p{XID_Start}           \p{XID_Start=Y} (Short: \p{XIDS}) (125_311)\n   \p{XID_Start: N*}       (Short: \p{XIDS=N}, \P{XIDS}) (988_801\n                             plus all above-Unicode code points:\n                             [\x00-\x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=\n                             >?\@\[\\\]\^_`\{\|\}~\x7f-\xa9\xab-\n                             \xb4\xb6-\xb9\xbb-\xbf\xd7\xf7],\n                             U+02C2..02C5, U+02D2..02DF,\n                             U+02E5..02EB, U+02ED, U+02EF..036F ...)\n   \p{XID_Start: Y*}       (Short: \p{XIDS=Y}, \p{XIDS}) (125_311:\n                             [A-Za-z\xaa\xb5\xba\xc0-\xd6\xd8-\n                             \xf6\xf8-\xff], U+0100..02C1,\n                             U+02C6..02D1, U+02E0..02E4, U+02EC,\n                             U+02EE ...)\n   \p{XIDC}                \p{XID_Continue} (= \p{XID_Continue=Y})\n                             (128_089)\n   \p{XIDC: *}             \p{XID_Continue: *}\n   \p{XIDS}                \p{XID_Start} (= \p{XID_Start=Y}) (125_311)\n   \p{XIDS: *}             \p{XID_Start: *}\n   \p{Xpeo}                \p{Old_Persian} (= \p{Script_Extensions=\n                             Old_Persian}) (NOT \p{Block=\n                             Old_Persian}) (50)\n   \p{XPerlSpace}          \p{XPosixSpace} (25)\n   \p{XPosixAlnum}         Alphabetic and (decimal) Numeric (Short:\n                             \p{Alnum}) (127_219: [0-9A-Za-\n                             z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\n                             \xff], U+0100..02C1, U+02C6..02D1,\n                             U+02E0..02E4, U+02EC, U+02EE ...)\n   \p{XPosixAlpha}         \p{Alphabetic=Y} (Short: \p{Alpha})\n                             (126_629)\n   \p{XPosixBlank}         \h, Horizontal white space (Short:\n                             \p{Blank}) (18: [\t\x20\xa0], U+1680,\n                             U+2000..200A, U+202F, U+205F, U+3000)\n   \p{XPosixCntrl}         \p{General_Category=Control} Control\n                             characters (Short: \p{Cc}) (65)\n   \p{XPosixDigit}         \p{General_Category=Decimal_Number} [0-9]\n                             + all other decimal digits (Short:\n                             \p{Nd}) (590)\n   \p{XPosixGraph}         Characters that are graphical (Short:\n                             \p{Graph}) (274_139:\n                             [!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-\n                             Z\[\\\]\^_`a-z\{\|\}~\xa1-\xff],\n                             U+0100..0377, U+037A..037F,\n                             U+0384..038A, U+038C, U+038E..03A1 ...)\n   \p{XPosixLower}         \p{Lowercase=Y} (Short: \p{Lower}; /i=\n                             Cased=Yes) (2252)\n   \p{XPosixPrint}         Characters that are graphical plus space\n                             characters (but no controls) (Short:\n                             \p{Print}) (274_156: [\x20-\x7e\xa0-\n                             \xff], U+0100..0377, U+037A..037F,\n                             U+0384..038A, U+038C, U+038E..03A1 ...)\n   \p{XPosixPunct}         \p{Punct} + ASCII-range \p{Symbol} (779:\n                             [!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                             >?\@\[\\\]\^_`\{\|\}~\xa1\xa7\xab\xb6-\n                             \xb7\xbb\xbf], U+037E, U+0387,\n                             U+055A..055F, U+0589..058A, U+05BE ...)\n   \p{XPosixSpace}         \s including beyond ASCII and vertical tab\n                             (Short: \p{SpacePerl}) (25:\n                             [\t\n\cK\f\r\x20\x85\xa0], U+1680,\n                             U+2000..200A, U+2028..2029, U+202F,\n                             U+205F ...)\n   \p{XPosixUpper}         \p{Uppercase=Y} (Short: \p{Upper}; /i=\n                             Cased=Yes) (1822)\n   \p{XPosixWord}          \w, including beyond ASCII; = \p{Alnum} +\n                             \pM + \p{Pc} + \p{Join_Control} (Short:\n                             \p{Word}) (128_238: [0-9A-Z_a-\n                             z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\n                             \xff], U+0100..02C1, U+02C6..02D1,\n                             U+02E0..02E4, U+02EC, U+02EE ...)\n   \p{XPosixXDigit}        \p{Hex_Digit=Y} (Short: \p{Hex}) (44)\n   \p{Xsux}                \p{Cuneiform} (= \p{Script_Extensions=\n                             Cuneiform}) (NOT \p{Block=Cuneiform})\n                             (1234)\n   \p{Yi}                  \p{Script_Extensions=Yi} (1246)\n X \p{Yi_Radicals}         \p{Block=Yi_Radicals} (64)\n X \p{Yi_Syllables}        \p{Block=Yi_Syllables} (1168)\n   \p{Yiii}                \p{Yi} (= \p{Script_Extensions=Yi}) (1246)\n X \p{Yijing}              \p{Yijing_Hexagram_Symbols} (= \p{Block=\n                             Yijing_Hexagram_Symbols}) (64)\n X \p{Yijing_Hexagram_Symbols} \p{Block=Yijing_Hexagram_Symbols}\n                             (Short: \p{InYijing}) (64)\n   \p{Z} \pZ               \p{Separator} (= \p{General_Category=\n                             Separator}) (19)\n   \p{Zanabazar_Square}    \p{Script_Extensions=Zanabazar_Square}\n                             (Short: \p{Zanb}; NOT \p{Block=\n                             Zanabazar_Square}) (72)\n   \p{Zanb}                \p{Zanabazar_Square} (=\n                             \p{Script_Extensions=Zanabazar_Square})\n                             (NOT \p{Block=Zanabazar_Square}) (72)\n   \p{Zinh}                \p{Inherited} (= \p{Script_Extensions=\n                             Inherited}) (500)\n   \p{Zl}                  \p{Line_Separator} (= \p{General_Category=\n                             Line_Separator}) (1)\n   \p{Zp}                  \p{Paragraph_Separator} (=\n                             \p{General_Category=\n                             Paragraph_Separator}) (1)\n   \p{Zs}                  \p{Space_Separator} (=\n                             \p{General_Category=Space_Separator})\n                             (17)\n   \p{Zyyy}                \p{Common} (= \p{Script_Extensions=\n                             Common}) (6947)\n   \p{Zzzz}                \p{Unknown} (= \p{Script_Extensions=\n                             Unknown}) (977_357 plus all above-\n                             Unicode code points)\n TX\p{_CanonDCIJ}          (For internal use by Perl, not necessarily\n                             stable) (= \p{Soft_Dotted=Y}) (46)\n TX\p{_Case_Ignorable}     (For internal use by Perl, not necessarily\n                             stable) (= \p{Case_Ignorable=Y}) (2314)\n TX\p{_CombAbove}          (For internal use by Perl, not necessarily\n                             stable) (= \p{Canonical_Combining_Class=\n                             Above}) (461)\n')
      PsiHead2SectionImpl(Perl5 POD: HEAD_2_SECTION)
        PsiElement(Perl5 POD: =head2)('=head2')
        PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
          PodIdentifierImpl(Perl5 POD: identifier)('Legal')
          PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
            PsiElement(Perl5 POD: C)('C')
            PsiElement(Perl5 POD: <)('<')
            PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
              PsiElement(Perl5 POD: \)('\')
              PodIdentifierImpl(Perl5 POD: identifier)('p')
              PsiElement(Perl5 POD: {)('{')
              PsiElement(Perl5 POD: })('}')
            PsiElement(Perl5 POD: >)('>')
          PodIdentifierImpl(Perl5 POD: identifier)('and')
          PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
            PsiElement(Perl5 POD: C)('C')
            PsiElement(Perl5 POD: <)('<')
            PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
              PsiElement(Perl5 POD: \)('\')
              PodIdentifierImpl(Perl5 POD: identifier)('P')
              PsiElement(Perl5 POD: {)('{')
              PsiElement(Perl5 POD: })('}')
            PsiElement(Perl5 POD: >)('>')
          PodIdentifierImpl(Perl5 POD: identifier)('constructs')
          PodIdentifierImpl(Perl5 POD: identifier)('that')
          PodIdentifierImpl(Perl5 POD: identifier)('match')
          PodIdentifierImpl(Perl5 POD: identifier)('no')
          PodIdentifierImpl(Perl5 POD: identifier)('characters')
        PsiElement(Perl5 POD: NL)('\n')
        PsiHead2SectionContentImpl(Perl5 POD: HEAD_2_SECTION_CONTENT)
          PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
            PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
            PodIdentifierImpl(Perl5 POD: identifier)('has')
            PodIdentifierImpl(Perl5 POD: identifier)('some')
            PodIdentifierImpl(Perl5 POD: identifier)('property')
            PsiElement(Perl5 POD: symbol)('-')
            PodIdentifierImpl(Perl5 POD: identifier)('value')
            PodIdentifierImpl(Perl5 POD: identifier)('pairs')
            PodIdentifierImpl(Perl5 POD: identifier)('that')
            PodIdentifierImpl(Perl5 POD: identifier)('currently')
            PodIdentifierImpl(Perl5 POD: identifier)('don')
            PsiElement(Perl5 POD: ')(''')
            PodIdentifierImpl(Perl5 POD: identifier)('t')
            PodIdentifierImpl(Perl5 POD: identifier)('match')
            PodIdentifierImpl(Perl5 POD: identifier)('anything')
            PsiElement(Perl5 POD: number)('.')
            PodIdentifierImpl(Perl5 POD: identifier)('This')
            PodIdentifierImpl(Perl5 POD: identifier)('happens')
            PodIdentifierImpl(Perl5 POD: identifier)('generally')
            PodIdentifierImpl(Perl5 POD: identifier)('either')
            PodIdentifierImpl(Perl5 POD: identifier)('because')
            PodIdentifierImpl(Perl5 POD: identifier)('they')
            PodIdentifierImpl(Perl5 POD: identifier)('are')
            PodIdentifierImpl(Perl5 POD: identifier)('obsolete')
            PsiElement(Perl5 POD: symbol)(',')
            PodIdentifierImpl(Perl5 POD: identifier)('or')
            PodIdentifierImpl(Perl5 POD: identifier)('they')
            PodIdentifierImpl(Perl5 POD: identifier)('exist')
            PodIdentifierImpl(Perl5 POD: identifier)('for')
            PodIdentifierImpl(Perl5 POD: identifier)('symmetry')
            PodIdentifierImpl(Perl5 POD: identifier)('with')
            PodIdentifierImpl(Perl5 POD: identifier)('other')
            PodIdentifierImpl(Perl5 POD: identifier)('forms')
            PsiElement(Perl5 POD: symbol)(',')
            PodIdentifierImpl(Perl5 POD: identifier)('but')
            PodIdentifierImpl(Perl5 POD: identifier)('no')
            PodIdentifierImpl(Perl5 POD: identifier)('language')
            PodIdentifierImpl(Perl5 POD: identifier)('has')
            PodIdentifierImpl(Perl5 POD: identifier)('yet')
            PodIdentifierImpl(Perl5 POD: identifier)('been')
            PodIdentifierImpl(Perl5 POD: identifier)('encoded')
            PodIdentifierImpl(Perl5 POD: identifier)('that')
            PodIdentifierImpl(Perl5 POD: identifier)('uses')
            PodIdentifierImpl(Perl5 POD: identifier)('them')
            PsiElement(Perl5 POD: number)('.')
            PodIdentifierImpl(Perl5 POD: identifier)('In')
            PodIdentifierImpl(Perl5 POD: identifier)('this')
            PodIdentifierImpl(Perl5 POD: identifier)('version')
            PodIdentifierImpl(Perl5 POD: identifier)('of')
            PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
            PsiElement(Perl5 POD: symbol)(',')
            PodIdentifierImpl(Perl5 POD: identifier)('the')
            PodIdentifierImpl(Perl5 POD: identifier)('following')
            PodIdentifierImpl(Perl5 POD: identifier)('match')
            PodIdentifierImpl(Perl5 POD: identifier)('zero')
            PodIdentifierImpl(Perl5 POD: identifier)('code')
            PodIdentifierImpl(Perl5 POD: identifier)('points')
            PsiElement(Perl5 POD: :)(':')
            PsiElement(Perl5 POD: NL)('\n')
          PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
            PsiElement(Perl5 POD: =over)('=over')
            PsiElement(Perl5 POD: indent_level)('4')
            PsiElement(Perl5 POD: NL)('\n')
            PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
              PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                PsiElement(Perl5 POD: =item)('=item')
                PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
                  PsiElement(Perl5 POD: \)('\')
                  PodIdentifierImpl(Perl5 POD: identifier)('p')
                  PsiElement(Perl5 POD: {)('{')
                  PodIdentifierImpl(Perl5 POD: identifier)('Canonical_Combining_Class')
                  PsiElement(Perl5 POD: symbol)('=')
                  PodIdentifierImpl(Perl5 POD: identifier)('Attached_Below_Left')
                  PsiElement(Perl5 POD: })('}')
                PsiElement(Perl5 POD: NL)('\n')
              PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
                PsiElement(Perl5 POD: =item)('=item')
                PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
                  PsiElement(Perl5 POD: \)('\')
                  PodIdentifierImpl(Perl5 POD: identifier)('p')
                  PsiElement(Perl5 POD: {)('{')
                  PodIdentifierImpl(Perl5 POD: identifier)('Canonical_Combining_Class')
                  PsiElement(Perl5 POD: symbol)('=')
                  PodIdentifierImpl(Perl5 POD: identifier)('CCC133')
                  PsiElement(Perl5 POD: })('}')
                PsiElement(Perl5 POD: NL)('\n')
            PsiElement(Perl5 POD: =back)('=back')
            PsiElement(Perl5 POD: NL)('\n')
  PsiHead1SectionImpl(Perl5 POD: HEAD_1_SECTION)
    PsiElement(Perl5 POD: =head1)('=head1')
    PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
      PodIdentifierImpl(Perl5 POD: identifier)('Properties')
      PodIdentifierImpl(Perl5 POD: identifier)('accessible')
      PodIdentifierImpl(Perl5 POD: identifier)('through')
      PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
      PsiElement(Perl5 POD: :)(':')
      PsiElement(Perl5 POD: :)(':')
      PodIdentifierImpl(Perl5 POD: identifier)('UCD')
    PsiElement(Perl5 POD: NL)('\n')
    PsiHead1SectionContentImpl(Perl5 POD: HEAD_1_SECTION_CONTENT)
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('value')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('any')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('including')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('extensions')
        PsiElement(Perl5 POD: ))(')')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('mentioned')
        PodIdentifierImpl(Perl5 POD: identifier)('above')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('any')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('point')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('available')
        PodIdentifierImpl(Perl5 POD: identifier)('through')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('UCD')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('charprop')
              PsiElement(Perl5 POD: ()('(')
              PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('UCD')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('charprops_all')
              PsiElement(Perl5 POD: ()('(')
              PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('returns')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('values')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('given')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('point')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Besides')
        PodIdentifierImpl(Perl5 POD: identifier)('these')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('mentioned')
        PodIdentifierImpl(Perl5 POD: identifier)('above')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('except')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('those')
        PodIdentifierImpl(Perl5 POD: identifier)('marked')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('internal')
        PodIdentifierImpl(Perl5 POD: identifier)('use')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PsiElement(Perl5 POD: ))(')')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('accessible')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('UCD')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('prop_invlist')
              PsiElement(Perl5 POD: ()('(')
              PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Due')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('their')
        PodIdentifierImpl(Perl5 POD: identifier)('nature')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('suitable')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expression')
        PodIdentifierImpl(Perl5 POD: identifier)('matches')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('nor')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('prop_invlist')
            PsiElement(Perl5 POD: ()('(')
            PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('remaining')
        PodIdentifierImpl(Perl5 POD: identifier)('non')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('provisional')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('non')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('internal')
        PodIdentifierImpl(Perl5 POD: identifier)('ones')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('accessible')
        PodIdentifierImpl(Perl5 POD: identifier)('via')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('UCD')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('prop_invmap')
              PsiElement(Perl5 POD: ()('(')
              PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('except')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('those')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('this')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('installation')
        PodIdentifierImpl(Perl5 POD: identifier)('hasn')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('t')
        PodIdentifierImpl(Perl5 POD: identifier)('included')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('see')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkTextImpl(Perl5 POD: LINK_TEXT)
              PodIdentifierImpl(Perl5 POD: identifier)('below')
              PodIdentifierImpl(Perl5 POD: identifier)('for')
              PodIdentifierImpl(Perl5 POD: identifier)('which')
              PodIdentifierImpl(Perl5 POD: identifier)('those')
              PodIdentifierImpl(Perl5 POD: identifier)('are')
            PsiElement(Perl5 POD: |)('|')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PodIdentifierImpl(Perl5 POD: identifier)('character')
              PodIdentifierImpl(Perl5 POD: identifier)('properties')
              PodIdentifierImpl(Perl5 POD: identifier)('that')
              PodIdentifierImpl(Perl5 POD: identifier)('are')
              PodIdentifierImpl(Perl5 POD: identifier)('NOT')
              PodIdentifierImpl(Perl5 POD: identifier)('accepted')
              PodIdentifierImpl(Perl5 POD: identifier)('by')
              PodIdentifierImpl(Perl5 POD: identifier)('Perl')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('For')
        PodIdentifierImpl(Perl5 POD: identifier)('compatibility')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('other')
        PodIdentifierImpl(Perl5 POD: identifier)('parts')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('given')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkTextImpl(Perl5 POD: LINK_TEXT)
              PodIdentifierImpl(Perl5 POD: identifier)('section')
              PodIdentifierImpl(Perl5 POD: identifier)('above')
            PsiElement(Perl5 POD: |)('|')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('Properties')
              PodIdentifierImpl(Perl5 POD: identifier)('accessible')
              PodIdentifierImpl(Perl5 POD: identifier)('through')
              PsiElement(Perl5 POD: \)('\')
              PodIdentifierImpl(Perl5 POD: identifier)('p')
              PsiElement(Perl5 POD: {)('{')
              PsiElement(Perl5 POD: })('}')
              PodIdentifierImpl(Perl5 POD: identifier)('and')
              PsiElement(Perl5 POD: \)('\')
              PodIdentifierImpl(Perl5 POD: identifier)('P')
              PsiElement(Perl5 POD: {)('{')
              PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('recognized')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('BUT')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('there')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('some')
        PodIdentifierImpl(Perl5 POD: identifier)('ambiguities')
        PodIdentifierImpl(Perl5 POD: identifier)('between')
        PodIdentifierImpl(Perl5 POD: identifier)('some')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('extensions')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('all')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('which')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('silently')
        PodIdentifierImpl(Perl5 POD: identifier)('resolved')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('favor')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('official')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('To')
        PodIdentifierImpl(Perl5 POD: identifier)('avoid')
        PodIdentifierImpl(Perl5 POD: identifier)('surprises')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('you')
        PodIdentifierImpl(Perl5 POD: identifier)('should')
        PodIdentifierImpl(Perl5 POD: identifier)('only')
        PodIdentifierImpl(Perl5 POD: identifier)('use')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('prop_invmap')
            PsiElement(Perl5 POD: ()('(')
            PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('listed')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('below')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('which')
        PodIdentifierImpl(Perl5 POD: identifier)('omits')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('non')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('recommended')
        PodIdentifierImpl(Perl5 POD: identifier)('ones')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('affected')
        PodIdentifierImpl(Perl5 POD: identifier)('forms')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('form')
        PodIdentifierImpl(Perl5 POD: identifier)('equivalents')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('such')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('sc')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('being')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('form')
        PodIdentifierImpl(Perl5 POD: identifier)('equivalent')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('p')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('gc')
            PsiElement(Perl5 POD: symbol)('=')
            PodIdentifierImpl(Perl5 POD: identifier)('sc')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('which')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('treated')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('prop_invmap')
            PsiElement(Perl5 POD: ()('(')
            PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('Script')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('whose')
        PodIdentifierImpl(Perl5 POD: identifier)('short')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('sc')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('indicates')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('current')
        PodIdentifierImpl(Perl5 POD: identifier)('ambiguities')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('INFO')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('beginning')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('word')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: ")('"')
            PodIdentifierImpl(Perl5 POD: identifier)('NOT')
            PsiElement(Perl5 POD: ")('"')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('standard')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('listed')
        PodIdentifierImpl(Perl5 POD: identifier)('below')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('documented')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkUrlImpl(Perl5 POD: LINK_URL)
              PodIdentifierImpl(Perl5 POD: identifier)('http')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: /)('/')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('www')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('unicode')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('org')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('reports')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('tr44')
              PsiElement(Perl5 POD: /)('/')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl_Decimal_Digit')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('documented')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('UCD')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('prop_invmap')
              PsiElement(Perl5 POD: ()('(')
              PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('other')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('extensions')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('perlunicode')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('Other')
              PodIdentifierImpl(Perl5 POD: identifier)('Properties')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(';')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('first')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('second')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('an')
        PodIdentifierImpl(Perl5 POD: identifier)('alternative')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('if')
        PodIdentifierImpl(Perl5 POD: identifier)('any')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('plus')
        PodIdentifierImpl(Perl5 POD: identifier)('possibly')
        PodIdentifierImpl(Perl5 POD: identifier)('some')
        PodIdentifierImpl(Perl5 POD: identifier)('annotations')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('alternative')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('s')
        PodIdentifierImpl(Perl5 POD: identifier)('full')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('unless')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('would')
        PodIdentifierImpl(Perl5 POD: identifier)('simply')
        PodIdentifierImpl(Perl5 POD: identifier)('repeat')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('first')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('which')
        PodIdentifierImpl(Perl5 POD: identifier)('case')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('second')
        PodIdentifierImpl(Perl5 POD: identifier)('column')
        PodIdentifierImpl(Perl5 POD: identifier)('indicates')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('s')
        PodIdentifierImpl(Perl5 POD: identifier)('short')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('if')
        PodIdentifierImpl(Perl5 POD: identifier)('different')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('annotations')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('given')
        PodIdentifierImpl(Perl5 POD: identifier)('only')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('entry')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('full')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('annotations')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('binary')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('include')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('list')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('first')
        PodIdentifierImpl(Perl5 POD: identifier)('few')
        PodIdentifierImpl(Perl5 POD: identifier)('ranges')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('matches')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('To')
        PodIdentifierImpl(Perl5 POD: identifier)('avoid')
        PodIdentifierImpl(Perl5 POD: identifier)('any')
        PodIdentifierImpl(Perl5 POD: identifier)('ambiguity')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('SPACE')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('represented')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('x20')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('If')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('obsolete')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('etc')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('entry')
        PodIdentifierImpl(Perl5 POD: identifier)('will')
        PodIdentifierImpl(Perl5 POD: identifier)('be')
        PodIdentifierImpl(Perl5 POD: identifier)('flagged')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('same')
        PodIdentifierImpl(Perl5 POD: identifier)('characters')
        PodIdentifierImpl(Perl5 POD: identifier)('used')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('table')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkTextImpl(Perl5 POD: LINK_TEXT)
              PodIdentifierImpl(Perl5 POD: identifier)('section')
              PodIdentifierImpl(Perl5 POD: identifier)('above')
            PsiElement(Perl5 POD: |)('|')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('Properties')
              PodIdentifierImpl(Perl5 POD: identifier)('accessible')
              PodIdentifierImpl(Perl5 POD: identifier)('through')
              PsiElement(Perl5 POD: \)('\')
              PodIdentifierImpl(Perl5 POD: identifier)('p')
              PsiElement(Perl5 POD: {)('{')
              PsiElement(Perl5 POD: })('}')
              PodIdentifierImpl(Perl5 POD: identifier)('and')
              PsiElement(Perl5 POD: \)('\')
              PodIdentifierImpl(Perl5 POD: identifier)('P')
              PsiElement(Perl5 POD: {)('{')
              PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('like')
        PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
          PsiElement(Perl5 POD: B)('B')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('D')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('or')
        PsiPodFormatBoldImpl(Perl5 POD: POD_FORMAT_BOLD)
          PsiElement(Perl5 POD: B)('B')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('S')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodVerbatimParagraphImpl(Perl5 POD: POD_VERBATIM_PARAGRAPH)
        PsiElement(Perl5 POD: code)('   NAME                      INFO\n\n   Age\n   AHex                    ASCII_Hex_Digit\n   All                     (Perl extension).  All code points,\n                           including those above Unicode.  Same as\n                           qr/./s.  U+0000..infinity\n   Alnum                   XPosixAlnum.  (Perl extension)\n   Alpha                   Alphabetic\n   Alphabetic              (Short: Alpha).  [A-Za-z\xaa\xb5\xba\xc0-\n                           \xd6\xd8-\xf6\xf8-\xff], U+0100..02C1,\n                           U+02C6..02D1, U+02E0..02E4, U+02EC, U+02EE\n                           ...\n   Any                     (Perl extension).  All Unicode code\n                           points.  U+0000..10FFFF\n   ASCII                   Block=Basic_Latin.  (Perl extension).\n                           [\x00-\x7f]\n   ASCII_Hex_Digit         (Short: AHex).  [0-9A-Fa-f]\n   Assigned                (Perl extension).  All assigned code\n                           points.  U+0000..0377, U+037A..037F,\n                           U+0384..038A, U+038C, U+038E..03A1,\n                           U+03A3..052F ...\n   Bc                      Bidi_Class\n   Bidi_C                  Bidi_Control\n   Bidi_Class              (Short: bc)\n   Bidi_Control            (Short: Bidi_C).  U+061C, U+200E..200F,\n                           U+202A..202E, U+2066..2069\n   Bidi_M                  Bidi_Mirrored\n   Bidi_Mirrored           (Short: Bidi_M).\n                           [\(\)<>\[\]\{\}\xab\xbb], U+0F3A..0F3D,\n                           U+169B..169C, U+2039..203A, U+2045..2046,\n                           U+207D..207E ...\n   Bidi_Mirroring_Glyph    (Short: bmg)\n   Bidi_Paired_Bracket     (Short: bpb)\n   Bidi_Paired_Bracket_Type (Short: bpt)\n   Blank                   XPosixBlank.  (Perl extension)\n   Blk                     Block\n   Block                   (Short: blk)\n   Bmg                     Bidi_Mirroring_Glyph\n   Bpb                     Bidi_Paired_Bracket\n   Bpt                     Bidi_Paired_Bracket_Type\n   Canonical_Combining_Class (Short: ccc)\n   Case_Folding            (Short: cf)\n   Case_Ignorable          (Short: CI).\n                           [\'.:\^`\xa8\xad\xaf\xb4\xb7-\xb8],\n                           U+02B0..036F, U+0374..0375, U+037A,\n                           U+0384..0385, U+0387 ...\n   Cased                   [A-Za-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\n                           \xff], U+0100..01BA, U+01BC..01BF,\n                           U+01C4..0293, U+0295..02B8, U+02C0..02C1\n                           ...\n   Category                General_Category\n   Ccc                     Canonical_Combining_Class\n   CE                      Composition_Exclusion\n   Cf                      Case_Folding; NOT 'cf' meaning\n                           'General_Category=Format'\n   Changes_When_Casefolded (Short: CWCF).  [A-Z\xb5\xc0-\xd6\xd8-\n                           \xdf], U+0100, U+0102, U+0104, U+0106,\n                           U+0108 ...\n   Changes_When_Casemapped (Short: CWCM).  [A-Za-z\xb5\xc0-\xd6\xd8-\n                           \xf6\xf8-\xff], U+0100..0137,\n                           U+0139..018C, U+018E..019A, U+019C..01A9,\n                           U+01AC..01B9 ...\n   Changes_When_Lowercased (Short: CWL).  [A-Z\xc0-\xd6\xd8-\xde],\n                           U+0100, U+0102, U+0104, U+0106, U+0108 ...\n   Changes_When_NFKC_Casefolded (Short: CWKCF).  [A-\n                           Z\xa0\xa8\xaa\xad\xaf\xb2-\xb5\xb8-\n                           \xba\xbc-\xbe\xc0-\xd6\xd8-\xdf], U+0100,\n                           U+0102, U+0104, U+0106, U+0108 ...\n   Changes_When_Titlecased (Short: CWT).  [a-z\xb5\xdf-\xf6\xf8-\n                           \xff], U+0101, U+0103, U+0105, U+0107,\n                           U+0109 ...\n   Changes_When_Uppercased (Short: CWU).  [a-z\xb5\xdf-\xf6\xf8-\n                           \xff], U+0101, U+0103, U+0105, U+0107,\n                           U+0109 ...\n   CI                      Case_Ignorable\n   Cntrl                   XPosixCntrl (=General_Category=Control).\n                           (Perl extension)\n   Comp_Ex                 Full_Composition_Exclusion\n   Composition_Exclusion   (Short: CE).  U+0958..095F, U+09DC..09DD,\n                           U+09DF, U+0A33, U+0A36, U+0A59..0A5B ...\n   CWCF                    Changes_When_Casefolded\n   CWCM                    Changes_When_Casemapped\n   CWKCF                   Changes_When_NFKC_Casefolded\n   CWL                     Changes_When_Lowercased\n   CWT                     Changes_When_Titlecased\n   CWU                     Changes_When_Uppercased\n   Dash                    [\-], U+058A, U+05BE, U+1400, U+1806,\n                           U+2010..2015 ...\n   Decomposition_Mapping   (Short: dm)\n   Decomposition_Type      (Short: dt)\n   Default_Ignorable_Code_Point (Short: DI).  [\xad], U+034F, U+061C,\n                           U+115F..1160, U+17B4..17B5, U+180B..180E\n                           ...\n   Dep                     Deprecated\n   Deprecated              (Short: Dep).  U+0149, U+0673, U+0F77,\n                           U+0F79, U+17A3..17A4, U+206A..206F ...\n   DI                      Default_Ignorable_Code_Point\n   Dia                     Diacritic\n   Diacritic               (Short: Dia).  [\^`\xa8\xaf\xb4\xb7-\xb8],\n                           U+02B0..034E, U+0350..0357, U+035D..0362,\n                           U+0374..0375, U+037A ...\n   Digit                   XPosixDigit (=General_Category=\n                           Decimal_Number).  (Perl extension)\n   Dm                      Decomposition_Mapping\n   Dt                      Decomposition_Type\n   Ea                      East_Asian_Width\n   East_Asian_Width        (Short: ea)\n   Ext                     Extender\n   Extender                (Short: Ext).  [\xb7], U+02D0..02D1,\n                           U+0640, U+07FA, U+0E46, U+0EC6 ...\n   Full_Composition_Exclusion (Short: Comp_Ex).  U+0340..0341,\n                           U+0343..0344, U+0374, U+037E, U+0387,\n                           U+0958..095F ...\n   Gc                      General_Category\n   GCB                     Grapheme_Cluster_Break\n   General_Category        (Short: gc)\n   Gr_Base                 Grapheme_Base\n   Gr_Ext                  Grapheme_Extend\n   Graph                   XPosixGraph.  (Perl extension)\n   Grapheme_Base           (Short: Gr_Base).  [\x20-\x7e\xa0-\n                           \xac\xae-\xff], U+0100..02FF,\n                           U+0370..0377, U+037A..037F, U+0384..038A,\n                           U+038C ...\n   Grapheme_Cluster_Break  (Short: GCB)\n   Grapheme_Extend         (Short: Gr_Ext).  U+0300..036F,\n                           U+0483..0489, U+0591..05BD, U+05BF,\n                           U+05C1..05C2, U+05C4..05C5 ...\n   Hangul_Syllable_Type    (Short: hst)\n   Hex                     Hex_Digit\n   Hex_Digit               (Short: Hex).  [0-9A-Fa-f], U+FF10..FF19,\n                           U+FF21..FF26, U+FF41..FF46\n   HorizSpace              XPosixBlank.  (Perl extension)\n   Hst                     Hangul_Syllable_Type\n D Hyphen                  [\-\xad], U+058A, U+1806, U+2010..2011,\n                           U+2E17, U+30FB ...  Supplanted by\n                           Line_Break property values; see\n                           www.unicode.org/reports/tr14\n   ID_Continue             (Short: IDC).  [0-9A-Z_a-\n                           z\xaa\xb5\xb7\xba\xc0-\xd6\xd8-\xf6\xf8-\n                           \xff], U+0100..02C1, U+02C6..02D1,\n                           U+02E0..02E4, U+02EC, U+02EE ...\n   ID_Start                (Short: IDS).  [A-Za-z\xaa\xb5\xba\xc0-\n                           \xd6\xd8-\xf6\xf8-\xff], U+0100..02C1,\n                           U+02C6..02D1, U+02E0..02E4, U+02EC, U+02EE\n                           ...\n   IDC                     ID_Continue\n   Ideo                    Ideographic\n   Ideographic             (Short: Ideo).  U+3006..3007,\n                           U+3021..3029, U+3038..303A, U+3400..4DB5,\n                           U+4E00..9FEA, U+F900..FA6D ...\n   IDS                     ID_Start\n   IDS_Binary_Operator     (Short: IDSB).  U+2FF0..2FF1, U+2FF4..2FFB\n   IDS_Trinary_Operator    (Short: IDST).  U+2FF2..2FF3\n   IDSB                    IDS_Binary_Operator\n   IDST                    IDS_Trinary_Operator\n   In                      Present_In.  (Perl extension)\n   Indic_Positional_Category (Short: InPC)\n   Indic_Syllabic_Category (Short: InSC)\n   InPC                    Indic_Positional_Category\n   InSC                    Indic_Syllabic_Category\n   Isc                     ISO_Comment; NOT 'isc' meaning\n                           'General_Category=Other'\n   ISO_Comment             (Short: isc)\n   Jg                      Joining_Group\n   Join_C                  Join_Control\n   Join_Control            (Short: Join_C).  U+200C..200D\n   Joining_Group           (Short: jg)\n   Joining_Type            (Short: jt)\n   Jt                      Joining_Type\n   Lb                      Line_Break\n   Lc                      Lowercase_Mapping; NOT 'lc' meaning\n                           'General_Category=Cased_Letter'\n   Line_Break              (Short: lb)\n   LOE                     Logical_Order_Exception\n   Logical_Order_Exception (Short: LOE).  U+0E40..0E44, U+0EC0..0EC4,\n                           U+19B5..19B7, U+19BA, U+AAB5..AAB6, U+AAB9\n                           ...\n   Lower                   Lowercase\n   Lowercase               (Short: Lower).  [a-z\xaa\xb5\xba\xdf-\n                           \xf6\xf8-\xff], U+0101, U+0103, U+0105,\n                           U+0107, U+0109 ...\n   Lowercase_Mapping       (Short: lc)\n   Math                    [+<=>\^\|~\xac\xb1\xd7\xf7], U+03D0..03D2,\n                           U+03D5, U+03F0..03F1, U+03F4..03F6,\n                           U+0606..0608 ...\n   Na                      Name\n   Na1                     Unicode_1_Name\n   Name                    (Short: na)\n   Name_Alias\n   NChar                   Noncharacter_Code_Point\n   NFC_QC                  NFC_Quick_Check\n   NFC_Quick_Check         (Short: NFC_QC)\n   NFD_QC                  NFD_Quick_Check\n   NFD_Quick_Check         (Short: NFD_QC)\n   NFKC_Casefold           (Short: NFKC_CF)\n   NFKC_CF                 NFKC_Casefold\n   NFKC_QC                 NFKC_Quick_Check\n   NFKC_Quick_Check        (Short: NFKC_QC)\n   NFKD_QC                 NFKD_Quick_Check\n   NFKD_Quick_Check        (Short: NFKD_QC)\n   Noncharacter_Code_Point (Short: NChar).  U+FDD0..FDEF,\n                           U+FFFE..FFFF, U+1FFFE..1FFFF,\n                           U+2FFFE..2FFFF, U+3FFFE..3FFFF,\n                           U+4FFFE..4FFFF ...\n   Nt                      Numeric_Type\n   Numeric_Type            (Short: nt)\n   Numeric_Value           (Short: nv)\n   Nv                      Numeric_Value\n   Pat_Syn                 Pattern_Syntax\n   Pat_WS                  Pattern_White_Space\n   Pattern_Syntax          (Short: Pat_Syn).\n                           [!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                           >?\@\[\\\]\^`\{\|\}~\xa1-\xa7\xa9\xab-\n                           \xac\xae\xb0-\xb1\xb6\xbb\xbf\xd7\xf7],\n                           U+2010..2027, U+2030..203E, U+2041..2053,\n                           U+2055..205E, U+2190..245F ...\n   Pattern_White_Space     (Short: Pat_WS).  [\t\n\cK\f\r\x20\x85],\n                           U+200E..200F, U+2028..2029\n   PCM                     Prepended_Concatenation_Mark\n   Perl_Decimal_Digit      (Perl extension)\n   PerlSpace               PosixSpace.  (Perl extension)\n   PerlWord                PosixWord.  (Perl extension)\n   PosixAlnum              (Perl extension).  [0-9A-Za-z]\n   PosixAlpha              (Perl extension).  [A-Za-z]\n   PosixBlank              (Perl extension).  [\t\x20]\n   PosixCntrl              (Perl extension).  ASCII control\n                           characters.  ACK, BEL, BS, CAN, CR, DC1,\n                           DC2, DC3, DC4, DEL, DLE, ENQ, EOM, EOT,\n                           ESC, ETB, ETX, FF, FS, GS, HT, LF, NAK,\n                           NUL, RS, SI, SO, SOH, STX, SUB, SYN, US, VT\n   PosixDigit              (Perl extension).  [0-9]\n   PosixGraph              (Perl extension).\n                           [!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-\n                           Z\[\\\]\^_`a-z\{\|\}~]\n   PosixLower              (Perl extension).  [a-z]\n   PosixPrint              (Perl extension).  [\x20-\x7e]\n   PosixPunct              (Perl extension).\n                           [!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                           >?\@\[\\\]\^_`\{\|\}~]\n   PosixSpace              (Perl extension).  [\t\n\cK\f\r\x20]\n   PosixUpper              (Perl extension).  [A-Z]\n   PosixWord               (Perl extension).  \w, restricted to\n                           ASCII.  [0-9A-Z_a-z]\n   PosixXDigit             ASCII_Hex_Digit.  (Perl extension).\n                           [0-9A-Fa-f]\n   Prepended_Concatenation_Mark (Short: PCM).  U+0600..0605, U+06DD,\n                           U+070F, U+08E2, U+110BD\n   Present_In              (Short: In).  (Perl extension)\n   Print                   XPosixPrint.  (Perl extension)\n   Punct                   General_Category=Punctuation.  (Perl\n                           extension).\n                           [!\"#\%&\'\(\)*,\-.\/:;?\@\[\\\]_-\n                           \{\}\xa1\xa7\xab\xb6-\xb7\xbb\xbf],\n                           U+037E, U+0387, U+055A..055F,\n                           U+0589..058A, U+05BE ...\n   QMark                   Quotation_Mark\n   Quotation_Mark          (Short: QMark).  [\"\'\xab\xbb],\n                           U+2018..201F, U+2039..203A, U+2E42,\n                           U+300C..300F, U+301D..301F ...\n   Radical                 U+2E80..2E99, U+2E9B..2EF3, U+2F00..2FD5\n   Regional_Indicator      (Short: RI).  U+1F1E6..1F1FF\n   RI                      Regional_Indicator\n   SB                      Sentence_Break\n   Sc                      Script; NOT 'sc' meaning\n                           'General_Category=Currency_Symbol'\n   Scf                     Simple_Case_Folding\n   Script                  (Short: sc)\n   Script_Extensions       (Short: scx)\n   Scx                     Script_Extensions\n   SD                      Soft_Dotted\n   Sentence_Break          (Short: SB)\n   Sentence_Terminal       (Short: STerm).  [!.?], U+0589, U+061F,\n                           U+06D4, U+0700..0702, U+07F9 ...\n   Sfc                     Simple_Case_Folding\n   Simple_Case_Folding     (Short: scf)\n   Simple_Lowercase_Mapping (Short: slc)\n   Simple_Titlecase_Mapping (Short: stc)\n   Simple_Uppercase_Mapping (Short: suc)\n   Slc                     Simple_Lowercase_Mapping\n   Soft_Dotted             (Short: SD).  [i-j], U+012F, U+0249,\n                           U+0268, U+029D, U+02B2 ...\n   Space                   White_Space\n   SpacePerl               XPosixSpace.  (Perl extension)\n   Stc                     Simple_Titlecase_Mapping\n   STerm                   Sentence_Terminal\n   Suc                     Simple_Uppercase_Mapping\n   Tc                      Titlecase_Mapping\n   Term                    Terminal_Punctuation\n   Terminal_Punctuation    (Short: Term).  [!,.:;?], U+037E, U+0387,\n                           U+0589, U+05C3, U+060C ...\n   Title                   Titlecase.  (Perl extension)\n   Titlecase               (Short: Title).  (Perl extension).  (=\n                           \p{Gc=Lt}).  U+01C5, U+01C8, U+01CB,\n                           U+01F2, U+1F88..1F8F, U+1F98..1F9F ...\n   Titlecase_Mapping       (Short: tc)\n   Uc                      Uppercase_Mapping\n   UIdeo                   Unified_Ideograph\n   Unicode                 Any.  (Perl extension)\n   Unicode_1_Name          (Short: na1)\n   Unified_Ideograph       (Short: UIdeo).  U+3400..4DB5,\n                           U+4E00..9FEA, U+FA0E..FA0F, U+FA11,\n                           U+FA13..FA14, U+FA1F ...\n   Upper                   Uppercase\n   Uppercase               (Short: Upper).  [A-Z\xc0-\xd6\xd8-\xde],\n                           U+0100, U+0102, U+0104, U+0106, U+0108 ...\n   Uppercase_Mapping       (Short: uc)\n   Variation_Selector      (Short: VS).  U+180B..180D, U+FE00..FE0F,\n                           U+E0100..E01EF\n   Vertical_Orientation    (Short: vo)\n   VertSpace               (Perl extension).  \v.  [\n\cK\f\r\x85],\n                           U+2028..2029\n   Vo                      Vertical_Orientation\n   VS                      Variation_Selector\n   WB                      Word_Break\n   White_Space             (Short: WSpace).\n                           [\t\n\cK\f\r\x20\x85\xa0], U+1680,\n                           U+2000..200A, U+2028..2029, U+202F, U+205F\n                           ...\n   Word                    XPosixWord.  (Perl extension)\n   Word_Break              (Short: WB)\n   WSpace                  White_Space\n   XDigit                  XPosixXDigit (=Hex_Digit).  (Perl\n                           extension)\n   XID_Continue            (Short: XIDC).  [0-9A-Z_a-\n                           z\xaa\xb5\xb7\xba\xc0-\xd6\xd8-\xf6\xf8-\n                           \xff], U+0100..02C1, U+02C6..02D1,\n                           U+02E0..02E4, U+02EC, U+02EE ...\n   XID_Start               (Short: XIDS).  [A-Za-z\xaa\xb5\xba\xc0-\n                           \xd6\xd8-\xf6\xf8-\xff], U+0100..02C1,\n                           U+02C6..02D1, U+02E0..02E4, U+02EC, U+02EE\n                           ...\n   XIDC                    XID_Continue\n   XIDS                    XID_Start\n   XPerlSpace              XPosixSpace.  (Perl extension)\n   XPosixAlnum             (Short: Alnum).  (Perl extension).\n                           Alphabetic and (decimal) Numeric.  [0-9A-\n                           Za-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\n                           \xff], U+0100..02C1, U+02C6..02D1,\n                           U+02E0..02E4, U+02EC, U+02EE ...\n   XPosixAlpha             Alphabetic.  (Perl extension).  [A-Za-\n                           z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\xff],\n                           U+0100..02C1, U+02C6..02D1, U+02E0..02E4,\n                           U+02EC, U+02EE ...\n   XPosixBlank             (Short: Blank).  (Perl extension).  \h,\n                           Horizontal white space.  [\t\x20\xa0],\n                           U+1680, U+2000..200A, U+202F, U+205F,\n                           U+3000\n   XPosixCntrl             General_Category=Control  (Short: Cntrl).\n                           (Perl extension).  Control characters.\n                           [\x00-\x1f\x7f-\x9f]\n   XPosixDigit             General_Category=Decimal_Number  (Short:\n                           Digit).  (Perl extension).  [0-9] + all\n                           other decimal digits.  [0-9],\n                           U+0660..0669, U+06F0..06F9, U+07C0..07C9,\n                           U+0966..096F, U+09E6..09EF ...\n   XPosixGraph             (Short: Graph).  (Perl extension).\n                           Characters that are graphical.\n                           [!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-\n                           Z\[\\\]\^_`a-z\{\|\}~\xa1-\xff],\n                           U+0100..0377, U+037A..037F, U+0384..038A,\n                           U+038C, U+038E..03A1 ...\n   XPosixLower             Lowercase.  (Perl extension).  [a-\n                           z\xaa\xb5\xba\xdf-\xf6\xf8-\xff], U+0101,\n                           U+0103, U+0105, U+0107, U+0109 ...\n   XPosixPrint             (Short: Print).  (Perl extension).\n                           Characters that are graphical plus space\n                           characters (but no controls).  [\x20-\n                           \x7e\xa0-\xff], U+0100..0377,\n                           U+037A..037F, U+0384..038A, U+038C,\n                           U+038E..03A1 ...\n   XPosixPunct             (Perl extension).  \p{Punct} + ASCII-range\n                           \p{Symbol}.  [!\"#\$\%&\'\(\)*+,\-.\/:;<=\n                           >?\@\[\\\]\^_`\{\|\}~\xa1\xa7\xab\xb6-\n                           \xb7\xbb\xbf], U+037E, U+0387,\n                           U+055A..055F, U+0589..058A, U+05BE ...\n   XPosixSpace             (Perl extension).  \s including beyond\n                           ASCII and vertical tab.\n                           [\t\n\cK\f\r\x20\x85\xa0], U+1680,\n                           U+2000..200A, U+2028..2029, U+202F, U+205F\n                           ...\n   XPosixUpper             Uppercase.  (Perl extension).  [A-Z\xc0-\n                           \xd6\xd8-\xde], U+0100, U+0102, U+0104,\n                           U+0106, U+0108 ...\n   XPosixWord              (Short: Word).  (Perl extension).  \w,\n                           including beyond ASCII; = \p{Alnum} + \pM\n                           + \p{Pc} + \p{Join_Control}.  [0-9A-Z_a-\n                           z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\xff],\n                           U+0100..02C1, U+02C6..02D1, U+02E0..02E4,\n                           U+02EC, U+02EE ...\n   XPosixXDigit            Hex_Digit  (Short: XDigit).  (Perl\n                           extension).  [0-9A-Fa-f], U+FF10..FF19,\n                           U+FF21..FF26, U+FF41..FF46\n')
  PsiHead1SectionImpl(Perl5 POD: HEAD_1_SECTION)
    PsiElement(Perl5 POD: =head1)('=head1')
    PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
      PodIdentifierImpl(Perl5 POD: identifier)('Properties')
      PodIdentifierImpl(Perl5 POD: identifier)('accessible')
      PodIdentifierImpl(Perl5 POD: identifier)('through')
      PodIdentifierImpl(Perl5 POD: identifier)('other')
      PodIdentifierImpl(Perl5 POD: identifier)('means')
    PsiElement(Perl5 POD: NL)('\n')
    PsiHead1SectionContentImpl(Perl5 POD: HEAD_1_SECTION_CONTENT)
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Certain')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('accessible')
        PodIdentifierImpl(Perl5 POD: identifier)('also')
        PodIdentifierImpl(Perl5 POD: identifier)('via')
        PodIdentifierImpl(Perl5 POD: identifier)('core')
        PodIdentifierImpl(Perl5 POD: identifier)('function')
        PodIdentifierImpl(Perl5 POD: identifier)('calls')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('These')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PsiElement(Perl5 POD: :)(':')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodVerbatimParagraphImpl(Perl5 POD: POD_VERBATIM_PARAGRAPH)
        PsiElement(Perl5 POD: code)(' Lowercase_Mapping          lc() and lcfirst()\n Titlecase_Mapping          ucfirst()\n Uppercase_Mapping          uc()\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Also')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('Case_Folding')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('accessible')
        PodIdentifierImpl(Perl5 POD: identifier)('through')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: /)('/')
            PodIdentifierImpl(Perl5 POD: identifier)('i')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('modifier')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expressions')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('F')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('transliteration')
        PodIdentifierImpl(Perl5 POD: identifier)('escape')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
              PsiElement(Perl5 POD: L)('L')
              PsiElement(Perl5 POD: <)('<')
              PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                PsiLinkTextImpl(Perl5 POD: LINK_TEXT)
                  PodIdentifierImpl(Perl5 POD: identifier)('fc')
                PsiElement(Perl5 POD: |)('|')
                PsiLinkNameImpl(Perl5 POD: LINK_NAME)
                  PodIdentifierImpl(Perl5 POD: identifier)('perlfunc')
                PsiElement(Perl5 POD: /)('/')
                PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
                  PodIdentifierImpl(Perl5 POD: identifier)('fc')
              PsiElement(Perl5 POD: >)('>')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('operator')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('And')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Name')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('Name_Aliases')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('accessible')
        PodIdentifierImpl(Perl5 POD: identifier)('through')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('N')
            PsiElement(Perl5 POD: {)('{')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('interpolation')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('double')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('quoted')
        PodIdentifierImpl(Perl5 POD: identifier)('strings')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expressions')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('functions')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('charnames')
            PsiElement(Perl5 POD: :)(':')
            PsiElement(Perl5 POD: :)(':')
            PodIdentifierImpl(Perl5 POD: identifier)('viacode')
            PsiElement(Perl5 POD: ()('(')
            PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(',')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('charnames')
            PsiElement(Perl5 POD: :)(':')
            PsiElement(Perl5 POD: :)(':')
            PodIdentifierImpl(Perl5 POD: identifier)('vianame')
            PsiElement(Perl5 POD: ()('(')
            PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('charnames')
            PsiElement(Perl5 POD: :)(':')
            PsiElement(Perl5 POD: :)(':')
            PodIdentifierImpl(Perl5 POD: identifier)('string_vianame')
            PsiElement(Perl5 POD: ()('(')
            PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('which')
        PodIdentifierImpl(Perl5 POD: identifier)('require')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('use')
            PodIdentifierImpl(Perl5 POD: identifier)('charnames')
            PsiElement(Perl5 POD: ()('(')
            PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: symbol)(';')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('be')
        PodIdentifierImpl(Perl5 POD: identifier)('specified')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Finally')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('most')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('related')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('decomposition')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('accessible')
        PodIdentifierImpl(Perl5 POD: identifier)('via')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('Normalize')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
  PsiHead1SectionImpl(Perl5 POD: HEAD_1_SECTION)
    PsiElement(Perl5 POD: =head1)('=head1')
    PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
      PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
      PodIdentifierImpl(Perl5 POD: identifier)('character')
      PodIdentifierImpl(Perl5 POD: identifier)('properties')
      PodIdentifierImpl(Perl5 POD: identifier)('that')
      PodIdentifierImpl(Perl5 POD: identifier)('are')
      PodIdentifierImpl(Perl5 POD: identifier)('NOT')
      PodIdentifierImpl(Perl5 POD: identifier)('accepted')
      PodIdentifierImpl(Perl5 POD: identifier)('by')
      PodIdentifierImpl(Perl5 POD: identifier)('Perl')
    PsiElement(Perl5 POD: NL)('\n')
    PsiHead1SectionContentImpl(Perl5 POD: HEAD_1_SECTION_CONTENT)
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('will')
        PodIdentifierImpl(Perl5 POD: identifier)('generate')
        PodIdentifierImpl(Perl5 POD: identifier)('an')
        PodIdentifierImpl(Perl5 POD: identifier)('error')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('few')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('when')
        PodIdentifierImpl(Perl5 POD: identifier)('used')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('regular')
        PodIdentifierImpl(Perl5 POD: identifier)('expression')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('non')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('Unihan')
        PodIdentifierImpl(Perl5 POD: identifier)('ones')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('listed')
        PodIdentifierImpl(Perl5 POD: identifier)('below')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('reasons')
        PodIdentifierImpl(Perl5 POD: identifier)('they')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('not')
        PodIdentifierImpl(Perl5 POD: identifier)('accepted')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('perhaps')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('work')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('arounds')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('short')
        PodIdentifierImpl(Perl5 POD: identifier)('names')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('properties')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('listed')
        PodIdentifierImpl(Perl5 POD: identifier)('enclosed')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('parentheses')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('As')
        PodIdentifierImpl(Perl5 POD: identifier)('described')
        PodIdentifierImpl(Perl5 POD: identifier)('after')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('list')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('an')
        PodIdentifierImpl(Perl5 POD: identifier)('installation')
        PodIdentifierImpl(Perl5 POD: identifier)('can')
        PodIdentifierImpl(Perl5 POD: identifier)('change')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('defaults')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('choose')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('accept')
        PodIdentifierImpl(Perl5 POD: identifier)('any')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('these')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('list')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('machine')
        PodIdentifierImpl(Perl5 POD: identifier)('generated')
        PodIdentifierImpl(Perl5 POD: identifier)('based')
        PodIdentifierImpl(Perl5 POD: identifier)('on')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('choices')
        PodIdentifierImpl(Perl5 POD: identifier)('made')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('installation')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('generated')
        PodIdentifierImpl(Perl5 POD: identifier)('this')
        PodIdentifierImpl(Perl5 POD: identifier)('document')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
        PsiElement(Perl5 POD: =over)('=over')
        PsiElement(Perl5 POD: indent_level)('4')
        PsiElement(Perl5 POD: NL)('\n')
        PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Expands_On_NFC')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('XO_NFC')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Expands_On_NFD')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('XO_NFD')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Expands_On_NFKC')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('XO_NFKC')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Expands_On_NFKD')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('XO_NFKD')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Deprecated')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PsiElement(Perl5 POD: number)('.')
                PodIdentifierImpl(Perl5 POD: identifier)('These')
                PodIdentifierImpl(Perl5 POD: identifier)('are')
                PodIdentifierImpl(Perl5 POD: identifier)('characters')
                PodIdentifierImpl(Perl5 POD: identifier)('that')
                PodIdentifierImpl(Perl5 POD: identifier)('expand')
                PodIdentifierImpl(Perl5 POD: identifier)('to')
                PodIdentifierImpl(Perl5 POD: identifier)('more')
                PodIdentifierImpl(Perl5 POD: identifier)('than')
                PodIdentifierImpl(Perl5 POD: identifier)('one')
                PodIdentifierImpl(Perl5 POD: identifier)('character')
                PodIdentifierImpl(Perl5 POD: identifier)('in')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('specified')
                PodIdentifierImpl(Perl5 POD: identifier)('normalization')
                PodIdentifierImpl(Perl5 POD: identifier)('form')
                PsiElement(Perl5 POD: symbol)(',')
                PodIdentifierImpl(Perl5 POD: identifier)('but')
                PodIdentifierImpl(Perl5 POD: identifier)('whether')
                PodIdentifierImpl(Perl5 POD: identifier)('they')
                PodIdentifierImpl(Perl5 POD: identifier)('actually')
                PodIdentifierImpl(Perl5 POD: identifier)('take')
                PodIdentifierImpl(Perl5 POD: identifier)('up')
                PodIdentifierImpl(Perl5 POD: identifier)('more')
                PodIdentifierImpl(Perl5 POD: identifier)('bytes')
                PodIdentifierImpl(Perl5 POD: identifier)('or')
                PodIdentifierImpl(Perl5 POD: identifier)('not')
                PodIdentifierImpl(Perl5 POD: identifier)('depends')
                PodIdentifierImpl(Perl5 POD: identifier)('on')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('encoding')
                PodIdentifierImpl(Perl5 POD: identifier)('being')
                PodIdentifierImpl(Perl5 POD: identifier)('used')
                PsiElement(Perl5 POD: number)('.')
                PodIdentifierImpl(Perl5 POD: identifier)('For')
                PodIdentifierImpl(Perl5 POD: identifier)('example')
                PsiElement(Perl5 POD: symbol)(',')
                PodIdentifierImpl(Perl5 POD: identifier)('a')
                PodIdentifierImpl(Perl5 POD: identifier)('UTF')
                PsiElement(Perl5 POD: symbol)('-')
                PsiElement(Perl5 POD: number)('8')
                PodIdentifierImpl(Perl5 POD: identifier)('encoded')
                PodIdentifierImpl(Perl5 POD: identifier)('character')
                PodIdentifierImpl(Perl5 POD: identifier)('may')
                PodIdentifierImpl(Perl5 POD: identifier)('expand')
                PodIdentifierImpl(Perl5 POD: identifier)('to')
                PodIdentifierImpl(Perl5 POD: identifier)('a')
                PodIdentifierImpl(Perl5 POD: identifier)('different')
                PodIdentifierImpl(Perl5 POD: identifier)('number')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('bytes')
                PodIdentifierImpl(Perl5 POD: identifier)('than')
                PodIdentifierImpl(Perl5 POD: identifier)('a')
                PodIdentifierImpl(Perl5 POD: identifier)('UTF')
                PsiElement(Perl5 POD: symbol)('-')
                PsiElement(Perl5 POD: number)('32')
                PodIdentifierImpl(Perl5 POD: identifier)('encoded')
                PodIdentifierImpl(Perl5 POD: identifier)('character')
                PsiElement(Perl5 POD: number)('.')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Grapheme_Link')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('Gr_Link')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Deprecated')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PsiElement(Perl5 POD: :)(':')
                PodIdentifierImpl(Perl5 POD: identifier)('Duplicates')
                PodIdentifierImpl(Perl5 POD: identifier)('ccc')
                PsiElement(Perl5 POD: symbol)('=')
                PodIdentifierImpl(Perl5 POD: identifier)('vr')
                PsiElement(Perl5 POD: ()('(')
                PodIdentifierImpl(Perl5 POD: identifier)('Canonical_Combining_Class')
                PsiElement(Perl5 POD: symbol)('=')
                PodIdentifierImpl(Perl5 POD: identifier)('Virama')
                PsiElement(Perl5 POD: ))(')')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Jamo_Short_Name')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('JSN')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Other_Alphabetic')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('OAlpha')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Other_Default_Ignorable_Code_Point')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('ODI')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Other_Grapheme_Extend')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('OGr_Ext')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Other_ID_Continue')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('OIDC')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Other_ID_Start')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('OIDS')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Other_Lowercase')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('OLower')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Other_Math')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('OMath')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Other_Uppercase')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('OUpper')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Used')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PodIdentifierImpl(Perl5 POD: identifier)('internally')
                PodIdentifierImpl(Perl5 POD: identifier)('for')
                PodIdentifierImpl(Perl5 POD: identifier)('generating')
                PodIdentifierImpl(Perl5 POD: identifier)('other')
                PodIdentifierImpl(Perl5 POD: identifier)('properties')
                PodIdentifierImpl(Perl5 POD: identifier)('and')
                PodIdentifierImpl(Perl5 POD: identifier)('not')
                PodIdentifierImpl(Perl5 POD: identifier)('intended')
                PodIdentifierImpl(Perl5 POD: identifier)('to')
                PodIdentifierImpl(Perl5 POD: identifier)('be')
                PodIdentifierImpl(Perl5 POD: identifier)('used')
                PodIdentifierImpl(Perl5 POD: identifier)('stand')
                PsiElement(Perl5 POD: symbol)('-')
                PodIdentifierImpl(Perl5 POD: identifier)('alone')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Script')
                  PsiElement(Perl5 POD: symbol)('=')
                  PodIdentifierImpl(Perl5 POD: identifier)('Katakana_Or_Hiragana')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('sc')
              PsiElement(Perl5 POD: symbol)('=')
              PodIdentifierImpl(Perl5 POD: identifier)('Hrkt')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Obsolete')
                PsiElement(Perl5 POD: number)('.')
                PodIdentifierImpl(Perl5 POD: identifier)('All')
                PodIdentifierImpl(Perl5 POD: identifier)('code')
                PodIdentifierImpl(Perl5 POD: identifier)('points')
                PodIdentifierImpl(Perl5 POD: identifier)('previously')
                PodIdentifierImpl(Perl5 POD: identifier)('matched')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('this')
                PodIdentifierImpl(Perl5 POD: identifier)('have')
                PodIdentifierImpl(Perl5 POD: identifier)('been')
                PodIdentifierImpl(Perl5 POD: identifier)('moved')
                PodIdentifierImpl(Perl5 POD: identifier)('to')
                PsiElement(Perl5 POD: ")('"')
                PodIdentifierImpl(Perl5 POD: identifier)('Script')
                PsiElement(Perl5 POD: symbol)('=')
                PodIdentifierImpl(Perl5 POD: identifier)('Common')
                PsiElement(Perl5 POD: ")('"')
                PsiElement(Perl5 POD: number)('.')
                PodIdentifierImpl(Perl5 POD: identifier)('Consider')
                PodIdentifierImpl(Perl5 POD: identifier)('instead')
                PodIdentifierImpl(Perl5 POD: identifier)('using')
                PsiElement(Perl5 POD: ")('"')
                PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
                PsiElement(Perl5 POD: symbol)('=')
                PodIdentifierImpl(Perl5 POD: identifier)('Katakana')
                PsiElement(Perl5 POD: ")('"')
                PodIdentifierImpl(Perl5 POD: identifier)('or')
                PsiElement(Perl5 POD: ")('"')
                PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
                PsiElement(Perl5 POD: symbol)('=')
                PodIdentifierImpl(Perl5 POD: identifier)('Hiragana')
                PsiElement(Perl5 POD: ")('"')
                PsiElement(Perl5 POD: ()('(')
                PodIdentifierImpl(Perl5 POD: identifier)('or')
                PodIdentifierImpl(Perl5 POD: identifier)('both')
                PsiElement(Perl5 POD: ))(')')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatItalicImpl(Perl5 POD: POD_FORMAT_ITALIC)
                PsiElement(Perl5 POD: I)('I')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
                  PsiElement(Perl5 POD: symbol)('=')
                  PodIdentifierImpl(Perl5 POD: identifier)('Katakana_Or_Hiragana')
                PsiElement(Perl5 POD: >)('>')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('scx')
              PsiElement(Perl5 POD: symbol)('=')
              PodIdentifierImpl(Perl5 POD: identifier)('Hrkt')
              PsiElement(Perl5 POD: ))(')')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('All')
                PodIdentifierImpl(Perl5 POD: identifier)('code')
                PodIdentifierImpl(Perl5 POD: identifier)('points')
                PodIdentifierImpl(Perl5 POD: identifier)('that')
                PodIdentifierImpl(Perl5 POD: identifier)('would')
                PodIdentifierImpl(Perl5 POD: identifier)('be')
                PodIdentifierImpl(Perl5 POD: identifier)('matched')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('this')
                PodIdentifierImpl(Perl5 POD: identifier)('are')
                PodIdentifierImpl(Perl5 POD: identifier)('matched')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('either')
                PsiElement(Perl5 POD: ")('"')
                PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
                PsiElement(Perl5 POD: symbol)('=')
                PodIdentifierImpl(Perl5 POD: identifier)('Katakana')
                PsiElement(Perl5 POD: ")('"')
                PodIdentifierImpl(Perl5 POD: identifier)('or')
                PsiElement(Perl5 POD: ")('"')
                PodIdentifierImpl(Perl5 POD: identifier)('Script_Extensions')
                PsiElement(Perl5 POD: symbol)('=')
                PodIdentifierImpl(Perl5 POD: identifier)('Hiragana')
                PsiElement(Perl5 POD: ")('"')
                PsiElement(Perl5 POD: NL)('\n')
        PsiElement(Perl5 POD: =back)('=back')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('An')
        PodIdentifierImpl(Perl5 POD: identifier)('installation')
        PodIdentifierImpl(Perl5 POD: identifier)('can')
        PodIdentifierImpl(Perl5 POD: identifier)('choose')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('allow')
        PodIdentifierImpl(Perl5 POD: identifier)('any')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('these')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('be')
        PodIdentifierImpl(Perl5 POD: identifier)('matched')
        PodIdentifierImpl(Perl5 POD: identifier)('by')
        PodIdentifierImpl(Perl5 POD: identifier)('downloading')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('database')
        PodIdentifierImpl(Perl5 POD: identifier)('from')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkUrlImpl(Perl5 POD: LINK_URL)
              PodIdentifierImpl(Perl5 POD: identifier)('http')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: /)('/')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('www')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('unicode')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('org')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('Public')
              PsiElement(Perl5 POD: /)('/')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: symbol)('$')
            PodIdentifierImpl(Perl5 POD: identifier)('Config')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('privlib')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)('/')
        PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
          PsiElement(Perl5 POD: F)('F')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('unicore')
            PsiElement(Perl5 POD: /)('/')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('source')
        PodIdentifierImpl(Perl5 POD: identifier)('tree')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('changing')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('controlling')
        PodIdentifierImpl(Perl5 POD: identifier)('lists')
        PodIdentifierImpl(Perl5 POD: identifier)('contained')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('program')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: symbol)('$')
            PodIdentifierImpl(Perl5 POD: identifier)('Config')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('privlib')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)('/')
        PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
          PsiElement(Perl5 POD: F)('F')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('unicore')
            PsiElement(Perl5 POD: /)('/')
            PodIdentifierImpl(Perl5 POD: identifier)('mktables')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('then')
        PodIdentifierImpl(Perl5 POD: identifier)('re')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('compiling')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('installing')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ()('(')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: symbol)('%')
            PodIdentifierImpl(Perl5 POD: identifier)('Config')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('available')
        PodIdentifierImpl(Perl5 POD: identifier)('from')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Config')
        PodIdentifierImpl(Perl5 POD: identifier)('module')
        PsiElement(Perl5 POD: ))(')')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Also')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('perl')
        PodIdentifierImpl(Perl5 POD: identifier)('can')
        PodIdentifierImpl(Perl5 POD: identifier)('be')
        PodIdentifierImpl(Perl5 POD: identifier)('recompiled')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('operate')
        PodIdentifierImpl(Perl5 POD: identifier)('on')
        PodIdentifierImpl(Perl5 POD: identifier)('an')
        PodIdentifierImpl(Perl5 POD: identifier)('earlier')
        PodIdentifierImpl(Perl5 POD: identifier)('version')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('standard')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Further')
        PodIdentifierImpl(Perl5 POD: identifier)('information')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('at')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: symbol)('$')
            PodIdentifierImpl(Perl5 POD: identifier)('Config')
            PsiElement(Perl5 POD: {)('{')
            PodIdentifierImpl(Perl5 POD: identifier)('privlib')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)('/')
        PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
          PsiElement(Perl5 POD: F)('F')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PodIdentifierImpl(Perl5 POD: identifier)('unicore')
            PsiElement(Perl5 POD: /)('/')
            PodIdentifierImpl(Perl5 POD: identifier)('README')
            PsiElement(Perl5 POD: number)('.')
            PodIdentifierImpl(Perl5 POD: identifier)('perl')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
  PsiHead1SectionImpl(Perl5 POD: HEAD_1_SECTION)
    PsiElement(Perl5 POD: =head1)('=head1')
    PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
      PodIdentifierImpl(Perl5 POD: identifier)('Other')
      PodIdentifierImpl(Perl5 POD: identifier)('information')
      PodIdentifierImpl(Perl5 POD: identifier)('in')
      PodIdentifierImpl(Perl5 POD: identifier)('the')
      PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
      PodIdentifierImpl(Perl5 POD: identifier)('data')
      PodIdentifierImpl(Perl5 POD: identifier)('base')
    PsiElement(Perl5 POD: NL)('\n')
    PsiHead1SectionContentImpl(Perl5 POD: HEAD_1_SECTION_CONTENT)
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('data')
        PodIdentifierImpl(Perl5 POD: identifier)('base')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('delivered')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('two')
        PodIdentifierImpl(Perl5 POD: identifier)('different')
        PodIdentifierImpl(Perl5 POD: identifier)('formats')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('XML')
        PodIdentifierImpl(Perl5 POD: identifier)('version')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('valid')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('more')
        PodIdentifierImpl(Perl5 POD: identifier)('modern')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('releases')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('other')
        PodIdentifierImpl(Perl5 POD: identifier)('version')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('collection')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('files')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('two')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('intended')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('give')
        PodIdentifierImpl(Perl5 POD: identifier)('equivalent')
        PodIdentifierImpl(Perl5 POD: identifier)('information')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('uses')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('older')
        PodIdentifierImpl(Perl5 POD: identifier)('form')
        PsiElement(Perl5 POD: symbol)(';')
        PodIdentifierImpl(Perl5 POD: identifier)('this')
        PodIdentifierImpl(Perl5 POD: identifier)('allows')
        PodIdentifierImpl(Perl5 POD: identifier)('you')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('recompile')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('use')
        PodIdentifierImpl(Perl5 POD: identifier)('early')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('releases')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('The')
        PodIdentifierImpl(Perl5 POD: identifier)('only')
        PodIdentifierImpl(Perl5 POD: identifier)('non')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('character')
        PodIdentifierImpl(Perl5 POD: identifier)('property')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('currently')
        PodIdentifierImpl(Perl5 POD: identifier)('supports')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('Named')
        PodIdentifierImpl(Perl5 POD: identifier)('Sequences')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('which')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('sequence')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('code')
        PodIdentifierImpl(Perl5 POD: identifier)('points')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('given')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PodIdentifierImpl(Perl5 POD: identifier)('generally')
        PodIdentifierImpl(Perl5 POD: identifier)('treated')
        PodIdentifierImpl(Perl5 POD: identifier)('as')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('single')
        PodIdentifierImpl(Perl5 POD: identifier)('entity')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: ()('(')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('supports')
        PodIdentifierImpl(Perl5 POD: identifier)('these')
        PodIdentifierImpl(Perl5 POD: identifier)('via')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PsiPodFormatCodeImpl(Perl5 POD: POD_FORMAT_CODE)
          PsiElement(Perl5 POD: C)('C')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiElement(Perl5 POD: \)('\')
            PodIdentifierImpl(Perl5 POD: identifier)('N')
            PsiElement(Perl5 POD: {)('{')
            PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: number)('.')
            PsiElement(Perl5 POD: })('}')
          PsiElement(Perl5 POD: >)('>')
        PodIdentifierImpl(Perl5 POD: identifier)('double')
        PsiElement(Perl5 POD: symbol)('-')
        PodIdentifierImpl(Perl5 POD: identifier)('quotish')
        PodIdentifierImpl(Perl5 POD: identifier)('construct')
        PsiElement(Perl5 POD: symbol)(',')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('charnames')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('charnames')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('string_vianame')
              PsiElement(Perl5 POD: ()('(')
              PodIdentifierImpl(Perl5 POD: identifier)('name')
              PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('and')
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: :)(':')
              PodIdentifierImpl(Perl5 POD: identifier)('UCD')
            PsiElement(Perl5 POD: /)('/')
            PsiLinkSectionImpl(Perl5 POD: LINK_SECTION)
              PodIdentifierImpl(Perl5 POD: identifier)('namedseq')
              PsiElement(Perl5 POD: ()('(')
              PsiElement(Perl5 POD: ))(')')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PodIdentifierImpl(Perl5 POD: identifier)('Below')
        PodIdentifierImpl(Perl5 POD: identifier)('is')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('list')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('files')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('data')
        PodIdentifierImpl(Perl5 POD: identifier)('base')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('Perl')
        PodIdentifierImpl(Perl5 POD: identifier)('doesn')
        PsiElement(Perl5 POD: ')(''')
        PodIdentifierImpl(Perl5 POD: identifier)('t')
        PodIdentifierImpl(Perl5 POD: identifier)('currently')
        PodIdentifierImpl(Perl5 POD: identifier)('use')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('along')
        PodIdentifierImpl(Perl5 POD: identifier)('with')
        PodIdentifierImpl(Perl5 POD: identifier)('very')
        PodIdentifierImpl(Perl5 POD: identifier)('brief')
        PodIdentifierImpl(Perl5 POD: identifier)('descriptions')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('their')
        PodIdentifierImpl(Perl5 POD: identifier)('purposes')
        PsiElement(Perl5 POD: number)('.')
        PodIdentifierImpl(Perl5 POD: identifier)('Some')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('names')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('files')
        PodIdentifierImpl(Perl5 POD: identifier)('have')
        PodIdentifierImpl(Perl5 POD: identifier)('been')
        PodIdentifierImpl(Perl5 POD: identifier)('shortened')
        PodIdentifierImpl(Perl5 POD: identifier)('from')
        PodIdentifierImpl(Perl5 POD: identifier)('those')
        PodIdentifierImpl(Perl5 POD: identifier)('that')
        PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
        PodIdentifierImpl(Perl5 POD: identifier)('uses')
        PsiElement(Perl5 POD: symbol)(',')
        PodIdentifierImpl(Perl5 POD: identifier)('in')
        PodIdentifierImpl(Perl5 POD: identifier)('order')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('allow')
        PodIdentifierImpl(Perl5 POD: identifier)('them')
        PodIdentifierImpl(Perl5 POD: identifier)('to')
        PodIdentifierImpl(Perl5 POD: identifier)('be')
        PodIdentifierImpl(Perl5 POD: identifier)('distinguishable')
        PodIdentifierImpl(Perl5 POD: identifier)('from')
        PodIdentifierImpl(Perl5 POD: identifier)('similarly')
        PodIdentifierImpl(Perl5 POD: identifier)('named')
        PodIdentifierImpl(Perl5 POD: identifier)('files')
        PodIdentifierImpl(Perl5 POD: identifier)('on')
        PodIdentifierImpl(Perl5 POD: identifier)('file')
        PodIdentifierImpl(Perl5 POD: identifier)('systems')
        PodIdentifierImpl(Perl5 POD: identifier)('for')
        PodIdentifierImpl(Perl5 POD: identifier)('which')
        PodIdentifierImpl(Perl5 POD: identifier)('only')
        PodIdentifierImpl(Perl5 POD: identifier)('the')
        PodIdentifierImpl(Perl5 POD: identifier)('first')
        PsiElement(Perl5 POD: number)('8')
        PodIdentifierImpl(Perl5 POD: identifier)('characters')
        PodIdentifierImpl(Perl5 POD: identifier)('of')
        PodIdentifierImpl(Perl5 POD: identifier)('a')
        PodIdentifierImpl(Perl5 POD: identifier)('name')
        PodIdentifierImpl(Perl5 POD: identifier)('are')
        PodIdentifierImpl(Perl5 POD: identifier)('significant')
        PsiElement(Perl5 POD: number)('.')
        PsiElement(Perl5 POD: NL)('\n')
      PsiOverSectionImpl(Perl5 POD: OVER_SECTION)
        PsiElement(Perl5 POD: =over)('=over')
        PsiElement(Perl5 POD: indent_level)('4')
        PsiElement(Perl5 POD: NL)('\n')
        PsiOverSectionContentImpl(Perl5 POD: OVER_SECTION_CONTENT)
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('auxiliary')
                  PsiElement(Perl5 POD: /)('/')
                  PodIdentifierImpl(Perl5 POD: identifier)('GraphemeBreakTest')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('html')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('auxiliary')
                  PsiElement(Perl5 POD: /)('/')
                  PodIdentifierImpl(Perl5 POD: identifier)('LineBreakTest')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('html')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('auxiliary')
                  PsiElement(Perl5 POD: /)('/')
                  PodIdentifierImpl(Perl5 POD: identifier)('SentenceBreakTest')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('html')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('auxiliary')
                  PsiElement(Perl5 POD: /)('/')
                  PodIdentifierImpl(Perl5 POD: identifier)('WordBreakTest')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('html')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Documentation')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('validation')
                PodIdentifierImpl(Perl5 POD: identifier)('Tests')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('BidiCharacterTest')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('BidiTest')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('NormTest')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Validation')
                PodIdentifierImpl(Perl5 POD: identifier)('Tests')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('CJKRadicals')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Maps')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('kRSUnicode')
                PodIdentifierImpl(Perl5 POD: identifier)('property')
                PodIdentifierImpl(Perl5 POD: identifier)('values')
                PodIdentifierImpl(Perl5 POD: identifier)('to')
                PodIdentifierImpl(Perl5 POD: identifier)('corresponding')
                PodIdentifierImpl(Perl5 POD: identifier)('code')
                PodIdentifierImpl(Perl5 POD: identifier)('points')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('EmojiSources')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Maps')
                PodIdentifierImpl(Perl5 POD: identifier)('certain')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PodIdentifierImpl(Perl5 POD: identifier)('code')
                PodIdentifierImpl(Perl5 POD: identifier)('points')
                PodIdentifierImpl(Perl5 POD: identifier)('to')
                PodIdentifierImpl(Perl5 POD: identifier)('their')
                PodIdentifierImpl(Perl5 POD: identifier)('legacy')
                PodIdentifierImpl(Perl5 POD: identifier)('Japanese')
                PodIdentifierImpl(Perl5 POD: identifier)('cell')
                PsiElement(Perl5 POD: symbol)('-')
                PodIdentifierImpl(Perl5 POD: identifier)('phone')
                PodIdentifierImpl(Perl5 POD: identifier)('values')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('extracted')
                  PsiElement(Perl5 POD: /)('/')
                  PodIdentifierImpl(Perl5 POD: identifier)('DName')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('This')
                PodIdentifierImpl(Perl5 POD: identifier)('file')
                PodIdentifierImpl(Perl5 POD: identifier)('adds')
                PodIdentifierImpl(Perl5 POD: identifier)('no')
                PodIdentifierImpl(Perl5 POD: identifier)('new')
                PodIdentifierImpl(Perl5 POD: identifier)('information')
                PodIdentifierImpl(Perl5 POD: identifier)('not')
                PodIdentifierImpl(Perl5 POD: identifier)('already')
                PodIdentifierImpl(Perl5 POD: identifier)('present')
                PodIdentifierImpl(Perl5 POD: identifier)('in')
                PodIdentifierImpl(Perl5 POD: identifier)('other')
                PodIdentifierImpl(Perl5 POD: identifier)('files')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('Index')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Alphabetical')
                PodIdentifierImpl(Perl5 POD: identifier)('index')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PodIdentifierImpl(Perl5 POD: identifier)('characters')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('NamedSqProv')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Named')
                PodIdentifierImpl(Perl5 POD: identifier)('sequences')
                PodIdentifierImpl(Perl5 POD: identifier)('proposed')
                PodIdentifierImpl(Perl5 POD: identifier)('for')
                PodIdentifierImpl(Perl5 POD: identifier)('inclusion')
                PodIdentifierImpl(Perl5 POD: identifier)('in')
                PodIdentifierImpl(Perl5 POD: identifier)('a')
                PodIdentifierImpl(Perl5 POD: identifier)('later')
                PodIdentifierImpl(Perl5 POD: identifier)('version')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PodIdentifierImpl(Perl5 POD: identifier)('Standard')
                PsiElement(Perl5 POD: symbol)(';')
                PodIdentifierImpl(Perl5 POD: identifier)('if')
                PodIdentifierImpl(Perl5 POD: identifier)('you')
                PodIdentifierImpl(Perl5 POD: identifier)('need')
                PodIdentifierImpl(Perl5 POD: identifier)('them')
                PodIdentifierImpl(Perl5 POD: identifier)('now')
                PsiElement(Perl5 POD: symbol)(',')
                PodIdentifierImpl(Perl5 POD: identifier)('you')
                PodIdentifierImpl(Perl5 POD: identifier)('can')
                PodIdentifierImpl(Perl5 POD: identifier)('append')
                PodIdentifierImpl(Perl5 POD: identifier)('this')
                PodIdentifierImpl(Perl5 POD: identifier)('file')
                PodIdentifierImpl(Perl5 POD: identifier)('to')
                PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                  PsiElement(Perl5 POD: F)('F')
                  PsiElement(Perl5 POD: <)('<')
                  PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                    PodIdentifierImpl(Perl5 POD: identifier)('NamedSequences')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('txt')
                  PsiElement(Perl5 POD: >)('>')
                PodIdentifierImpl(Perl5 POD: identifier)('and')
                PodIdentifierImpl(Perl5 POD: identifier)('recompile')
                PodIdentifierImpl(Perl5 POD: identifier)('perl')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('NamesList')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('html')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Describes')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('format')
                PodIdentifierImpl(Perl5 POD: identifier)('and')
                PodIdentifierImpl(Perl5 POD: identifier)('contents')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                  PsiElement(Perl5 POD: F)('F')
                  PsiElement(Perl5 POD: <)('<')
                  PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                    PodIdentifierImpl(Perl5 POD: identifier)('NamesList')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('txt')
                  PsiElement(Perl5 POD: >)('>')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('NamesList')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Annotated')
                PodIdentifierImpl(Perl5 POD: identifier)('list')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('characters')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('NormalizationCorrections')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Documentation')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('corrections')
                PodIdentifierImpl(Perl5 POD: identifier)('already')
                PodIdentifierImpl(Perl5 POD: identifier)('incorporated')
                PodIdentifierImpl(Perl5 POD: identifier)('into')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PodIdentifierImpl(Perl5 POD: identifier)('data')
                PodIdentifierImpl(Perl5 POD: identifier)('base')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('NushuSources')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Specifies')
                PodIdentifierImpl(Perl5 POD: identifier)('source')
                PodIdentifierImpl(Perl5 POD: identifier)('material')
                PodIdentifierImpl(Perl5 POD: identifier)('for')
                PodIdentifierImpl(Perl5 POD: identifier)('Nushu')
                PodIdentifierImpl(Perl5 POD: identifier)('characters')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('ReadMe')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Documentation')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('StandardizedVariants')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('html')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Obsoleted')
                PodIdentifierImpl(Perl5 POD: identifier)('as')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PsiElement(Perl5 POD: number)('9.0')
                PsiElement(Perl5 POD: symbol)(',')
                PodIdentifierImpl(Perl5 POD: identifier)('but')
                PodIdentifierImpl(Perl5 POD: identifier)('previously')
                PodIdentifierImpl(Perl5 POD: identifier)('provided')
                PodIdentifierImpl(Perl5 POD: identifier)('a')
                PodIdentifierImpl(Perl5 POD: identifier)('visual')
                PodIdentifierImpl(Perl5 POD: identifier)('display')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('standard')
                PodIdentifierImpl(Perl5 POD: identifier)('variant')
                PodIdentifierImpl(Perl5 POD: identifier)('sequences')
                PodIdentifierImpl(Perl5 POD: identifier)('derived')
                PodIdentifierImpl(Perl5 POD: identifier)('from')
                PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                  PsiElement(Perl5 POD: F)('F')
                  PsiElement(Perl5 POD: <)('<')
                  PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                    PodIdentifierImpl(Perl5 POD: identifier)('StandardizedVariants')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('txt')
                  PsiElement(Perl5 POD: >)('>')
                PsiElement(Perl5 POD: number)('.')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('StandardizedVariants')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Certain')
                PodIdentifierImpl(Perl5 POD: identifier)('glyph')
                PodIdentifierImpl(Perl5 POD: identifier)('variations')
                PodIdentifierImpl(Perl5 POD: identifier)('for')
                PodIdentifierImpl(Perl5 POD: identifier)('character')
                PodIdentifierImpl(Perl5 POD: identifier)('display')
                PodIdentifierImpl(Perl5 POD: identifier)('are')
                PodIdentifierImpl(Perl5 POD: identifier)('standardized')
                PsiElement(Perl5 POD: number)('.')
                PodIdentifierImpl(Perl5 POD: identifier)('This')
                PodIdentifierImpl(Perl5 POD: identifier)('lists')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('non')
                PsiElement(Perl5 POD: symbol)('-')
                PodIdentifierImpl(Perl5 POD: identifier)('Unihan')
                PodIdentifierImpl(Perl5 POD: identifier)('ones')
                PsiElement(Perl5 POD: symbol)(';')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('Unihan')
                PodIdentifierImpl(Perl5 POD: identifier)('ones')
                PodIdentifierImpl(Perl5 POD: identifier)('are')
                PodIdentifierImpl(Perl5 POD: identifier)('also')
                PodIdentifierImpl(Perl5 POD: identifier)('not')
                PodIdentifierImpl(Perl5 POD: identifier)('used')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('Perl')
                PsiElement(Perl5 POD: symbol)(',')
                PodIdentifierImpl(Perl5 POD: identifier)('and')
                PodIdentifierImpl(Perl5 POD: identifier)('are')
                PodIdentifierImpl(Perl5 POD: identifier)('in')
                PodIdentifierImpl(Perl5 POD: identifier)('a')
                PodIdentifierImpl(Perl5 POD: identifier)('separate')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PodIdentifierImpl(Perl5 POD: identifier)('data')
                PodIdentifierImpl(Perl5 POD: identifier)('base')
                PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
                  PsiElement(Perl5 POD: L)('L')
                  PsiElement(Perl5 POD: <)('<')
                  PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                    PsiLinkUrlImpl(Perl5 POD: LINK_URL)
                      PodIdentifierImpl(Perl5 POD: identifier)('http')
                      PsiElement(Perl5 POD: :)(':')
                      PsiElement(Perl5 POD: /)('/')
                      PsiElement(Perl5 POD: /)('/')
                      PodIdentifierImpl(Perl5 POD: identifier)('www')
                      PsiElement(Perl5 POD: number)('.')
                      PodIdentifierImpl(Perl5 POD: identifier)('unicode')
                      PsiElement(Perl5 POD: number)('.')
                      PodIdentifierImpl(Perl5 POD: identifier)('org')
                      PsiElement(Perl5 POD: /)('/')
                      PodIdentifierImpl(Perl5 POD: identifier)('ivd')
                  PsiElement(Perl5 POD: >)('>')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('TangutSources')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Specifies')
                PodIdentifierImpl(Perl5 POD: identifier)('source')
                PodIdentifierImpl(Perl5 POD: identifier)('mappings')
                PodIdentifierImpl(Perl5 POD: identifier)('for')
                PodIdentifierImpl(Perl5 POD: identifier)('Tangut')
                PodIdentifierImpl(Perl5 POD: identifier)('ideographs')
                PodIdentifierImpl(Perl5 POD: identifier)('and')
                PodIdentifierImpl(Perl5 POD: identifier)('components')
                PsiElement(Perl5 POD: number)('.')
                PodIdentifierImpl(Perl5 POD: identifier)('This')
                PodIdentifierImpl(Perl5 POD: identifier)('data')
                PodIdentifierImpl(Perl5 POD: identifier)('file')
                PodIdentifierImpl(Perl5 POD: identifier)('also')
                PodIdentifierImpl(Perl5 POD: identifier)('includes')
                PodIdentifierImpl(Perl5 POD: identifier)('informative')
                PodIdentifierImpl(Perl5 POD: identifier)('radical')
                PsiElement(Perl5 POD: symbol)('-')
                PodIdentifierImpl(Perl5 POD: identifier)('stroke')
                PodIdentifierImpl(Perl5 POD: identifier)('values')
                PodIdentifierImpl(Perl5 POD: identifier)('that')
                PodIdentifierImpl(Perl5 POD: identifier)('are')
                PodIdentifierImpl(Perl5 POD: identifier)('used')
                PodIdentifierImpl(Perl5 POD: identifier)('internally')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('USourceData')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('txt')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Documentation')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('status')
                PodIdentifierImpl(Perl5 POD: identifier)('and')
                PodIdentifierImpl(Perl5 POD: identifier)('cross')
                PodIdentifierImpl(Perl5 POD: identifier)('reference')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('proposals')
                PodIdentifierImpl(Perl5 POD: identifier)('for')
                PodIdentifierImpl(Perl5 POD: identifier)('encoding')
                PodIdentifierImpl(Perl5 POD: identifier)('by')
                PodIdentifierImpl(Perl5 POD: identifier)('Unicode')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('Unihan')
                PodIdentifierImpl(Perl5 POD: identifier)('characters')
                PsiElement(Perl5 POD: NL)('\n')
          PsiItemSectionImpl(Perl5 POD: ITEM_SECTION)
            PsiElement(Perl5 POD: =item)('=item')
            PsiItemSectionTitleImpl(Perl5 POD: ITEM_SECTION_TITLE)
              PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                PsiElement(Perl5 POD: F)('F')
                PsiElement(Perl5 POD: <)('<')
                PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                  PodIdentifierImpl(Perl5 POD: identifier)('USourceGlyphs')
                  PsiElement(Perl5 POD: number)('.')
                  PodIdentifierImpl(Perl5 POD: identifier)('pdf')
                PsiElement(Perl5 POD: >)('>')
            PsiElement(Perl5 POD: NL)('\n')
            PsiItemSectionContentImpl(Perl5 POD: ITEM_SECTION_CONTENT)
              PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
                PodIdentifierImpl(Perl5 POD: identifier)('Pictures')
                PodIdentifierImpl(Perl5 POD: identifier)('of')
                PodIdentifierImpl(Perl5 POD: identifier)('the')
                PodIdentifierImpl(Perl5 POD: identifier)('characters')
                PodIdentifierImpl(Perl5 POD: identifier)('in')
                PsiPodFormatFileImpl(Perl5 POD: POD_FORMAT_FILE)
                  PsiElement(Perl5 POD: F)('F')
                  PsiElement(Perl5 POD: <)('<')
                  PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
                    PodIdentifierImpl(Perl5 POD: identifier)('USourceData')
                    PsiElement(Perl5 POD: number)('.')
                    PodIdentifierImpl(Perl5 POD: identifier)('txt')
                  PsiElement(Perl5 POD: >)('>')
                PsiElement(Perl5 POD: NL)('\n')
        PsiElement(Perl5 POD: =back)('=back')
        PsiElement(Perl5 POD: NL)('\n')
  PsiHead1SectionImpl(Perl5 POD: HEAD_1_SECTION)
    PsiElement(Perl5 POD: =head1)('=head1')
    PsiSectionTitleImpl(Perl5 POD: SECTION_TITLE)
      PodIdentifierImpl(Perl5 POD: identifier)('SEE')
      PodIdentifierImpl(Perl5 POD: identifier)('ALSO')
    PsiElement(Perl5 POD: NL)('\n')
    PsiHead1SectionContentImpl(Perl5 POD: HEAD_1_SECTION_CONTENT)
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkUrlImpl(Perl5 POD: LINK_URL)
              PodIdentifierImpl(Perl5 POD: identifier)('http')
              PsiElement(Perl5 POD: :)(':')
              PsiElement(Perl5 POD: /)('/')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('www')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('unicode')
              PsiElement(Perl5 POD: number)('.')
              PodIdentifierImpl(Perl5 POD: identifier)('org')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('reports')
              PsiElement(Perl5 POD: /)('/')
              PodIdentifierImpl(Perl5 POD: identifier)('tr44')
              PsiElement(Perl5 POD: /)('/')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('perlrecharclass')
          PsiElement(Perl5 POD: >)('>')
        PsiElement(Perl5 POD: NL)('\n')
      PsiPodParagraphImpl(Perl5 POD: POD_PARAGRAPH)
        PsiPodFormatLinkImpl(Perl5 POD: POD_FORMAT_LINK)
          PsiElement(Perl5 POD: L)('L')
          PsiElement(Perl5 POD: <)('<')
          PsiFormattingSectionContentImpl(Perl5 POD: FORMATTING_SECTION_CONTENT)
            PsiLinkNameImpl(Perl5 POD: LINK_NAME)
              PodIdentifierImpl(Perl5 POD: identifier)('perlunicode')
          PsiElement(Perl5 POD: >)('>')