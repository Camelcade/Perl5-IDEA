# https://metacpan.org/pod/Exception::Class::TryCatch
    PERL_COMMENT => DEFAULT_LINE_COMMENT
say
    PERL_KEYWORD => DEFAULT_KEYWORD
'
    PERL_SQ_STRING => DEFAULT_STRING
hi
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
use
    PERL_KEYWORD => DEFAULT_KEYWORD
Exception::Class::TryCatch
    PERL_PACKAGE => DEFAULT_CLASS_NAME => DEFAULT_IDENTIFIER => TEXT
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
# simple usage of catch()
    PERL_COMMENT => DEFAULT_LINE_COMMENT
eval
    PERL_KEYWORD => DEFAULT_KEYWORD
{
    PERL_BRACES => DEFAULT_BRACES
Exception::Class::
    PERL_PACKAGE => DEFAULT_CLASS_NAME => DEFAULT_IDENTIFIER => TEXT
Base
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
->
    PERL_DEREFERENCE => DEFAULT_OPERATION_SIGN
throw
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
'
    PERL_SQ_STRING => DEFAULT_STRING
error
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
)
    PERL_PARENTESS => DEFAULT_PARENTHS
}
    PERL_BRACES => DEFAULT_BRACES
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
catch
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
my
    PERL_KEYWORD => DEFAULT_KEYWORD
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
and
    PERL_OPERATOR => DEFAULT_OPERATION_SIGN
warn
    PERL_SUB_BUILTIN => PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
->
    PERL_DEREFERENCE => DEFAULT_OPERATION_SIGN
error
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
# catching only certain types or else rethrowing
    PERL_COMMENT => DEFAULT_LINE_COMMENT
eval
    PERL_KEYWORD => DEFAULT_KEYWORD
{
    PERL_BRACES => DEFAULT_BRACES
Exception::Class::Base::
    PERL_PACKAGE => DEFAULT_CLASS_NAME => DEFAULT_IDENTIFIER => TEXT
SubClass
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
->
    PERL_DEREFERENCE => DEFAULT_OPERATION_SIGN
throw
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
'
    PERL_SQ_STRING => DEFAULT_STRING
error
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
)
    PERL_PARENTESS => DEFAULT_PARENTHS
}
    PERL_BRACES => DEFAULT_BRACES
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
catch
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
my
    PERL_KEYWORD => DEFAULT_KEYWORD
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
,
    PERL_COMMA => DEFAULT_COMMA
[
    PERL_BRACKETS => DEFAULT_BRACKETS
'
    PERL_SQ_STRING => DEFAULT_STRING
Exception::Class::Base
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
,
    PERL_COMMA => DEFAULT_COMMA
'
    PERL_SQ_STRING => DEFAULT_STRING
Other::Exception
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
]
    PERL_BRACKETS => DEFAULT_BRACKETS
)
    PERL_PARENTESS => DEFAULT_PARENTHS
and
    PERL_OPERATOR => DEFAULT_OPERATION_SIGN
warn
    PERL_SUB_BUILTIN => PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
->
    PERL_DEREFERENCE => DEFAULT_OPERATION_SIGN
error
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
# catching and handling different types of errors
    PERL_COMMENT => DEFAULT_LINE_COMMENT
eval
    PERL_KEYWORD => DEFAULT_KEYWORD
{
    PERL_BRACES => DEFAULT_BRACES
Exception::Class::
    PERL_PACKAGE => DEFAULT_CLASS_NAME => DEFAULT_IDENTIFIER => TEXT
Base
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
->
    PERL_DEREFERENCE => DEFAULT_OPERATION_SIGN
throw
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
'
    PERL_SQ_STRING => DEFAULT_STRING
error
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
)
    PERL_PARENTESS => DEFAULT_PARENTHS
}
    PERL_BRACES => DEFAULT_BRACES
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
if
    PERL_KEYWORD => DEFAULT_KEYWORD
(
    PERL_PARENTESS => DEFAULT_PARENTHS
catch
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
my
    PERL_KEYWORD => DEFAULT_KEYWORD
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
)
    PERL_PARENTESS => DEFAULT_PARENTHS
{
    PERL_BRACES => DEFAULT_BRACES
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
->
    PERL_DEREFERENCE => DEFAULT_OPERATION_SIGN
isa
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
'
    PERL_SQ_STRING => DEFAULT_STRING
this
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
)
    PERL_PARENTESS => DEFAULT_PARENTHS
and
    PERL_OPERATOR => DEFAULT_OPERATION_SIGN
do
    PERL_KEYWORD => DEFAULT_KEYWORD
{
    PERL_BRACES => DEFAULT_BRACES
handle_this
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
)
    PERL_PARENTESS => DEFAULT_PARENTHS
}
    PERL_BRACES => DEFAULT_BRACES
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
->
    PERL_DEREFERENCE => DEFAULT_OPERATION_SIGN
isa
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
'
    PERL_SQ_STRING => DEFAULT_STRING
that
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
)
    PERL_PARENTESS => DEFAULT_PARENTHS
and
    PERL_OPERATOR => DEFAULT_OPERATION_SIGN
do
    PERL_KEYWORD => DEFAULT_KEYWORD
{
    PERL_BRACES => DEFAULT_BRACES
handle_that
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
)
    PERL_PARENTESS => DEFAULT_PARENTHS
}
    PERL_BRACES => DEFAULT_BRACES
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
}
    PERL_BRACES => DEFAULT_BRACES
# use "try eval" to push exceptions onto a stack to catch later
    PERL_COMMENT => DEFAULT_LINE_COMMENT
try
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
eval
    PERL_KEYWORD => DEFAULT_KEYWORD
{
    PERL_BRACES => DEFAULT_BRACES
Exception::Class::
    PERL_PACKAGE => DEFAULT_CLASS_NAME => DEFAULT_IDENTIFIER => TEXT
Base
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
->
    PERL_DEREFERENCE => DEFAULT_OPERATION_SIGN
throw
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
(
    PERL_PARENTESS => DEFAULT_PARENTHS
'
    PERL_SQ_STRING => DEFAULT_STRING
error
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
)
    PERL_PARENTESS => DEFAULT_PARENTHS
}
    PERL_BRACES => DEFAULT_BRACES
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
do
    PERL_KEYWORD => DEFAULT_KEYWORD
{
    PERL_BRACES => DEFAULT_BRACES
# cleanup that might use "try/catch" again
    PERL_COMMENT => DEFAULT_LINE_COMMENT
}
    PERL_BRACES => DEFAULT_BRACES
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
catch
    PERL_SUB => DEFAULT_FUNCTION_CALL => DEFAULT_IDENTIFIER => TEXT
my
    PERL_KEYWORD => DEFAULT_KEYWORD
$
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
err
    PERL_SCALAR => DEFAULT_IDENTIFIER => TEXT
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON
# catches a matching "try"
    PERL_COMMENT => DEFAULT_LINE_COMMENT
say
    PERL_KEYWORD => DEFAULT_KEYWORD
'
    PERL_SQ_STRING => DEFAULT_STRING
buy
    PERL_SQ_STRING => DEFAULT_STRING
'
    PERL_SQ_STRING => DEFAULT_STRING
;
    PERL_SEMICOLON => DEFAULT_SEMICOLON