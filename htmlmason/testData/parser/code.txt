Subtree: HTML (HTML)
HtmlFile:code.mas
  HTML_DOCUMENT
    XML_PROLOG
      <empty list>
    HTML_TAG
      PsiElement(XML_START_TAG_START)('<')
      PsiElement(XML_NAME)('html')
      PsiElement(XML_TAG_END)('>')
      XML_TEXT
        PsiElement(XML_WHITE_SPACE)('\n\n')
        PsiElement(XML_DATA_CHARACTERS)('Hello')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $noun %>')
        PsiElement(XML_DATA_CHARACTERS)(',')
      HTML_TAG
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n\n<% # This is a single-line comment %>\n\n')
        PsiElement(XML_START_TAG_START)('<')
        PsiElement(XML_NAME)('head')
        PsiElement(XML_TAG_END)('>')
        HTML_TAG
          PsiElement(XML_START_TAG_START)('<')
          PsiElement(XML_NAME)('title')
          PsiElement(XML_TAG_END)('>')
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('<% $headline %>')
          PsiElement(XML_END_TAG_START)('</')
          PsiElement(XML_NAME)('title')
          PsiElement(XML_TAG_END)('>')
        PsiElement(XML_END_TAG_START)('</')
        PsiElement(XML_NAME)('head')
        PsiElement(XML_TAG_END)('>')
      XML_TEXT
        PsiElement(XML_WHITE_SPACE)('\n')
      HTML_TAG
        PsiElement(XML_START_TAG_START)('<')
        PsiElement(XML_NAME)('body')
        PsiElement(XML_TAG_END)('>')
        XML_TEXT
          PsiElement(XML_WHITE_SPACE)('\n')
        HTML_TAG
          PsiElement(XML_START_TAG_START)('<')
          PsiElement(XML_NAME)('h2')
          PsiElement(XML_TAG_END)('>')
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('<% $headline %>')
          PsiElement(XML_END_TAG_START)('</')
          PsiElement(XML_NAME)('h2')
          PsiElement(XML_TAG_END)('>')
        XML_TEXT
          PsiElement(XML_WHITE_SPACE)('\n')
        HTML_TAG
          PsiElement(XML_START_TAG_START)('<')
          PsiElement(XML_NAME)('p')
          PsiElement(XML_TAG_END)('>')
          XML_TEXT
            PsiElement(XML_DATA_CHARACTERS)('By')
            PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $author %>')
            PsiElement(XML_DATA_CHARACTERS)(',')
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $date %>')
          PsiElement(XML_END_TAG_START)('</')
          PsiElement(XML_NAME)('p')
          PsiElement(XML_TAG_END)('>')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n\n<% $body %>\n\n')
        PsiElement(XML_END_TAG_START)('</')
        PsiElement(XML_NAME)('body')
        PsiElement(XML_TAG_END)('>')
      XML_TEXT
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n\n% if ( $time[2] < 12 ) {\n')
        PsiElement(XML_DATA_CHARACTERS)('good')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('morning.')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% } else {\n')
        PsiElement(XML_DATA_CHARACTERS)('good')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('afternoon.')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% }\n\n% my $ua = $r->header_in('User-Agent');\n% if ($ua =~ /msie/i) {\n')
        PsiElement(XML_DATA_CHARACTERS)('Welcome,')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('Internet')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('Explorer')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('users')
        PsiElement(XML_WHITE_SPACE)('\n')
        PsiElement(XML_DATA_CHARACTERS)('...')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% } elsif ($ua =~ /mozilla/i) {\n')
        PsiElement(XML_DATA_CHARACTERS)('Welcome,')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('Netscape')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('users')
        PsiElement(XML_WHITE_SPACE)('\n')
        PsiElement(XML_DATA_CHARACTERS)('...')
      HTML_TAG
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% }\n\n')
        PsiElement(XML_START_TAG_START)('<')
        PsiElement(XML_NAME)('ul')
        PsiElement(XML_TAG_END)('>')
        HTML_TAG
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% foreach $item (@list) {\n')
          PsiElement(XML_START_TAG_START)('<')
          PsiElement(XML_NAME)('li')
          PsiElement(XML_TAG_END)('>')
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('<% $item %>')
          PsiElement(XML_END_TAG_START)('</')
          PsiElement(XML_NAME)('li')
          PsiElement(XML_TAG_END)('>')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% }\n')
        PsiElement(XML_END_TAG_START)('</')
        PsiElement(XML_NAME)('ul')
        PsiElement(XML_TAG_END)('>')
      XML_TEXT
        PsiElement(XML_WHITE_SPACE)('\n\n')
      HTML_TAG
        PsiElement(XML_START_TAG_START)('<')
        PsiElement(XML_NAME)('ul')
        PsiElement(XML_TAG_END)('>')
        HTML_TAG
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% while (my ($key,$value) = each(%ENV)) {\n')
          PsiElement(XML_START_TAG_START)('<')
          PsiElement(XML_NAME)('li')
          PsiElement(XML_TAG_END)('>')
          XML_TEXT
            PsiElement(XML_WHITE_SPACE)('\n')
          HTML_TAG
            PsiElement(XML_START_TAG_START)('<')
            PsiElement(XML_NAME)('b')
            PsiElement(XML_TAG_END)('>')
            PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('<% $key %>')
            PsiElement(XML_END_TAG_START)('</')
            PsiElement(XML_NAME)('b')
            PsiElement(XML_TAG_END)('>')
          XML_TEXT
            PsiElement(XML_DATA_CHARACTERS)(':')
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $value %>\n')
          PsiElement(XML_END_TAG_START)('</')
          PsiElement(XML_NAME)('li')
          PsiElement(XML_TAG_END)('>')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% }\n')
        PsiElement(XML_END_TAG_START)('</')
        PsiElement(XML_NAME)('ul')
        PsiElement(XML_TAG_END)('>')
      XML_TEXT
        PsiElement(XML_WHITE_SPACE)('\n\n')
      HTML_TAG
        PsiElement(XML_START_TAG_START)('<')
        PsiElement(XML_NAME)('table')
        PsiElement(XML_TAG_END)('>')
        HTML_TAG
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% foreach my $h (@loh) {\n')
          PsiElement(XML_START_TAG_START)('<')
          PsiElement(XML_NAME)('tr')
          PsiElement(XML_TAG_END)('>')
          XML_TEXT
            PsiElement(XML_WHITE_SPACE)('\n')
          HTML_TAG
            PsiElement(XML_START_TAG_START)('<')
            PsiElement(XML_NAME)('td')
            PsiElement(XML_TAG_END)('>')
            PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('<% $h->{foo} %>')
            PsiElement(XML_END_TAG_START)('</')
            PsiElement(XML_NAME)('td')
            PsiElement(XML_TAG_END)('>')
          XML_TEXT
            PsiElement(XML_WHITE_SPACE)('\n')
          HTML_TAG
            PsiElement(XML_START_TAG_START)('<')
            PsiElement(XML_NAME)('td')
            XML_ATTRIBUTE
              PsiElement(XML_NAME)('bgcolor')
              PsiElement(XML_EQ)('=')
              XML_ATTRIBUTE_VALUE
                PsiElement(XML_ATTRIBUTE_VALUE_TOKEN)('#ee0000')
            PsiElement(XML_TAG_END)('>')
            PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('<% $h->{bar} %>')
            PsiElement(XML_END_TAG_START)('</')
            PsiElement(XML_NAME)('td')
            PsiElement(XML_TAG_END)('>')
          XML_TEXT
            PsiElement(XML_WHITE_SPACE)('\n')
          HTML_TAG
            PsiElement(XML_START_TAG_START)('<')
            PsiElement(XML_NAME)('td')
            PsiElement(XML_TAG_END)('>')
            PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('<% $h->{baz} %>')
            PsiElement(XML_END_TAG_START)('</')
            PsiElement(XML_NAME)('td')
            PsiElement(XML_TAG_END)('>')
          XML_TEXT
            PsiElement(XML_WHITE_SPACE)('\n')
          PsiElement(XML_END_TAG_START)('</')
          PsiElement(XML_NAME)('tr')
          PsiElement(XML_TAG_END)('>')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n% }\n')
        PsiElement(XML_END_TAG_START)('</')
        PsiElement(XML_NAME)('table')
        PsiElement(XML_TAG_END)('>')
      XML_TEXT
        PsiElement(XML_WHITE_SPACE)('\n\n')
        PsiElement(XML_DATA_CHARACTERS)('Dear')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $name %>')
        PsiElement(XML_DATA_CHARACTERS)(':')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('We')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('will')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('come')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('to')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('your')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('house')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('at')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $address %> ')
        PsiElement(XML_DATA_CHARACTERS)('in')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('the')
        PsiElement(XML_WHITE_SPACE)('\n')
        PsiElement(XML_DATA_CHARACTERS)('fair')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('city')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('of')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $city %> ')
        PsiElement(XML_DATA_CHARACTERS)('to')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('deliver')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('your')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('$')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('<% $amount %> ')
        PsiElement(XML_DATA_CHARACTERS)('dollar')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('prize!')
        PsiElement(XML_WHITE_SPACE)('\n\n')
        PsiElement(XML_DATA_CHARACTERS)('The')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('answer')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('is')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% ($y+8) % 2 %>')
        PsiElement(XML_DATA_CHARACTERS)('.')
        PsiElement(XML_WHITE_SPACE)('\n\n')
        PsiElement(XML_DATA_CHARACTERS)('You')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('are')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $age < 18 ? 'not' : '' %> ')
        PsiElement(XML_DATA_CHARACTERS)('permitted')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('to')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('enter')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('this')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('site.')
        PsiElement(XML_WHITE_SPACE)('\n\n')
      PsiElement(XML_END_TAG_START)('</')
      PsiElement(XML_NAME)('html')
      PsiElement(XML_TAG_END)('>')
--------------------------------------------------------------------------------
Subtree: HTML::Mason Templating Language (HTML::Mason Templating Language)
HTML::Mason component
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<html>\n\nHello')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('noun')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)(',')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiComment(Perl5: COMMENT_LINE)('# This is a single-line comment ')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<head><title>')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('headline')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</title></head>\n<body>\n<h2>')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('headline')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</h2>\n<p>By')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('author')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)(',')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('date')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</p>')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('body')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</body>')
  PsiComment(HTML::Mason: %)('%')
  PsiPerlIfCompoundImpl(Perl5: IF_COMPOUND)
    PsiElement(Perl5: if)('if')
    PsiPerlConditionalBlockImpl(Perl5: CONDITIONAL_BLOCK)
      PsiPerlConditionExprImpl(Perl5: CONDITION_EXPR)
        PsiElement(Perl5: ()('(')
        PsiPerlCompareExprImpl(Perl5: COMPARE_EXPR)
          PsiPerlArrayElementImpl(Perl5: ARRAY_ELEMENT)
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('time')
            PsiPerlArrayIndexImpl(Perl5: ARRAY_INDEX)
              PsiElement(Perl5: [)('[')
              PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                PsiElement(Perl5: NUMBER)('2')
              PsiElement(Perl5: ])(']')
          PsiElement(Perl5: <)('<')
          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
            PsiElement(Perl5: NUMBER)('12')
        PsiElement(Perl5: ))(')')
      PsiPerlBlockImpl(Perl5: BLOCK)
        PsiElement(Perl5: {)('{')
        PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('good morning.')
        PsiComment(HTML::Mason: %)('%')
        PsiElement(Perl5: })('}')
    PsiElement(Perl5: else)('else')
    PsiPerlUnconditionalBlockImpl(Perl5: UNCONDITIONAL_BLOCK)
      PsiPerlBlockImpl(Perl5: BLOCK)
        PsiElement(Perl5: {)('{')
        PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('good afternoon.')
        PsiComment(HTML::Mason: %)('%')
        PsiElement(Perl5: })('}')
  PsiComment(HTML::Mason: %)('%')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)
      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)
        PsiElement(Perl5: my)('my')
        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('ua')
      PsiElement(Perl5: =)('=')
      PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('r')
        PsiElement(Perl5: ->)('->')
        PsiPerlNestedCallImpl(Perl5: NESTED_CALL)
          PsiPerlMethodImpl(Perl5: METHOD)
            PerlSubNameElementImpl(Perl5: subname)('header_in')
          PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
            PsiElement(Perl5: ()('(')
            PsiPerlStringSqImpl(Perl5: STRING_SQ)
              PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
              PerlStringContentElementImpl(Perl5: STRING_CONTENT)('User-Agent')
              PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
            PsiElement(Perl5: ))(')')
    PsiElement(Perl5: ;)(';')
  PsiComment(HTML::Mason: %)('%')
  PsiPerlIfCompoundImpl(Perl5: IF_COMPOUND)
    PsiElement(Perl5: if)('if')
    PsiPerlConditionalBlockImpl(Perl5: CONDITIONAL_BLOCK)
      PsiPerlConditionExprImpl(Perl5: CONDITION_EXPR)
        PsiElement(Perl5: ()('(')
        PsiPerlRegexExprImpl(Perl5: REGEX_EXPR)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('ua')
          PsiElement(Perl5: =~)('=~')
          PsiPerlMatchRegexImpl(Perl5: MATCH_REGEX)
            PsiElement(Perl5: r{)('/')
            PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)
              PsiElement(Perl5: regex)('msie')
            PsiElement(Perl5: r})('/')
            PsiPerlPerlRegexModifiersImpl(Perl5: PERL_REGEX_MODIFIERS)
              PsiElement(Perl5: /m)('i')
        PsiElement(Perl5: ))(')')
      PsiPerlBlockImpl(Perl5: BLOCK)
        PsiElement(Perl5: {)('{')
        PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('Welcome, Internet Explorer users\n...')
        PsiComment(HTML::Mason: %)('%')
        PsiElement(Perl5: })('}')
    PsiElement(Perl5: elsif)('elsif')
    PsiPerlConditionalBlockImpl(Perl5: CONDITIONAL_BLOCK)
      PsiPerlConditionExprImpl(Perl5: CONDITION_EXPR)
        PsiElement(Perl5: ()('(')
        PsiPerlRegexExprImpl(Perl5: REGEX_EXPR)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('ua')
          PsiElement(Perl5: =~)('=~')
          PsiPerlMatchRegexImpl(Perl5: MATCH_REGEX)
            PsiElement(Perl5: r{)('/')
            PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)
              PsiElement(Perl5: regex)('mozilla')
            PsiElement(Perl5: r})('/')
            PsiPerlPerlRegexModifiersImpl(Perl5: PERL_REGEX_MODIFIERS)
              PsiElement(Perl5: /m)('i')
        PsiElement(Perl5: ))(')')
      PsiPerlBlockImpl(Perl5: BLOCK)
        PsiElement(Perl5: {)('{')
        PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('Welcome, Netscape users\n...')
        PsiComment(HTML::Mason: %)('%')
        PsiElement(Perl5: })('}')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<ul>')
  PsiComment(HTML::Mason: %)('%')
  PsiPerlForeachCompoundImpl(Perl5: FOREACH_COMPOUND)
    PsiElement(Perl5: foreach)('foreach')
    PsiPerlForeachIteratorImpl(Perl5: FOREACH_ITERATOR)
      PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
        PsiElement(Perl5: $$)('$')
        PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('item')
    PsiPerlConditionExprImpl(Perl5: CONDITION_EXPR)
      PsiElement(Perl5: ()('(')
      PsiPerlArrayVariableImpl(Perl5: ARRAY_VARIABLE)
        PsiElement(Perl5: $@)('@')
        PerlVariableNameElementImpl(Perl5: ARRAY_NAME)('list')
      PsiElement(Perl5: ))(')')
    PsiPerlBlockImpl(Perl5: BLOCK)
      PsiElement(Perl5: {)('{')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<li>')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiElement(HTML::Mason: <%)('<%')
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('item')
        PsiElement(HTML::Mason: %>)('%>')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</li>')
      PsiComment(HTML::Mason: %)('%')
      PsiElement(Perl5: })('}')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</ul>\n\n<ul>')
  PsiComment(HTML::Mason: %)('%')
  PsiPerlWhileCompoundImpl(Perl5: WHILE_COMPOUND)
    PsiElement(Perl5: while)('while')
    PsiPerlConditionExprImpl(Perl5: CONDITION_EXPR)
      PsiElement(Perl5: ()('(')
      PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)
        PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)
          PsiElement(Perl5: my)('my')
          PsiElement(Perl5: ()('(')
          PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('key')
          PsiElement(Perl5: ,)(',')
          PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('value')
          PsiElement(Perl5: ))(')')
        PsiElement(Perl5: =)('=')
        PsiPerlEachExprImpl(Perl5: EACH_EXPR)
          PsiElement(Perl5: each)('each')
          PsiPerlParenthesisedExprImpl(Perl5: PARENTHESISED_EXPR)
            PsiElement(Perl5: ()('(')
            PsiPerlHashVariableImpl(Perl5: HASH_VARIABLE)
              PsiElement(Perl5: $%)('%')
              PerlVariableNameElementImpl(Perl5: HASH_NAME)('ENV')
            PsiElement(Perl5: ))(')')
      PsiElement(Perl5: ))(')')
    PsiPerlBlockImpl(Perl5: BLOCK)
      PsiElement(Perl5: {)('{')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<li>\n<b>')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiElement(HTML::Mason: <%)('<%')
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('key')
        PsiElement(HTML::Mason: %>)('%>')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</b>:')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiElement(HTML::Mason: <%)('<%')
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('value')
        PsiElement(HTML::Mason: %>)('%>')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</li>')
      PsiComment(HTML::Mason: %)('%')
      PsiElement(Perl5: })('}')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</ul>\n\n<table>')
  PsiComment(HTML::Mason: %)('%')
  PsiPerlForeachCompoundImpl(Perl5: FOREACH_COMPOUND)
    PsiElement(Perl5: foreach)('foreach')
    PsiPerlForeachIteratorImpl(Perl5: FOREACH_ITERATOR)
      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)
        PsiElement(Perl5: my)('my')
        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('h')
    PsiPerlConditionExprImpl(Perl5: CONDITION_EXPR)
      PsiElement(Perl5: ()('(')
      PsiPerlArrayVariableImpl(Perl5: ARRAY_VARIABLE)
        PsiElement(Perl5: $@)('@')
        PerlVariableNameElementImpl(Perl5: ARRAY_NAME)('loh')
      PsiElement(Perl5: ))(')')
    PsiPerlBlockImpl(Perl5: BLOCK)
      PsiElement(Perl5: {)('{')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<tr>\n<td>')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiElement(HTML::Mason: <%)('<%')
        PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('h')
          PsiElement(Perl5: ->)('->')
          PsiPerlHashIndexImpl(Perl5: HASH_INDEX)
            PsiElement(Perl5: {)('{')
            PsiPerlStringBareImpl(Perl5: STRING_BARE)
              PerlStringContentElementImpl(Perl5: STRING_CONTENT)('foo')
            PsiElement(Perl5: })('}')
        PsiElement(HTML::Mason: %>)('%>')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</td>\n<td bgcolor=#ee0000>')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiElement(HTML::Mason: <%)('<%')
        PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('h')
          PsiElement(Perl5: ->)('->')
          PsiPerlHashIndexImpl(Perl5: HASH_INDEX)
            PsiElement(Perl5: {)('{')
            PsiPerlStringBareImpl(Perl5: STRING_BARE)
              PerlStringContentElementImpl(Perl5: STRING_CONTENT)('bar')
            PsiElement(Perl5: })('}')
        PsiElement(HTML::Mason: %>)('%>')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</td>\n<td>')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiElement(HTML::Mason: <%)('<%')
        PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('h')
          PsiElement(Perl5: ->)('->')
          PsiPerlHashIndexImpl(Perl5: HASH_INDEX)
            PsiElement(Perl5: {)('{')
            PsiPerlStringBareImpl(Perl5: STRING_BARE)
              PerlStringContentElementImpl(Perl5: STRING_CONTENT)('baz')
            PsiElement(Perl5: })('}')
        PsiElement(HTML::Mason: %>)('%>')
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</td>\n</tr>')
      PsiComment(HTML::Mason: %)('%')
      PsiElement(Perl5: })('}')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</table>\n\nDear')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('name')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)(': We will come to your house at')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('address')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('in the\nfair city of')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('city')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('to deliver your $')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
      PsiElement(Perl5: $$)('$')
      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('amount')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('dollar prize!\n\nThe answer is')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlMulExprImpl(Perl5: MUL_EXPR)
      PsiPerlParenthesisedExprImpl(Perl5: PARENTHESISED_EXPR)
        PsiElement(Perl5: ()('(')
        PsiPerlAddExprImpl(Perl5: ADD_EXPR)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('y')
          PsiElement(Perl5: +)('+')
          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
            PsiElement(Perl5: NUMBER)('8')
        PsiElement(Perl5: ))(')')
      PsiElement(Perl5: %)('%')
      PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
        PsiElement(Perl5: NUMBER)('2')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('.\n\nYou are')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiElement(HTML::Mason: <%)('<%')
    PsiPerlTernaryExprImpl(Perl5: TERNARY_EXPR)
      PsiPerlCompareExprImpl(Perl5: COMPARE_EXPR)
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('age')
        PsiElement(Perl5: <)('<')
        PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
          PsiElement(Perl5: NUMBER)('18')
      PsiElement(Perl5: ?)('?')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('not')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
      PsiElement(Perl5: :)(':')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(HTML::Mason: %>)('%>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('permitted to enter this site.\n\n</html>')
--------------------------------------------------------------------------------
Subtree: Perl5 POD (Perl5 POD)
POD file
  PsiElement(Perl5 POD: POD_OUTER)('<html>\n\nHello <% $noun %>,\n\n<% # This is a single-line comment %>\n\n<head><title><% $headline %></title></head>\n<body>\n<h2><% $headline %></h2>\n<p>By <% $author %>, <% $date %></p>\n\n<% $body %>\n\n</body>\n\n% if ( $time[2] < 12 ) {\ngood morning.\n% } else {\ngood afternoon.\n% }\n\n% my $ua = $r->header_in('User-Agent');\n% if ($ua =~ /msie/i) {\nWelcome, Internet Explorer users\n...\n% } elsif ($ua =~ /mozilla/i) {\nWelcome, Netscape users\n...\n% }\n\n<ul>\n% foreach $item (@list) {\n<li><% $item %></li>\n% }\n</ul>\n\n<ul>\n% while (my ($key,$value) = each(%ENV)) {\n<li>\n<b><% $key %></b>: <% $value %>\n</li>\n% }\n</ul>\n\n<table>\n% foreach my $h (@loh) {\n<tr>\n<td><% $h->{foo} %></td>\n<td bgcolor=#ee0000><% $h->{bar} %></td>\n<td><% $h->{baz} %></td>\n</tr>\n% }\n</table>\n\nDear <% $name %>: We will come to your house at <% $address %> in the\nfair city of <% $city %> to deliver your $<% $amount %> dollar prize!\n\nThe answer is <% ($y+8) % 2 %>.\n\nYou are <% $age < 18 ? 'not' : '' %> permitted to enter this site.\n\n</html>')
--------------------------------------------------------------------------------
