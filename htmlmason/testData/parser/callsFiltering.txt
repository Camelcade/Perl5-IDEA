Subtree: HTML (HTML)
HtmlFile:callsFiltering.mas
  HTML_DOCUMENT
    XML_PROLOG
      <empty list>
    HTML_TAG
      PsiElement(XML_START_TAG_START)('<')
      PsiElement(XML_NAME)('html')
      PsiElement(XML_TAG_END)('>')
      XML_TEXT
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n\n\n<&| /path/to/comp &> ')
        PsiElement(XML_DATA_CHARACTERS)('this')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('is')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('the')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('content')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n\n </&>\n\n<&| comp, arg1 => 'hi' &> ')
        PsiElement(XML_DATA_CHARACTERS)('filters')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('can')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('take')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('arguments')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' </&>\n<&| comp &> ')
        PsiElement(XML_DATA_CHARACTERS)('content')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('can')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('include')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% "tags" %> ')
        PsiElement(XML_DATA_CHARACTERS)('of')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('all')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('kinds')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' </&>\n<&| comp1 &> ')
        PsiElement(XML_DATA_CHARACTERS)('nesting')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('is')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('also')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <&| comp2 &> ')
        PsiElement(XML_DATA_CHARACTERS)('OK')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' </&> </&>\n<&| SELF:method1 &> ')
        PsiElement(XML_DATA_CHARACTERS)('subcomponents')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('can')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('be')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('filters')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' </&>\n\n<&| "outer" &>\n <&| /inner/comp, arg=>'this' &>\n   <&| .mycomp &>\n      ')
        PsiElement(XML_DATA_CHARACTERS)('Yada')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('yada')
        PsiElement(XML_WHITE_SPACE)(' ')
        PsiElement(XML_DATA_CHARACTERS)('yada')
      HTML_TAG
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n   </& .mycomp >\n </& /inner/comp >\n</&>\n\n% my $var;\n')
        PsiElement(XML_START_TAG_START)('<')
        PsiElement(XML_NAME)('ol')
        PsiElement(XML_TAG_END)('>')
        HTML_TAG
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n<&| list_items , list => \@items, var => \$var &>\n')
          PsiElement(XML_START_TAG_START)('<')
          PsiElement(XML_NAME)('li')
          PsiElement(XML_TAG_END)('>')
          PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)(' <% $var %>')
          PsiElement(XML_END_TAG_START)('</')
          PsiElement(XML_NAME)('li')
          PsiElement(XML_TAG_END)('>')
        PsiElement(HTML::Mason: HTML_MASON_OUTER_ELEMENT_TYPE)('\n</&>\n')
        PsiElement(XML_END_TAG_START)('</')
        PsiElement(XML_NAME)('ol')
        PsiElement(XML_TAG_END)('>')
      XML_TEXT
        PsiElement(XML_WHITE_SPACE)('\n\n')
      PsiElement(XML_END_TAG_START)('</')
      PsiElement(XML_NAME)('html')
      PsiElement(XML_TAG_END)('>')
--------------------------------------------------------------------------------
Subtree: HTML::Mason Templating Language (HTML::Mason Templating Language)
HTML::Mason component
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<html>')
  PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
    PsiElement(HTML::Mason: <&|)('<&|')
    PsiPerlStringBareImpl(Perl5: STRING_BARE)
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)('/path/to/comp')
    PsiElement(HTML::Mason: &>)('&>')
  HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
    PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('this is the content')
  PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
    PsiElement(HTML::Mason: </&)('</&')
    PsiElement(HTML::Mason: >)('>')
  PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
    PsiElement(HTML::Mason: <&|)('<&|')
    PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('comp')
      PsiElement(Perl5: ,)(',')
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('arg1')
      PsiElement(Perl5: =>)('=>')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('hi')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(HTML::Mason: &>)('&>')
  HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
    PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('filters can take arguments')
  PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
    PsiElement(HTML::Mason: </&)('</&')
    PsiElement(HTML::Mason: >)('>')
  PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
    PsiElement(HTML::Mason: <&|)('<&|')
    PsiPerlStringBareImpl(Perl5: STRING_BARE)
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)('comp')
    PsiElement(HTML::Mason: &>)('&>')
  HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
    PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('content can include')
    PsiPerlStatementImpl(Perl5: STATEMENT)
      PsiElement(HTML::Mason: <%)('<%')
      PsiPerlStringDqImpl(Perl5: STRING_DQ)
        PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('tags')
        PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
      PsiElement(HTML::Mason: %>)('%>')
    PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('of all kinds')
  PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
    PsiElement(HTML::Mason: </&)('</&')
    PsiElement(HTML::Mason: >)('>')
  PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
    PsiElement(HTML::Mason: <&|)('<&|')
    PsiPerlStringBareImpl(Perl5: STRING_BARE)
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)('comp1')
    PsiElement(HTML::Mason: &>)('&>')
  HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
    PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('nesting is also')
    PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
      PsiElement(HTML::Mason: <&|)('<&|')
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('comp2')
      PsiElement(HTML::Mason: &>)('&>')
    HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
      PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('OK')
    PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
      PsiElement(HTML::Mason: </&)('</&')
      PsiElement(HTML::Mason: >)('>')
  PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
    PsiElement(HTML::Mason: </&)('</&')
    PsiElement(HTML::Mason: >)('>')
  PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
    PsiElement(HTML::Mason: <&|)('<&|')
    PsiPerlStringBareImpl(Perl5: STRING_BARE)
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)('SELF:method1')
    PsiElement(HTML::Mason: &>)('&>')
  HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
    PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('subcomponents can be filters')
  PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
    PsiElement(HTML::Mason: </&)('</&')
    PsiElement(HTML::Mason: >)('>')
  PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
    PsiElement(HTML::Mason: <&|)('<&|')
    PsiPerlStringDqImpl(Perl5: STRING_DQ)
      PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
      PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('outer')
      PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(HTML::Mason: &>)('&>')
  HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
    PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
      PsiElement(HTML::Mason: <&|)('<&|')
      PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('/inner/comp')
        PsiElement(Perl5: ,)(',')
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('arg')
        PsiElement(Perl5: =>)('=>')
        PsiPerlStringSqImpl(Perl5: STRING_SQ)
          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('this')
          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
      PsiElement(HTML::Mason: &>)('&>')
    HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
      PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
        PsiElement(HTML::Mason: <&|)('<&|')
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('.mycomp')
        PsiElement(HTML::Mason: &>)('&>')
      HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
        PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('Yada yada yada')
      PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
        PsiElement(HTML::Mason: </&)('</&')
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('.mycomp')
        PsiElement(HTML::Mason: >)('>')
    PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
      PsiElement(HTML::Mason: </&)('</&')
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('/inner/comp')
      PsiElement(HTML::Mason: >)('>')
  PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
    PsiElement(HTML::Mason: </&)('</&')
    PsiElement(HTML::Mason: >)('>')
  PsiComment(HTML::Mason: %)('%')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)
      PsiElement(Perl5: my)('my')
      PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('var')
    PsiElement(Perl5: ;)(';')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<ol>')
  PerlCompositeElementImpl(HTML::Mason: HTML_MASON_CALL_STATEMENT)
    PsiElement(HTML::Mason: <&|)('<&|')
    PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('list_items')
      PsiElement(Perl5: ,)(',')
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('list')
      PsiElement(Perl5: =>)('=>')
      PsiPerlRefExprImpl(Perl5: REF_EXPR)
        PsiElement(Perl5: \\)('\')
        PsiPerlArrayVariableImpl(Perl5: ARRAY_VARIABLE)
          PsiElement(Perl5: $@)('@')
          PerlVariableNameElementImpl(Perl5: ARRAY_NAME)('items')
      PsiElement(Perl5: ,)(',')
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('var')
      PsiElement(Perl5: =>)('=>')
      PsiPerlRefExprImpl(Perl5: REF_EXPR)
        PsiElement(Perl5: \\)('\')
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('var')
    PsiElement(HTML::Mason: &>)('&>')
  HTMLMasonCompositeElementImpl(HTML::Mason: HTML_MASON_FILTERED_BLOCK)
    PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('<li>')
    PsiPerlStatementImpl(Perl5: STATEMENT)
      PsiElement(HTML::Mason: <%)('<%')
      PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
        PsiElement(Perl5: $$)('$')
        PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('var')
      PsiElement(HTML::Mason: %>)('%>')
    PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</li>')
  PerlCompositeElementImpl(HTML::Mason: </&HTML::Mason: >)
    PsiElement(HTML::Mason: </&)('</&')
    PsiElement(HTML::Mason: >)('>')
  PsiComment(HTML::Mason: HTML_MASON_TEMPLATE_BLOCK_HTML)('</ol>\n\n</html>')
--------------------------------------------------------------------------------
Subtree: Perl5 POD (Perl5 POD)
POD file
  PsiElement(Perl5 POD: POD_OUTER)('<html>\n\n\n<&| /path/to/comp &> this is the content\n\n </&>\n\n<&| comp, arg1 => 'hi' &> filters can take arguments </&>\n<&| comp &> content can include <% "tags" %> of all kinds </&>\n<&| comp1 &> nesting is also <&| comp2 &> OK </&> </&>\n<&| SELF:method1 &> subcomponents can be filters </&>\n\n<&| "outer" &>\n <&| /inner/comp, arg=>'this' &>\n   <&| .mycomp &>\n      Yada yada yada\n   </& .mycomp >\n </& /inner/comp >\n</&>\n\n% my $var;\n<ol>\n<&| list_items , list => \@items, var => \$var &>\n<li> <% $var %></li>\n</&>\n</ol>\n\n</html>')
--------------------------------------------------------------------------------
