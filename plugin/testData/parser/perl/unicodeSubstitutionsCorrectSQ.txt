Subtree: Perl5 (Perl5)
Perl5
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlStringSqImpl(Perl5: STRING_SQ)
      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)(':full')
      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('\N{GREEK SMALL LETTER SIGMA} is called sigma.\n')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
        PsiPerlStringSqImpl(Perl5: STRING_SQ)
          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('\N{LATIN CAPITAL LETTER E WITH VERTICAL LINE BELOW}')
          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Perl5: ,)(',')
        PsiPerlStringSqImpl(Perl5: STRING_SQ)
          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(' is an officially named sequence of two Unicode characters\n')
          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlStringSqImpl(Perl5: STRING_SQ)
      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)(':loose')
      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
        PsiPerlStringSqImpl(Perl5: STRING_SQ)
          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('\N{Greek small-letter  sigma}')
          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Perl5: ,)(',')
        PsiPerlStringSqImpl(Perl5: STRING_SQ)
          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('can be used to ignore case, underscores, most blanks,')
          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Perl5: ,)(',')
        PsiPerlStringSqImpl(Perl5: STRING_SQ)
          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('and when you arent sure if the official name has hyphens\n')
          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlStringSqImpl(Perl5: STRING_SQ)
      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)(':short')
      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('\N{greek:Sigma} is an upper-case sigma.\n')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlStringListImpl(Perl5: STRING_LIST)
      PsiElement(Perl5: qw)('qw')
      PsiElement(Perl5: QUOTE_SINGLE_OPEN)('(')
      PerlCompositeElementImpl(LP_STRING_QW)
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('cyrillic')
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('greek')
      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(')')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('\N{sigma} is Greek sigma, and \N{be} is Cyrillic b.\n')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)(':full')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
      PsiElement(Perl5: ,)(',')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)(':alias')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
      PsiElement(Perl5: =>)('=>')
      PsiPerlAnonHashImpl(Perl5: ANON_HASH)
        PsiElement(Perl5: {)('{')
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('e_ACUTE')
          PsiElement(Perl5: =>)('=>')
          PsiPerlStringSqImpl(Perl5: STRING_SQ)
            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('LATIN SMALL LETTER E WITH ACUTE')
            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('mychar')
          PsiElement(Perl5: =>)('=>')
          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
            PsiElement(Perl5: NUMBER_HEX)('0xE8000')
          PsiElement(Perl5: ,)(',')
          PsiComment(Perl5: COMMENT_LINE)('# Private use area')
          PsiPerlStringSqImpl(Perl5: STRING_SQ)
            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('自転車に乗る人')
            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
          PsiElement(Perl5: =>)('=>')
          PsiPerlStringSqImpl(Perl5: STRING_SQ)
            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('BICYCLIST')
            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Perl5: })('}')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('\N{e_ACUTE} is a small letter e with an acute.\n')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('\N{mychar} allows me to name private use characters.\n')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
        PsiPerlStringSqImpl(Perl5: STRING_SQ)
          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('And I can create synonyms in other languages,')
          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Perl5: ,)(',')
        PsiPerlStringSqImpl(Perl5: STRING_SQ)
          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(' such as \N{自転車に乗る人} for ')
          PsiElement(Perl5: \\")('\')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(''BICYCLIST (U+1F6B4)\n')
          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlStringSqImpl(Perl5: STRING_SQ)
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('Hello man \N{U+21} \N{U+021} \N{U+0021} \N{U+00021}')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
--------------------------------------------------------------------------------
Subtree: Perl5 POD (Perl5 POD)
POD file
  PsiElement(Perl5 POD: POD_OUTER)('use charnames ':full';\nprint '\N{GREEK SMALL LETTER SIGMA} is called sigma.\n';\nprint '\N{LATIN CAPITAL LETTER E WITH VERTICAL LINE BELOW}',\n    ' is an officially named sequence of two Unicode characters\n';\nuse charnames ':loose';\nprint '\N{Greek small-letter  sigma}',\n    'can be used to ignore case, underscores, most blanks,',\n    'and when you arent sure if the official name has hyphens\n';\nuse charnames ':short';\nprint '\N{greek:Sigma} is an upper-case sigma.\n';\nuse charnames qw(cyrillic greek);\nprint '\N{sigma} is Greek sigma, and \N{be} is Cyrillic b.\n';\n\nuse charnames ':full', ':alias' => {\n    e_ACUTE   => 'LATIN SMALL LETTER E WITH ACUTE',\n    mychar    => 0xE8000, # Private use area\n    '自転車に乗る人' => 'BICYCLIST'\n};\nprint '\N{e_ACUTE} is a small letter e with an acute.\n';\nprint '\N{mychar} allows me to name private use characters.\n';\nprint 'And I can create synonyms in other languages,',\n    ' such as \N{自転車に乗る人} for \'BICYCLIST (U+1F6B4)\n';\nsay 'Hello man \N{U+21} \N{U+021} \N{U+0021} \N{U+00021}';')
--------------------------------------------------------------------------------
