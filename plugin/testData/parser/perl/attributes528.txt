Subtree: Perl5 (Perl5)
Perl5
  PsiPerlSubDefinitionImpl(SUB_DEFINITION)@main::name
    PsiElement(Perl5: sub)('sub')
    PerlSubNameElementImpl(Perl5: subname)('name')
    PsiElement(Perl5: ()('(')
    PsiPerlSignatureContentImpl(Perl5: SIGNATURE_CONTENT)
      PsiPerlSignatureElementImpl(Perl5: SIGNATURE_ELEMENT)
        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('sig')
    PsiElement(Perl5: ))(')')
    PsiPerlLpCodeBlockImpl(LP_CODE_BLOCK)
      PsiPerlBlockImpl(Perl5: BLOCK)
        PsiElement(Perl5: {)('{')
        PsiElement(Perl5: })('}')
  PsiComment(Perl5: COMMENT_LINE)('# with signature')
  PsiPerlSubDefinitionImpl(SUB_DEFINITION)@main::name
    PsiElement(Perl5: sub)('sub')
    PerlSubNameElementImpl(Perl5: subname)('name')
    PsiPerlAttributesImpl(Perl5: ATTRIBUTES)
      PsiElement(Perl5: :)(':')
      PsiPerlAttributeImpl(Perl5: ATTRIBUTE)
        PsiElement(Perl5: ATTRIBUTE_IDENTIFIER)('lvalue')
    PsiElement(Perl5: ()('(')
    PsiPerlSignatureContentImpl(Perl5: SIGNATURE_CONTENT)
      PsiPerlSignatureElementImpl(Perl5: SIGNATURE_ELEMENT)
        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('sig')
    PsiElement(Perl5: ))(')')
    PsiPerlBlockImpl(Perl5: BLOCK)
      PsiElement(Perl5: {)('{')
      PsiElement(Perl5: })('}')
  PsiComment(Perl5: COMMENT_LINE)('# with signature, attributes')
  PsiPerlSubDefinitionImpl(SUB_DEFINITION)@main::name
    PsiElement(Perl5: sub)('sub')
    PerlSubNameElementImpl(Perl5: subname)('name')
    PsiPerlAttributesImpl(Perl5: ATTRIBUTES)
      PsiElement(Perl5: :)(':')
      PsiPerlAttributeImpl(Perl5: ATTRIBUTE)
        PsiElement(Perl5: ATTRIBUTE_IDENTIFIER)('prototype')
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)('(')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('$')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(')')
    PsiElement(Perl5: ()('(')
    PsiPerlSignatureContentImpl(Perl5: SIGNATURE_CONTENT)
      PsiPerlSignatureElementImpl(Perl5: SIGNATURE_ELEMENT)
        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('sig')
    PsiElement(Perl5: ))(')')
    PsiPerlBlockImpl(Perl5: BLOCK)
      PsiElement(Perl5: {)('{')
      PsiElement(Perl5: })('}')
  PsiComment(Perl5: COMMENT_LINE)('# with signature, prototype')
  PsiPerlSubDefinitionImpl(SUB_DEFINITION)@main::foo
    PsiElement(Perl5: sub)('sub')
    PerlSubNameElementImpl(Perl5: subname)('foo')
    PsiPerlAttributesImpl(Perl5: ATTRIBUTES)
      PsiElement(Perl5: :)(':')
      PsiPerlAttributeImpl(Perl5: ATTRIBUTE)
        PsiElement(Perl5: ATTRIBUTE_IDENTIFIER)('prototype')
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)('(')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('$')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(')')
    PsiPerlLpCodeBlockImpl(LP_CODE_BLOCK)
      PsiPerlBlockImpl(Perl5: BLOCK)
        PsiElement(Perl5: {)('{')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlArrayElementImpl(Perl5: ARRAY_ELEMENT)
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('_')
            PsiPerlArrayIndexImpl(Perl5: ARRAY_INDEX)
              PsiElement(Perl5: [)('[')
              PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                PsiElement(Perl5: NUMBER)('0')
              PsiElement(Perl5: ])(']')
        PsiElement(Perl5: })('}')
  PsiPerlSubDefinitionImpl(SUB_DEFINITION)@main::foo
    PsiElement(Perl5: sub)('sub')
    PerlSubNameElementImpl(Perl5: subname)('foo')
    PsiPerlAttributesImpl(Perl5: ATTRIBUTES)
      PsiElement(Perl5: :)(':')
      PsiPerlAttributeImpl(Perl5: ATTRIBUTE)
        PsiElement(Perl5: ATTRIBUTE_IDENTIFIER)('prototype')
        PsiElement(Perl5: QUOTE_SINGLE_OPEN)('(')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('$$')
        PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(')')
    PsiElement(Perl5: ()('(')
    PsiPerlSignatureContentImpl(Perl5: SIGNATURE_CONTENT)
      PsiPerlSignatureElementImpl(Perl5: SIGNATURE_ELEMENT)
        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('left')
      PsiElement(Perl5: ,)(',')
      PsiPerlSignatureElementImpl(Perl5: SIGNATURE_ELEMENT)
        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('right')
    PsiElement(Perl5: ))(')')
    PsiPerlBlockImpl(Perl5: BLOCK)
      PsiElement(Perl5: {)('{')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlReturnExprImpl(Perl5: RETURN_EXPR)
          PsiElement(Perl5: return)('return')
          PsiPerlAddExprImpl(Perl5: ADD_EXPR)
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('left')
            PsiElement(Perl5: +)('+')
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('right')
        PsiElement(Perl5: ;)(';')
      PsiElement(Perl5: })('}')
--------------------------------------------------------------------------------
Subtree: Perl5 POD (Perl5 POD)
POD file
  PsiElement(Perl5 POD: POD_OUTER)('sub name($sig) {}                      # with signature\nsub name :lvalue ($sig) {}            # with signature, attributes\nsub name :prototype($) ($sig) {}  # with signature, prototype\nsub foo :prototype($) { $_[0] }\nsub foo :prototype($$) ($left, $right) {\n    return $left + $right;\n}')
--------------------------------------------------------------------------------
