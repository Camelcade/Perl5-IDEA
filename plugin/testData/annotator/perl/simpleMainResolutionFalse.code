sub <warning descr="Multiple subs definitions found">somesub</warning>{}

method <warning descr="Multiple subs definitions found">somemethod</warning>{}

func <warning descr="Multiple subs definitions found">somefunc</warning>{}

has <warning descr="Multiple subs definitions found">someattr</warning> => (is => 'rw');

__PACKAGE__->mk_accessors( qw/<warning descr="Multiple subs definitions found">testaccessor</warning>/ );

use Exception::Class 'SOmething' => {
    alias => '<warning descr="Multiple subs definitions found">testalias</warning>'
};

use constant <warning descr="Multiple subs definitions found">testconstant</warning> => 42;

has <warning descr="Multiple subs definitions found">otherattr</warning>   => qw/
    is        rw
    reader    <warning descr="Multiple subs definitions found">testreader</warning>
    writer    <warning descr="Multiple subs definitions found">testwriter</warning>
    clearer   <warning descr="Multiple subs definitions found">testclearer</warning>
    predicate <warning descr="Multiple subs definitions found">testpredicate</warning>
/,
    handles => [ qw/<warning descr="Multiple subs definitions found">testhandles</warning>/ ];

has [qw/<warning descr="Multiple subs definitions found">dupes</warning> <warning descr="Multiple subs definitions found">blabla</warning>/] => is => 'rw';