File size: 1134567
Re-highlighted ranges: 81938
Avg range size: 13.846505894700872
Min range size: 1
Max range size: 9294
10% of text has range <= 9
20% of text has range <= 13
30% of text has range <= 18
40% of text has range <= 23
50% of text has range <= 29
60% of text has range <= 39
70% of text has range <= 52
80% of text has range <= 63
90% of text has range <= 77
----------
Range: (1470,1548) (78)
#␣␣␣␣␣␣␣␣create␣a␣Perl::Tidy␣module␣which␣can␣operate␣on␣strings,␣arrays,␣etc.
----------
Range: (1663,1742) (79)
#␣␣␣␣␣␣Sebastien␣Aperghis-Tramoni␣supplied␣a␣patch␣for␣the␣defined␣or␣operator.
----------
Range: (2591,2696) (105)
use␣vars␣qw{
␣␣$VERSION
␣␣@ISA
␣␣@EXPORT
␣␣$missing_file_spec
␣␣$fh_stderr
␣␣$rOpts_character_encoding
};
----------
Range: (4832,5116) (284)
confess␣<<EOM;
------------------------------------------------------------------------
No␣'getline'␣method␣is␣defined␣for␣object␣of␣class␣$ref
Please␣check␣your␣call␣to␣Perl::Tidy::perltidy.␣␣Trace␣follows.
------------------------------------------------------------------------
EOM
----------
Range: (5133,5213) (80)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣Accept␣an␣object␣with␣a␣print␣method␣for␣writing.
----------
Range: (5630,5911) (281)
confess␣<<EOM;
------------------------------------------------------------------------
No␣'print'␣method␣is␣defined␣for␣object␣of␣class␣$ref
Please␣check␣your␣call␣to␣Perl::Tidy::perltidy.␣Trace␣follows.
------------------------------------------------------------------------
EOM
----------
Range: (8410,8489) (79)
#␣The␣names␣correspond␣to␣the␣package␣names␣responsible␣for␣the␣unit␣processes.
----------
Range: (10660,10907) (247)
confess␣<<EOM;
------------------------------------------------------------------------
Unknown␣perltidy␣parameter␣:␣(@bad_keys)
perltidy␣only␣understands␣:␣(@good_keys)
------------------------------------------------------------------------

EOM
----------
Range: (11260,11489) (229)
croak␣<<EOM;
------------------------------------------------------------------------
error␣in␣call␣to␣perltidy:
-$key␣must␣be␣reference␣to␣HASH␣$but_is
------------------------------------------------------------------------
EOM
----------
Range: (12304,12560) (256)
croak␣<<EOM;
------------------------------------------------------------------------
Unable␣to␣redirect␣STDERR␣to␣$stderr_stream
Please␣check␣value␣of␣-stderr␣in␣call␣to␣perltidy
------------------------------------------------------------------------
EOM
----------
Range: (13538,13822) (284)
croak␣<<EOM;
------------------------------------------------------------------------
Please␣check␣value␣of␣-dump_options_type␣in␣call␣to␣perltidy;
saw:␣'$dump_options_type'
expecting:␣'perltidyrc'␣or␣'full'
------------------------------------------------------------------------
EOM
----------
Range: (14439,14701) (262)
croak␣<<EOM;
------------------------------------------------------------------------
Please␣check␣value␣of␣-argv␣in␣call␣to␣perltidy;
it␣must␣be␣a␣string␣or␣ref␣to␣ARRAY␣but␣is:␣$rargv
------------------------------------------------------------------------
EOM
----------
Range: (14852,14932) (80)
Die␣<<EOM;
Error␣parsing␣this␣string␣passed␣to␣to␣perltidy␣with␣'argv':
$msg
EOM
----------
Range: (15749,15872) (123)
my␣(␣$rOpts,␣$config_file,␣$rraw_options,␣$roption_string,
␣␣␣␣␣␣␣␣$rexpansion,␣$roption_category,␣$roption_range␣)
␣␣␣␣␣␣=
----------
Range: (21042,21123) (81)
##Warn␣"Ignoring␣-b;␣you␣may␣not␣specify␣a␣destination␣stream␣and␣-b␣together\n";
----------
Range: (25281,25395) (114)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣Warn␣"skipping␣file:␣'$input_file':␣no␣matches␣found\n";
----------
Range: (26073,26156) (83)
Warn
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣"skipping␣file:␣$input_file:␣Non-text␣(override␣with␣-f)\n";
----------
Range: (27066,27297) (231)
Die␣<<EOM;
------------------------------------------------------------------------
Problem␣combining␣$new_path␣and␣$base␣to␣make␣a␣filename;␣check␣-opath
------------------------------------------------------------------------
EOM
----------
Range: (27314,27409) (95)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣Skip␣files␣with␣same␣extension␣as␣the␣output␣files␣because
----------
Range: (38374,38453) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣#---------------------------------------------------------------
----------
Range: (41664,41742) (78)
<<EOM;
Blinking.␣Output␣for␣iteration␣$iter␣same␣as␣for␣$saw_md5{$digest}.
EOM
----------
Range: (44915,45001) (86)
Die
"unable␣to␣remove␣previous␣'$backup_name'␣for␣-b␣option;␣check␣permissions:␣$!\n";
----------
Range: (46023,46128) (105)
Die
"problem␣re-opening␣$input_file␣for␣write␣for␣-b␣option;␣check␣file␣and␣directory␣permissions:␣$!\n";
----------
Range: (47233,47312) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣else␣use␣default␣permissions␣for␣html␣and␣any␣other␣format
----------
Range: (47325,47410) (85)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#---------------------------------------------------------------
----------
Range: (48889,48993) (104)
"output␣file␣'$output_file'␣missing␣or␣zero␣length;␣original␣'$ifname'␣not␣deleted\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (49080,49161) (81)
Die
"unable␣to␣remove␣previous␣'$ifname'␣for␣-b␣option;␣check␣permissions:␣$!\n";
----------
Range: (51502,51624) (122)
my␣(
␣␣␣␣␣␣␣␣$rOpts,␣␣␣␣␣␣␣␣$logger_object,␣$config_file,
␣␣␣␣␣␣␣␣$rraw_options,␣$Windows_type,␣␣$readable_options
␣␣␣␣)␣=
----------
Range: (51670,51752) (82)
"perltidy␣version␣$VERSION␣log␣file␣on␣a␣$^O␣system,␣OLD_PERL_VERSION=$]\n"
␣␣␣␣);
----------
Range: (55964,56074) (110)
qw(
␣␣␣␣␣␣html!
␣␣␣␣␣␣noprofile
␣␣␣␣␣␣no-profile
␣␣␣␣␣␣npro
␣␣␣␣␣␣recombine!
␣␣␣␣␣␣valign!
␣␣␣␣␣␣notidy
␣␣␣␣);
----------
Range: (56811,56903) (92)
Die
"redefining␣abbreviation␣$short_name␣for␣$long_name;␣already␣used␣for␣$existing_name\n";
----------
Range: (57249,57356) (107)
Die
"attempting␣to␣redefine␣abbreviation␣$nshort_name␣for␣$nolong_name;␣already␣used␣for␣$existing_name\n";
----------
Range: (71889,71966) (77)
}
␣␣␣␣}

␣␣␣␣#---------------------------------------------------------------
----------
Range: (74348,76536) (2188)
qw(
␣␣␣␣␣␣add-newlines
␣␣␣␣␣␣add-semicolons
␣␣␣␣␣␣add-whitespace
␣␣␣␣␣␣blanks-before-blocks
␣␣␣␣␣␣blanks-before-comments
␣␣␣␣␣␣blank-lines-before-subs=1
␣␣␣␣␣␣blank-lines-before-packages=1
␣␣␣␣␣␣block-brace-tightness=0
␣␣␣␣␣␣block-brace-vertical-tightness=0
␣␣␣␣␣␣brace-tightness=1
␣␣␣␣␣␣brace-vertical-tightness-closing=0
␣␣␣␣␣␣brace-vertical-tightness=0
␣␣␣␣␣␣break-at-old-logical-breakpoints
␣␣␣␣␣␣break-at-old-ternary-breakpoints
␣␣␣␣␣␣break-at-old-attribute-breakpoints
␣␣␣␣␣␣break-at-old-keyword-breakpoints
␣␣␣␣␣␣comma-arrow-breakpoints=5
␣␣␣␣␣␣nocheck-syntax
␣␣␣␣␣␣closing-side-comment-interval=6
␣␣␣␣␣␣closing-side-comment-maximum-text=20
␣␣␣␣␣␣closing-side-comment-else-flag=0
␣␣␣␣␣␣closing-side-comments-balanced
␣␣␣␣␣␣closing-paren-indentation=0
␣␣␣␣␣␣closing-brace-indentation=0
␣␣␣␣␣␣closing-square-bracket-indentation=0
␣␣␣␣␣␣continuation-indentation=2
␣␣␣␣␣␣delete-old-newlines
␣␣␣␣␣␣delete-semicolons
␣␣␣␣␣␣extended-syntax
␣␣␣␣␣␣fuzzy-line-length
␣␣␣␣␣␣hanging-side-comments
␣␣␣␣␣␣indent-block-comments
␣␣␣␣␣␣indent-columns=4
␣␣␣␣␣␣iterations=1
␣␣␣␣␣␣keep-old-blank-lines=1
␣␣␣␣␣␣long-block-line-count=8
␣␣␣␣␣␣look-for-autoloader
␣␣␣␣␣␣look-for-selfloader
␣␣␣␣␣␣maximum-consecutive-blank-lines=1
␣␣␣␣␣␣maximum-fields-per-table=0
␣␣␣␣␣␣maximum-line-length=80
␣␣␣␣␣␣memoize
␣␣␣␣␣␣minimum-space-to-comment=4
␣␣␣␣␣␣nobrace-left-and-indent
␣␣␣␣␣␣nocuddled-else
␣␣␣␣␣␣nodelete-old-whitespace
␣␣␣␣␣␣nohtml
␣␣␣␣␣␣nologfile
␣␣␣␣␣␣noquiet
␣␣␣␣␣␣noshow-options
␣␣␣␣␣␣nostatic-side-comments
␣␣␣␣␣␣notabs
␣␣␣␣␣␣nowarning-output
␣␣␣␣␣␣character-encoding=none
␣␣␣␣␣␣outdent-labels
␣␣␣␣␣␣outdent-long-quotes
␣␣␣␣␣␣outdent-long-comments
␣␣␣␣␣␣paren-tightness=1
␣␣␣␣␣␣paren-vertical-tightness-closing=0
␣␣␣␣␣␣paren-vertical-tightness=0
␣␣␣␣␣␣pass-version-line
␣␣␣␣␣␣recombine
␣␣␣␣␣␣valign
␣␣␣␣␣␣short-concatenation-item-length=8
␣␣␣␣␣␣space-for-semicolon
␣␣␣␣␣␣square-bracket-tightness=1
␣␣␣␣␣␣square-bracket-vertical-tightness-closing=0
␣␣␣␣␣␣square-bracket-vertical-tightness=0
␣␣␣␣␣␣static-block-comments
␣␣␣␣␣␣trim-qw
␣␣␣␣␣␣format=tidy
␣␣␣␣␣␣backup-file-extension=bak
␣␣␣␣␣␣format-skipping
␣␣␣␣␣␣default-tabsize=8

␣␣␣␣␣␣pod2html
␣␣␣␣␣␣html-table-of-contents
␣␣␣␣␣␣html-entities
␣␣␣␣);
----------
Range: (82620,83169) (549)
qw(
␣␣␣␣␣␣␣␣␣␣␣␣␣␣check-syntax
␣␣␣␣␣␣␣␣␣␣␣␣␣␣keep-old-blank-lines=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣delete-old-newlines
␣␣␣␣␣␣␣␣␣␣␣␣␣␣delete-old-whitespace
␣␣␣␣␣␣␣␣␣␣␣␣␣␣delete-semicolons
␣␣␣␣␣␣␣␣␣␣␣␣␣␣indent-columns=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣maximum-consecutive-blank-lines=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣maximum-line-length=100000
␣␣␣␣␣␣␣␣␣␣␣␣␣␣noadd-newlines
␣␣␣␣␣␣␣␣␣␣␣␣␣␣noadd-semicolons
␣␣␣␣␣␣␣␣␣␣␣␣␣␣noadd-whitespace
␣␣␣␣␣␣␣␣␣␣␣␣␣␣noblanks-before-blocks
␣␣␣␣␣␣␣␣␣␣␣␣␣␣blank-lines-before-subs=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣blank-lines-before-packages=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣notabs
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣],
----------
Range: (83596,84153) (557)
qw(
␣␣␣␣␣␣␣␣␣␣␣␣␣␣check-syntax
␣␣␣␣␣␣␣␣␣␣␣␣␣␣ci=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣delete-old-newlines
␣␣␣␣␣␣␣␣␣␣␣␣␣␣delete-old-whitespace
␣␣␣␣␣␣␣␣␣␣␣␣␣␣delete-semicolons
␣␣␣␣␣␣␣␣␣␣␣␣␣␣indent-columns=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣maximum-consecutive-blank-lines=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣maximum-line-length=1
␣␣␣␣␣␣␣␣␣␣␣␣␣␣noadd-semicolons
␣␣␣␣␣␣␣␣␣␣␣␣␣␣noadd-whitespace
␣␣␣␣␣␣␣␣␣␣␣␣␣␣noblanks-before-blocks
␣␣␣␣␣␣␣␣␣␣␣␣␣␣blank-lines-before-subs=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣blank-lines-before-packages=0
␣␣␣␣␣␣␣␣␣␣␣␣␣␣nofuzzy-line-length
␣␣␣␣␣␣␣␣␣␣␣␣␣␣notabs
␣␣␣␣␣␣␣␣␣␣␣␣␣␣norecombine
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣],
----------
Range: (84359,84449) (90)
qw(
␣␣␣␣␣␣␣␣␣␣␣␣␣␣lp␣bl␣noll␣pt=2␣bt=2␣sbt=2␣cpi=1␣csbi=1␣cbi=1
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣],
----------
Range: (84631,84742) (111)
q(wbb=%␣+␣-␣*␣/␣x␣!=␣==␣>=␣<=␣=~␣!~␣<␣>␣|␣&␣=␣**=␣+=␣*=␣&=␣<<=␣&&=␣-=␣/=␣|=␣>>=␣||=␣//=␣.=␣%=␣^=␣x=)
␣␣␣␣␣␣␣␣],
----------
Range: (85216,85294) (78)
#␣This␣patch␣was␣supplied␣by␣Jonathan␣Swartz␣Nov␣2012␣and␣significantly␣speeds
----------
Range: (85416,85533) (117)
my␣(
␣␣␣␣␣␣␣␣$perltidyrc_stream,␣␣$is_Windows,␣$Windows_type,
␣␣␣␣␣␣␣␣$rpending_complaint,␣$dump_options_type
␣␣␣␣)␣=
----------
Range: (86221,86338) (117)
my␣(
␣␣␣␣␣␣␣␣$perltidyrc_stream,␣␣$is_Windows,␣$Windows_type,
␣␣␣␣␣␣␣␣$rpending_complaint,␣$dump_options_type
␣␣␣␣)␣=
----------
Range: (86371,86477) (106)
my␣(
␣␣␣␣␣␣␣␣$roption_string,␣␣␣$rdefaults,␣$rexpansion,
␣␣␣␣␣␣␣␣$roption_category,␣$roption_range
␣␣␣␣)␣=
----------
Range: (88483,88561) (78)
Warn
"Only␣one␣-pro=filename␣allowed,␣using␣'$2'␣instead␣of␣'$config_file'\n";
----------
Range: (90847,91045) (198)
Warn␣<<EOM;
␣Conflict:␣a␣perltidyrc␣configuration␣file␣was␣specified␣both␣as␣this
␣perltidy␣call␣parameter:␣$perltidyrc_stream
␣and␣with␣this␣-profile=$config_file.
␣Using␣-profile=$config_file.
EOM
----------
Range: (92530,92625) (95)
Die
"Error␣in␣this␣config␣file:␣$config_file␣␣\nUse␣-npro␣to␣ignore␣this␣file,␣-h␣for␣help'\n";
----------
Range: (92642,92720) (78)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Anything␣left␣in␣this␣local␣@ARGV␣is␣an␣error␣and␣must␣be
----------
Range: (93431,93640) (209)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣Die␣<<EOM;
There␣are␣$count␣unrecognized␣values␣in␣the␣configuration␣file␣'$config_file':
$str
Use␣leading␣dashes␣for␣parameters.␣␣Use␣-npro␣to␣ignore␣this␣file.
EOM
----------
Range: (93657,93736) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Undo␣any␣options␣which␣cause␣premature␣exit.␣␣They␣are␣not
----------
Range: (93916,94356) (440)
qw{
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣dump-defaults
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣dump-long-names
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣dump-options
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣dump-profile
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣dump-short-names
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣dump-token-types
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣dump-want-left-space
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣dump-want-right-space
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣help
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣stylesheet
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣version
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (94547,94666) (119)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#---------------------------------------------------------------
----------
Range: (97017,97097) (80)
}

␣␣␣␣#␣Never␣let␣Windows␣9x/Me␣systems␣run␣syntax␣check␣--␣this␣will␣prevent␣a
----------
Range: (98406,98483) (77)
}

␣␣␣␣#␣check␣for␣reasonable␣number␣of␣blank␣lines␣and␣fix␣to␣avoid␣problems
----------
Range: (100286,100426) (140)
Warn␣<<EOM;
␣Conflict:␣you␣specified␣both␣'opening-brace-always-on-right'␣(-bar)␣and
␣␣'opening-brace-on-new-line'␣(-bl).␣␣Ignoring␣-bl.
EOM
----------
Range: (101128,101207) (79)
}

␣␣␣␣␣␣␣␣#␣entab␣leading␣whitespace␣has␣priority␣over␣the␣older␣'tabs'␣option
----------
Range: (101264,101348) (84)
}
␣␣␣␣}

␣␣␣␣#␣set␣a␣default␣tabsize␣to␣be␣used␣in␣guessing␣the␣starting␣indentation
----------
Range: (104735,104821) (86)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣not␣in␣expansion␣hash,␣must␣be␣actual␣long␣name
----------
Range: (104907,104988) (81)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣not␣a␣dash␣item,␣so␣just␣save␣it␣for␣the␣next␣pass
----------
Range: (105357,105484) (127)
Warn␣<<EOM;
I'm␣tired.␣We␣seem␣to␣be␣in␣an␣infinite␣loop␣trying␣to␣expand␣aliases.
Here␣are␣the␣raw␣options;
(rraw_options)
EOM
----------
Range: (105806,105926) (120)
Die␣<<"DIE";
Please␣check␣your␣configuration␣file␣$config_file␣for␣circular-references.
To␣deactivate␣it,␣use␣-npro.
DIE
----------
Range: (105976,106091) (115)
Die␣<<'DIE';
Program␣bug␣-␣circular-references␣in␣the␣%expansion␣hash,␣probably␣due␣to
a␣recent␣program␣change.
DIE
----------
Range: (106321,106665) (344)
<<EOM;
List␣of␣short␣names.␣␣This␣list␣shows␣how␣all␣abbreviations␣are
translated␣into␣other␣abbreviations␣and,␣eventually,␣into␣long␣names.
New␣abbreviations␣may␣be␣defined␣in␣a␣.perltidyrc␣file.
For␣a␣list␣of␣all␣long␣names,␣use␣perltidy␣--dump-long-names␣(-dln).
--------------------------------------------------------------------------
EOM
----------
Range: (107122,107220) (98)
s/;-?\d*$//

␣␣␣␣␣␣#␣remove␣explicit␣.␣version␣ie␣two␣dots␣in␣filename␣NB␣^␣escapes␣a␣dot
␣␣␣␣␣␣or
----------
Range: (107230,107628) (398)
s/(␣␣␣␣␣␣␣␣␣␣#␣begin␣capture␣$1
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣(?:^|[^^])\.␣#␣match␣a␣dot␣not␣preceded␣by␣a␣caret
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣(?:␣␣␣␣␣␣␣␣␣␣#␣followed␣by␣nothing
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣|␣␣␣␣␣␣␣␣␣␣#␣or
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣.*[^^]␣␣␣␣␣#␣anything␣ending␣in␣a␣non␣caret
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣end␣capture␣$1
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣\.-?\d*$␣␣␣␣␣␣␣#␣match␣.␣version␣number
␣␣␣␣␣␣␣␣␣␣␣␣␣␣/$1/x;
----------
Range: (109790,109935) (145)
<<EOS;
Error␣trying␣to␣discover␣Win_OS_Type:␣$id:$major:$minor␣Has␣no␣name␣of␣record!
We␣won't␣be␣able␣to␣look␣for␣a␣system-wide␣config␣file.
EOS
----------
Range: (109940,110020) (80)
}

␣␣␣␣#␣Unfortunately␣the␣logic␣used␣for␣the␣various␣versions␣isn't␣so␣clever..
----------
Range: (110728,110815) (87)
my␣(␣$is_Windows,␣$Windows_type,␣$rconfig_file_chatter,
␣␣␣␣␣␣␣␣$rpending_complaint␣)␣=
----------
Range: (117412,117489) (77)
"Attempting␣to␣redefine␣alias␣($name)␣in␣config␣file␣$config_file␣line␣$.\n";
----------
Range: (118399,118534) (135)
<<EOM;
Error␣reading␣file␣'$config_file'␣at␣line␣number␣$line_no.
$msg
Please␣fix␣this␣line␣or␣use␣-npro␣to␣avoid␣reading␣this␣file
EOM
----------
Range: (118949,119045) (96)
"Didn't␣see␣a␣'}'␣to␣match␣the␣'{'␣at␣line␣$opening_brace_line␣in␣config␣file␣'$config_file'\n";
----------
Range: (120184,120263) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣error..we␣reached␣the␣end␣without␣seeing␣the␣ending␣quote␣char
----------
Range: (120306,120504) (198)
<<EOM;
Error␣reading␣file␣$config_file␣at␣line␣number␣$line_no.
Did␣not␣see␣ending␣quote␣character␣<$quote_char>␣in␣this␣text:
$instr
Please␣fix␣this␣line␣or␣use␣-npro␣to␣avoid␣reading␣this␣file
EOM
----------
Range: (120539,120626) (87)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣accumulating␣characters␣and␣looking␣for␣start␣of␣a␣quoted␣string
----------
Range: (121926,122005) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣error..we␣reached␣the␣end␣without␣seeing␣the␣ending␣quote␣char
----------
Range: (122114,122193) (79)
<<EOM;
Did␣not␣see␣ending␣quote␣character␣<$quote_char>␣in␣this␣text:
$body
EOM
----------
Range: (122228,122315) (87)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣accumulating␣characters␣and␣looking␣for␣start␣of␣a␣quoted␣string
----------
Range: (122903,123430) (527)
<<EOM;
#␣Command␣line␣long␣names␣(passed␣to␣GetOptions)
#---------------------------------------------------------------
#␣here␣is␣a␣summary␣of␣the␣Getopt␣codes:
#␣<none>␣does␣not␣take␣an␣argument
#␣=s␣takes␣a␣mandatory␣string
#␣:s␣takes␣an␣optional␣string
#␣=i␣takes␣a␣mandatory␣integer
#␣:i␣takes␣an␣optional␣integer
#␣!␣does␣not␣take␣an␣argument␣and␣may␣be␣negated
#␣␣i.e.,␣-foo␣and␣-nofoo␣are␣allowed
#␣a␣double␣dash␣signals␣the␣end␣of␣the␣options␣list
#
#---------------------------------------------------------------
EOM
----------
Range: (125074,125417) (343)
<<"EOM";
This␣is␣perltidy,␣v$VERSION

Copyright␣2000-2016,␣Steve␣Hancock

Perltidy␣is␣free␣software␣and␣may␣be␣copied␣under␣the␣terms␣of␣the␣GNU
General␣Public␣License,␣which␣is␣included␣in␣the␣distribution␣files.

Complete␣documentation␣for␣perltidy␣can␣be␣found␣using␣'man␣perltidy'
or␣on␣the␣internet␣at␣http://perltidy.sourceforge.net.
EOM
----------
Range: (125451,134745) (9294)
<<EOF;
This␣is␣perltidy␣version␣$VERSION,␣a␣perl␣script␣indenter.␣␣Usage:

␣␣␣␣perltidy␣[␣options␣]␣file1␣file2␣file3␣...
␣␣␣␣␣␣␣␣␣␣␣␣(output␣goes␣to␣file1.tdy,␣file2.tdy,␣file3.tdy,␣...)
␣␣␣␣perltidy␣[␣options␣]␣file1␣-o␣outfile
␣␣␣␣perltidy␣[␣options␣]␣file1␣-st␣>outfile
␣␣␣␣perltidy␣[␣options␣]␣<infile␣>outfile

Options␣have␣short␣and␣long␣forms.␣Short␣forms␣are␣shown;␣see
man␣pages␣for␣long␣forms.␣␣Note:␣'=s'␣indicates␣a␣required␣string,
and␣'=n'␣indicates␣a␣required␣integer.

I/O␣control
␣-h␣␣␣␣␣␣show␣this␣help
␣-o=file␣name␣of␣the␣output␣file␣(only␣if␣single␣input␣file)
␣-oext=s␣change␣output␣extension␣from␣'tdy'␣to␣s
␣-opath=path␣␣change␣path␣to␣be␣'path'␣for␣output␣files
␣-b␣␣␣␣␣␣backup␣original␣to␣.bak␣and␣modify␣file␣in-place
␣-bext=s␣change␣default␣backup␣extension␣from␣'bak'␣to␣s
␣-q␣␣␣␣␣␣deactivate␣error␣messages␣(for␣running␣under␣editor)
␣-w␣␣␣␣␣␣include␣non-critical␣warning␣messages␣in␣the␣.ERR␣error␣output
␣-syn␣␣␣␣run␣perl␣-c␣to␣check␣syntax␣(default␣under␣unix␣systems)
␣-log␣␣␣␣save␣.LOG␣file,␣which␣has␣useful␣diagnostics
␣-f␣␣␣␣␣␣force␣perltidy␣to␣read␣a␣binary␣file
␣-g␣␣␣␣␣␣like␣-log␣but␣writes␣more␣detailed␣.LOG␣file,␣for␣debugging␣scripts
␣-opt␣␣␣␣write␣the␣set␣of␣options␣actually␣used␣to␣a␣.LOG␣file
␣-npro␣␣␣ignore␣.perltidyrc␣configuration␣command␣file
␣-pro=file␣␣␣read␣configuration␣commands␣from␣file␣instead␣of␣.perltidyrc
␣-st␣␣␣␣␣send␣output␣to␣standard␣output,␣STDOUT
␣-se␣␣␣␣␣send␣all␣error␣output␣to␣standard␣error␣output,␣STDERR
␣-v␣␣␣␣␣␣display␣version␣number␣to␣standard␣output␣and␣quit

Basic␣Options:
␣-i=n␣␣␣␣use␣n␣columns␣per␣indentation␣level␣(default␣n=4)
␣-t␣␣␣␣␣␣tabs:␣use␣one␣tab␣character␣per␣indentation␣level,␣not␣recommeded
␣-nt␣␣␣␣␣no␣tabs:␣use␣n␣spaces␣per␣indentation␣level␣(default)
␣-et=n␣␣␣entab␣leading␣whitespace␣n␣spaces␣per␣tab;␣not␣recommended
␣-io␣␣␣␣␣"indent␣only":␣just␣do␣indentation,␣no␣other␣formatting.
␣-sil=n␣␣set␣starting␣indentation␣level␣to␣n;␣␣use␣if␣auto␣detection␣fails
␣-ole=s␣␣specify␣output␣line␣ending␣(s=dos␣or␣win,␣mac,␣unix)
␣-ple␣␣␣␣keep␣output␣line␣endings␣same␣as␣input␣(input␣must␣be␣filename)

Whitespace␣Control
␣-fws␣␣␣␣freeze␣whitespace;␣this␣disables␣all␣whitespace␣changes
␣␣␣␣␣␣␣␣␣␣␣and␣disables␣the␣following␣switches:
␣-bt=n␣␣␣sets␣brace␣tightness,␣␣n=␣(0␣=␣loose,␣1=default,␣2␣=␣tight)
␣-bbt␣␣␣␣same␣as␣-bt␣but␣for␣code␣block␣braces;␣same␣as␣-bt␣if␣not␣given
␣-bbvt␣␣␣block␣braces␣vertically␣tight;␣use␣with␣-bl␣or␣-bli
␣-bbvtl=s␣␣make␣-bbvt␣to␣apply␣to␣selected␣list␣of␣block␣types
␣-pt=n␣␣␣paren␣tightness␣(n=0,␣1␣or␣2)
␣-sbt=n␣␣square␣bracket␣tightness␣(n=0,␣1,␣or␣2)
␣-bvt=n␣␣brace␣vertical␣tightness,
␣␣␣␣␣␣␣␣␣n=(0=open,␣1=close␣unless␣multiple␣steps␣on␣a␣line,␣2=always␣close)
␣-pvt=n␣␣paren␣vertical␣tightness␣(see␣-bvt␣for␣n)
␣-sbvt=n␣square␣bracket␣vertical␣tightness␣(see␣-bvt␣for␣n)
␣-bvtc=n␣closing␣brace␣vertical␣tightness:
␣␣␣␣␣␣␣␣␣n=(0=open,␣1=sometimes␣close,␣2=always␣close)
␣-pvtc=n␣closing␣paren␣vertical␣tightness,␣see␣-bvtc␣for␣n.
␣-sbvtc=n␣closing␣square␣bracket␣vertical␣tightness,␣see␣-bvtc␣for␣n.
␣-ci=n␣␣␣sets␣continuation␣indentation=n,␣␣default␣is␣n=2␣spaces
␣-lp␣␣␣␣␣line␣up␣parentheses,␣brackets,␣and␣non-BLOCK␣braces
␣-sfs␣␣␣␣add␣space␣before␣semicolon␣in␣for(␣;␣;␣)
␣-aws␣␣␣␣allow␣perltidy␣to␣add␣whitespace␣(default)
␣-dws␣␣␣␣delete␣all␣old␣non-essential␣whitespace
␣-icb␣␣␣␣indent␣closing␣brace␣of␣a␣code␣block
␣-cti=n␣␣closing␣indentation␣of␣paren,␣square␣bracket,␣or␣non-block␣brace:
␣␣␣␣␣␣␣␣␣n=0␣none,␣=1␣align␣with␣opening,␣=2␣one␣full␣indentation␣level
␣-icp␣␣␣␣equivalent␣to␣-cti=2
␣-wls=s␣␣want␣space␣left␣of␣tokens␣in␣string;␣i.e.␣-nwls='+␣-␣*␣/'
␣-wrs=s␣␣want␣space␣right␣of␣tokens␣in␣string;
␣-sts␣␣␣␣put␣space␣before␣terminal␣semicolon␣of␣a␣statement
␣-sak=s␣␣put␣space␣between␣keywords␣given␣in␣s␣and␣'(';
␣-nsak=s␣no␣space␣between␣keywords␣in␣s␣and␣'(';␣i.e.␣-nsak='my␣our␣local'

Line␣Break␣Control
␣-fnl␣␣␣␣freeze␣newlines;␣this␣disables␣all␣line␣break␣changes
␣␣␣␣␣␣␣␣␣␣␣␣and␣disables␣the␣following␣switches:
␣-anl␣␣␣␣add␣newlines;␣␣ok␣to␣introduce␣new␣line␣breaks
␣-bbs␣␣␣␣add␣blank␣line␣before␣subs␣and␣packages
␣-bbc␣␣␣␣add␣blank␣line␣before␣block␣comments
␣-bbb␣␣␣␣add␣blank␣line␣between␣major␣blocks
␣-kbl=n␣␣keep␣old␣blank␣lines?␣0=no,␣1=some,␣2=all
␣-mbl=n␣␣maximum␣consecutive␣blank␣lines␣to␣output␣(default=1)
␣-ce␣␣␣␣␣cuddled␣else;␣use␣this␣style:␣'}␣else␣{'
␣-dnl␣␣␣␣delete␣old␣newlines␣(default)
␣-l=n␣␣␣␣maximum␣line␣length;␣␣default␣n=80
␣-bl␣␣␣␣␣opening␣brace␣on␣new␣line
␣-sbl␣␣␣␣opening␣sub␣brace␣on␣new␣line.␣␣value␣of␣-bl␣is␣used␣if␣not␣given.
␣-bli␣␣␣␣opening␣brace␣on␣new␣line␣and␣indented
␣-bar␣␣␣␣opening␣brace␣always␣on␣right,␣even␣for␣long␣clauses
␣-vt=n␣␣␣vertical␣tightness␣(requires␣-lp);␣n␣controls␣break␣after␣opening
␣␣␣␣␣␣␣␣␣token:␣0=never␣␣1=no␣break␣if␣next␣line␣balanced␣␣␣2=no␣break
␣-vtc=n␣␣vertical␣tightness␣of␣closing␣container;␣n␣controls␣if␣closing
␣␣␣␣␣␣␣␣␣token␣starts␣new␣line:␣0=always␣␣1=not␣unless␣list␣␣1=never
␣-wba=s␣␣want␣break␣after␣tokens␣in␣string;␣i.e.␣wba=':␣.'
␣-wbb=s␣␣want␣break␣before␣tokens␣in␣string

Following␣Old␣Breakpoints
␣-kis␣␣␣␣keep␣interior␣semicolons.␣␣Allows␣multiple␣statements␣per␣line.
␣-boc␣␣␣␣break␣at␣old␣comma␣breaks:␣turns␣off␣all␣automatic␣list␣formatting
␣-bol␣␣␣␣break␣at␣old␣logical␣breakpoints:␣or,␣and,␣||,␣&&␣(default)
␣-bok␣␣␣␣break␣at␣old␣list␣keyword␣breakpoints␣such␣as␣map,␣sort␣(default)
␣-bot␣␣␣␣break␣at␣old␣conditional␣(ternary␣?:)␣operator␣breakpoints␣(default)
␣-boa␣␣␣␣break␣at␣old␣attribute␣breakpoints
␣-cab=n␣␣break␣at␣commas␣after␣a␣comma-arrow␣(=>):
␣␣␣␣␣␣␣␣␣n=0␣break␣at␣all␣commas␣after␣=>
␣␣␣␣␣␣␣␣␣n=1␣stable:␣break␣unless␣this␣breaks␣an␣existing␣one-line␣container
␣␣␣␣␣␣␣␣␣n=2␣break␣only␣if␣a␣one-line␣container␣cannot␣be␣formed
␣␣␣␣␣␣␣␣␣n=3␣do␣not␣treat␣commas␣after␣=>␣specially␣at␣all

Comment␣controls
␣-ibc␣␣␣␣indent␣block␣comments␣(default)
␣-isbc␣␣␣indent␣spaced␣block␣comments;␣may␣indent␣unless␣no␣leading␣space
␣-msc=n␣␣minimum␣desired␣spaces␣to␣side␣comment,␣default␣4
␣-fpsc=n␣fix␣position␣for␣side␣comments;␣default␣0;
␣-csc␣␣␣␣add␣or␣update␣closing␣side␣comments␣after␣closing␣BLOCK␣brace
␣-dcsc␣␣␣delete␣closing␣side␣comments␣created␣by␣a␣-csc␣command
␣-cscp=s␣change␣closing␣side␣comment␣prefix␣to␣be␣other␣than␣'##␣end'
␣-cscl=s␣change␣closing␣side␣comment␣to␣apply␣to␣selected␣list␣of␣blocks
␣-csci=n␣minimum␣number␣of␣lines␣needed␣to␣apply␣a␣-csc␣tag,␣default␣n=6
␣-csct=n␣maximum␣number␣of␣columns␣of␣appended␣text,␣default␣n=20
␣-cscw␣␣␣causes␣warning␣if␣old␣side␣comment␣is␣overwritten␣with␣-csc

␣-sbc␣␣␣␣use␣'static␣block␣comments'␣identified␣by␣leading␣'##'␣(default)
␣-sbcp=s␣change␣static␣block␣comment␣identifier␣to␣be␣other␣than␣'##'
␣-osbc␣␣␣outdent␣static␣block␣comments

␣-ssc␣␣␣␣use␣'static␣side␣comments'␣identified␣by␣leading␣'##'␣(default)
␣-sscp=s␣change␣static␣side␣comment␣identifier␣to␣be␣other␣than␣'##'

Delete␣selected␣text
␣-dac␣␣␣␣delete␣all␣comments␣AND␣pod
␣-dbc␣␣␣␣delete␣block␣comments
␣-dsc␣␣␣␣delete␣side␣comments
␣-dp␣␣␣␣␣delete␣pod

Send␣selected␣text␣to␣a␣'.TEE'␣file
␣-tac␣␣␣␣tee␣all␣comments␣AND␣pod
␣-tbc␣␣␣␣tee␣block␣comments
␣-tsc␣␣␣␣tee␣side␣comments
␣-tp␣␣␣␣␣tee␣pod

Outdenting
␣-olq␣␣␣␣outdent␣long␣quoted␣strings␣(default)
␣-olc␣␣␣␣outdent␣a␣long␣block␣comment␣line
␣-ola␣␣␣␣outdent␣statement␣labels
␣-okw␣␣␣␣outdent␣control␣keywords␣(redo,␣next,␣last,␣goto,␣return)
␣-okwl=s␣specify␣alternative␣keywords␣for␣-okw␣command

Other␣controls
␣-mft=n␣␣maximum␣fields␣per␣table;␣default␣n=40
␣-x␣␣␣␣␣␣do␣not␣format␣lines␣before␣hash-bang␣line␣(i.e.,␣for␣VMS)
␣-asc␣␣␣␣allows␣perltidy␣to␣add␣a␣';'␣when␣missing␣(default)
␣-dsm␣␣␣␣allows␣perltidy␣to␣delete␣an␣unnecessary␣';'␣␣(default)

Combinations␣of␣other␣parameters
␣-gnu␣␣␣␣␣attempt␣to␣follow␣GNU␣Coding␣Standards␣as␣applied␣to␣perl
␣-mangle␣␣remove␣as␣many␣newlines␣as␣possible␣(but␣keep␣comments␣and␣pods)
␣-extrude␣␣insert␣as␣many␣newlines␣as␣possible

Dump␣and␣die,␣debugging
␣-dop␣␣␣␣dump␣options␣used␣in␣this␣run␣to␣standard␣output␣and␣quit
␣-ddf␣␣␣␣dump␣default␣options␣to␣standard␣output␣and␣quit
␣-dsn␣␣␣␣dump␣all␣option␣short␣names␣to␣standard␣output␣and␣quit
␣-dln␣␣␣␣dump␣option␣long␣names␣to␣standard␣output␣and␣quit
␣-dpro␣␣␣dump␣whatever␣configuration␣file␣is␣in␣effect␣to␣standard␣output
␣-dtt␣␣␣␣dump␣all␣token␣types␣to␣standard␣output␣and␣quit

HTML
␣-html␣write␣an␣html␣file␣(see␣'man␣perl2web'␣for␣many␣options)
␣␣␣␣␣␣␣Note:␣when␣-html␣is␣used,␣no␣indentation␣or␣formatting␣are␣done.
␣␣␣␣␣␣␣Hint:␣try␣perltidy␣-html␣-css=mystyle.css␣filename.pl
␣␣␣␣␣␣␣and␣edit␣mystyle.css␣to␣change␣the␣appearance␣of␣filename.html.
␣␣␣␣␣␣␣-nnn␣gives␣line␣numbers
␣␣␣␣␣␣␣-pre␣only␣writes␣out␣<pre>..</pre>␣code␣section
␣␣␣␣␣␣␣-toc␣places␣a␣table␣of␣contents␣to␣subs␣at␣the␣top␣(default)
␣␣␣␣␣␣␣-pod␣passes␣pod␣text␣through␣pod2html␣(default)
␣␣␣␣␣␣␣-frm␣write␣html␣as␣a␣frame␣(3␣files)
␣␣␣␣␣␣␣-text=s␣extra␣extension␣for␣table␣of␣contents␣if␣-frm,␣default='toc'
␣␣␣␣␣␣␣-sext=s␣extra␣extension␣for␣file␣content␣if␣-frm,␣default='src'

A␣prefix␣of␣"n"␣negates␣short␣form␣toggle␣switches,␣and␣a␣prefix␣of␣"no"
negates␣the␣long␣forms.␣␣For␣example,␣-nasc␣means␣don't␣add␣missing
semicolons.

If␣you␣are␣unable␣to␣see␣this␣entire␣text,␣try␣"perltidy␣-h␣|␣more"
For␣more␣detailed␣information,␣and␣additional␣options,␣try␣"man␣perltidy",
or␣go␣to␣the␣perltidy␣home␣page␣at␣http://perltidy.sourceforge.net
EOF
----------
Range: (136340,136423) (83)
"␣-x"␣}
␣␣␣␣}

␣␣␣␣#␣this␣shouldn't␣happen␣unless␣a␣temporary␣file␣couldn't␣be␣made
----------
Range: (137949,138042) (93)
"The␣output␣file␣has␣a␣syntax␣error␣when␣tested␣with␣perl␣$flags␣$ostream␣!\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (138096,138174) (78)
"This␣implies␣an␣error␣in␣perltidy;␣the␣file␣$ostream␣is␣bad\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (139077,139158) (81)
"The␣output␣file␣will␣not␣be␣checked␣because␣of␣input␣file␣problems\n"
␣␣␣␣␣␣␣␣);
----------
Range: (140898,141124) (226)
confess␣<<EOM;
------------------------------------------------------------------------
expecting␣ref␣to␣SCALAR␣but␣got␣ref␣to␣($ref);␣trace␣follows:
------------------------------------------------------------------------
EOM
----------
Range: (141898,142127) (229)
confess␣<<EOM;
------------------------------------------------------------------------
expecting␣mode␣=␣'r'␣or␣'w'␣but␣got␣mode␣($mode);␣trace␣follows:
------------------------------------------------------------------------
EOM
----------
Range: (142234,142466) (232)
confess␣<<EOM;
------------------------------------------------------------------------
getline␣call␣requires␣mode␣=␣'r'␣but␣mode␣=␣($mode);␣trace␣follows:
------------------------------------------------------------------------
EOM
----------
Range: (142626,142856) (230)
confess␣<<EOM;
------------------------------------------------------------------------
print␣call␣requires␣mode␣=␣'w'␣but␣mode␣=␣($mode);␣trace␣follows:
------------------------------------------------------------------------
EOM
----------
Range: (143567,143792) (225)
confess␣<<EOM;
------------------------------------------------------------------------
expecting␣ref␣to␣ARRAY␣but␣got␣ref␣to␣($ref);␣trace␣follows:
------------------------------------------------------------------------
EOM
----------
Range: (144044,144273) (229)
confess␣<<EOM;
------------------------------------------------------------------------
expecting␣mode␣=␣'r'␣or␣'w'␣but␣got␣mode␣($mode);␣trace␣follows:
------------------------------------------------------------------------
EOM
----------
Range: (144380,144607) (227)
confess␣<<EOM;
------------------------------------------------------------------------
getline␣requires␣mode␣=␣'r'␣but␣mode␣=␣($mode);␣trace␣follows:
------------------------------------------------------------------------
EOM
----------
Range: (144767,144992) (225)
confess␣<<EOM;
------------------------------------------------------------------------
print␣requires␣mode␣=␣'w'␣but␣mode␣=␣($mode);␣trace␣follows:
------------------------------------------------------------------------
EOM
----------
Range: (145128,145208) (80)
#␣the␣Perl::Tidy::LineSource␣class␣supplies␣an␣object␣with␣a␣'get_line()'␣method
----------
Range: (146158,146236) (78)
<<EOM;
Note:␣--syntax␣check␣will␣be␣skipped␣because␣standard␣input␣is␣used
EOM
----------
Range: (147810,147926) (116)
my␣(␣$class,␣$output_file,␣$tee_file,␣$line_separator,␣$rOpts,
␣␣␣␣␣␣␣␣$rpending_logfile_message,␣$binmode␣)
␣␣␣␣␣␣=
----------
Range: (148608,148709) (101)
binmode␣STDOUT␣}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣in␣order␣to␣check␣output␣syntax␣when␣standard␣output␣is␣used,
----------
Range: (149123,149202) (79)
<<EOM;
Note:␣--syntax␣check␣will␣be␣skipped␣because␣standard␣output␣is␣used
EOM
----------
Range: (151160,151240) (80)
}
␣␣␣␣}
}

#####################################################################
----------
Range: (157082,157507) (425)
<<EOM;
The␣nesting␣depths␣in␣the␣table␣below␣are␣at␣the␣start␣of␣the␣lines.
The␣indicated␣output␣line␣numbers␣are␣not␣always␣exact.
ci␣=␣levels␣of␣continuation␣indentation;␣bk␣=␣1␣if␣in␣BLOCK,␣0␣if␣not.

in:out␣indent␣c␣b␣␣nesting␣␣␣code␣+␣messages;␣(messages␣begin␣with␣>>>)
lines␣␣levels␣i␣k␣␣␣␣␣␣␣␣␣␣␣␣(code␣begins␣with␣one␣'.'␣per␣indent␣level)
------␣␣-----␣-␣-␣--------␣␣␣-------------------------------------------
EOM
----------
Range: (159919,160061) (142)
"L$input_line_number:$output_line_number$extra_space␣i$guessed_indentation_level:$structural_indentation_level␣$ci_level␣$bk␣$nesting_string";
----------
Range: (163916,164268) (352)
<<EOM);

You␣may␣have␣encountered␣a␣code␣bug␣in␣perltidy.␣␣If␣you␣think␣so,␣and
the␣problem␣is␣not␣listed␣in␣the␣BUGS␣file␣at
http://perltidy.sourceforge.net,␣please␣report␣it␣so␣that␣it␣can␣be
corrected.␣␣Include␣the␣smallest␣possible␣script␣which␣has␣the␣problem,
along␣with␣the␣.LOG␣file.␣See␣the␣manual␣pages␣for␣contact␣information.
Thank␣you!
EOM
----------
Range: (164377,164914) (537)
<<EOM);

You␣may␣have␣encountered␣a␣bug␣in␣perltidy.␣␣However,␣since␣you␣are␣using␣the
-extrude␣option,␣the␣problem␣may␣be␣with␣perl␣or␣one␣of␣its␣modules,␣which␣have
occasional␣problems␣with␣this␣type␣of␣file.␣␣If␣you␣believe␣that␣the
problem␣is␣with␣perltidy,␣and␣the␣problem␣is␣not␣listed␣in␣the␣BUGS␣file␣at
http://perltidy.sourceforge.net,␣please␣report␣it␣so␣that␣it␣can␣be␣corrected.
Include␣the␣smallest␣possible␣script␣which␣has␣the␣problem,␣along␣with␣the␣.LOG
file.␣See␣the␣manual␣pages␣for␣contact␣information.
Thank␣you!
EOM
----------
Range: (164967,165376) (409)
<<EOM);

Oops,␣you␣seem␣to␣have␣encountered␣a␣bug␣in␣perltidy.␣␣Please␣check␣the
BUGS␣file␣at␣http://perltidy.sourceforge.net.␣␣If␣the␣problem␣is␣not
listed␣there,␣please␣report␣it␣so␣that␣it␣can␣be␣corrected.␣␣Include␣the
smallest␣possible␣script␣which␣produces␣this␣message,␣along␣with␣the
.LOG␣file␣if␣appropriate.␣␣See␣the␣manual␣pages␣for␣contact␣information.
Your␣efforts␣are␣appreciated.
Thank␣you!
EOM
----------
Range: (165633,165864) (231)
<<EOM);

The␣log␣file␣shows␣that␣perltidy␣added␣$added_semicolon_count␣semicolons.
Please␣rerun␣with␣-nasc␣to␣see␣if␣that␣is␣the␣cause␣of␣the␣syntax␣error.␣␣Even
if␣that␣is␣the␣problem,␣please␣report␣it␣so␣that␣it␣can␣be␣fixed.
EOM
----------
Range: (166717,166804) (87)
"To␣see␣$self->{_complaint_count}␣non-critical␣warnings␣rerun␣with␣-w\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (167475,167565) (90)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}
}

#####################################################################
----------
Range: (168104,168271) (167)
use␣vars␣qw{
␣␣%html_color
␣␣%html_bold
␣␣%html_italic
␣␣%token_short_names
␣␣%short_to_long_names
␣␣$rOpts
␣␣$css_filename
␣␣$css_linkname
␣␣$missing_html_entities
};
----------
Range: (168273,168350) (77)
#␣replace␣unsafe␣characters␣with␣HTML␣entity␣representation␣if␣HTML::Entities
----------
Range: (168442,168550) (108)
my␣(␣$class,␣$input_file,␣$html_file,␣$extension,␣$html_toc_extension,
␣␣␣␣␣␣␣␣$html_src_extension␣)
␣␣␣␣␣␣=
----------
Range: (169834,169930) (96)
Perl::Tidy::Warn
"unable␣to␣find␣Pod::Html;␣cannot␣use␣pod2html\n-npod␣disables␣this␣message\n";
----------
Range: (170236,170327) (91)
Perl::Tidy::Warn
"cannot␣use␣frames␣without␣a␣specified␣output␣extension;␣ignoring␣-frm\n";
----------
Range: (174252,174329) (77)
<<"TOC_END");
<!--␣BEGIN␣CODE␣INDEX␣--><a␣name="code-index"></a>
<ul>
TOC_END
----------
Range: (174563,174649) (86)
"package-$name"␣}

␣␣␣␣#␣append␣'-1',␣'-2',␣etc␣if␣necessary␣to␣make␣unique;␣this␣will
----------
Range: (175153,175234) (81)
'main'␣}

␣␣␣␣␣␣␣␣#␣if␣we're␣already␣in␣a␣package/sub␣list,␣be␣sure␣its␣the␣right
----------
Range: (187298,187502) (204)
<<"EOM");
/*␣default␣style␣sheet␣generated␣by␣perltidy␣*/
body␣{background:␣$bg_color;␣color:␣$text_color}
pre␣{␣color:␣$text_color;
␣␣␣␣␣␣background:␣$pre_bg_color;
␣␣␣␣␣␣font-family:␣courier;
␣␣␣␣}

EOM
----------
Range: (189683,189774) (91)
Perl::Tidy::Warn
␣␣␣␣␣␣␣␣␣␣"unable␣to␣open␣temporary␣file␣$tmpfile;␣cannot␣use␣pod2html\n";
----------
Range: (190837,190929) (92)
"--$kw=$rOpts->{$kw}"␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣Toggle␣switches;␣these␣have␣extra␣leading␣'pod'
----------
Range: (191887,191978) (91)
Perl::Tidy::Warn
␣␣␣␣␣␣␣␣␣␣"unable␣to␣open␣temporary␣file␣$tmpfile;␣cannot␣use␣pod2html\n";
----------
Range: (196696,196779) (83)
Perl::Tidy::Warn
"Problem␣merging␣html␣stream␣with␣pod2html;␣order␣may␣be␣wrong\n";
----------
Range: (196848,196927) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣If␣didn't␣see␣multiple␣=cut␣lines,␣we'll␣put␣the␣pod␣out␣first
----------
Range: (197241,197318) (77)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣Copy␣any␣remaining␣code␣section␣before␣the␣</body>␣tag
----------
Range: (200541,200679) (138)
<<EOM);
<html>
<head>
<title>$title</title>
</head>
<body>
<h1><a␣href=\"$src_basename#-top-"␣target="$src_frame_name">$title</a></h1>
EOM
----------
Range: (200944,201067) (123)
my␣(
␣␣␣␣␣␣␣␣$title,␣␣␣␣␣␣␣␣$frame_filename,␣$top_basename,
␣␣␣␣␣␣␣␣$toc_basename,␣$src_basename,␣␣␣$src_frame_name
␣␣␣␣)␣=
----------
Range: (201199,201454) (255)
<<EOM);
<!DOCTYPE␣html␣PUBLIC␣"-//W3C//DTD␣XHTML␣1.0␣Frameset//EN"
␣␣␣␣"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<?xml␣version="1.0"␣encoding="iso-8859-1"␣?>
<html␣xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>$title</title>
</head>
EOM
----------
Range: (201555,201694) (139)
<<EOM);
<frameset␣cols="20%,80%">
<frameset␣rows="30%,70%">
<frame␣src␣=␣"$top_basename"␣/>
<frame␣src␣=␣"$toc_basename"␣/>
</frameset>
EOM
----------
Range: (201879,202235) (356)
<<EOM);
<frame␣src␣=␣"$src_basename"␣name␣=␣"$src_frame_name"␣/>
<noframes>
<body>
<p>If␣you␣see␣this␣message,␣you␣are␣using␣a␣non-frame-capable␣web␣client.</p>
<p>This␣document␣contains:</p>
<ul>
<li><a␣href="$toc_basename">A␣table␣of␣contents</a></li>
<li><a␣href="$src_basename">The␣source␣code</a></li>
</ul>
</body>
</noframes>
</frameset>
</html>
EOM
----------
Range: (204296,204373) (77)
qq(<link␣rel="stylesheet"␣href="$css_linkname"␣type="text/css"␣/>)
␣␣␣␣␣␣␣␣);
----------
Range: (205411,205676) (265)
<<"HTML_START");
<!DOCTYPE␣html␣PUBLIC␣"-//W3C//DTD␣XHTML␣1.0␣Transitional//EN"
␣␣␣"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--␣Generated␣by␣perltidy␣on␣$date␣-->
<html␣xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>$title</title>
HTML_START
----------
Range: (205872,206004) (132)
<<"HTML_START");
</head>
<body␣bgcolor=\"$rOpts->{'html-color-background'}\"␣text=\"$rOpts->{'html-color-punctuation'}\">
HTML_START
----------
Range: (206455,206535) (80)
<<"END_PRE");
<hr␣/>
<!--␣contents␣of␣filename:␣$fname_comment␣-->
<pre>
END_PRE
----------
Range: (209298,209375) (77)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#-------------------------------------------------------
----------
Range: (217860,223026) (5166)
use␣vars␣qw{

␣␣@gnu_stack
␣␣$max_gnu_stack_index
␣␣$gnu_position_predictor
␣␣$line_start_index_to_go
␣␣$last_indentation_written
␣␣$last_unadjusted_indentation
␣␣$last_leading_token
␣␣$last_output_short_opening_token

␣␣$saw_VERSION_in_this_file
␣␣$saw_END_or_DATA_

␣␣@gnu_item_list
␣␣$max_gnu_item_index
␣␣$gnu_sequence_number
␣␣$last_output_indentation
␣␣%last_gnu_equals
␣␣%gnu_comma_count
␣␣%gnu_arrow_count

␣␣@block_type_to_go
␣␣@type_sequence_to_go
␣␣@container_environment_to_go
␣␣@bond_strength_to_go
␣␣@forced_breakpoint_to_go
␣␣@token_lengths_to_go
␣␣@summed_lengths_to_go
␣␣@levels_to_go
␣␣@leading_spaces_to_go
␣␣@reduced_spaces_to_go
␣␣@matching_token_to_go
␣␣@mate_index_to_go
␣␣@nesting_blocks_to_go
␣␣@ci_levels_to_go
␣␣@nesting_depth_to_go
␣␣@nobreak_to_go
␣␣@old_breakpoint_to_go
␣␣@tokens_to_go
␣␣@types_to_go
␣␣@inext_to_go
␣␣@iprev_to_go

␣␣%saved_opening_indentation

␣␣$max_index_to_go
␣␣$comma_count_in_batch
␣␣$old_line_count_in_batch
␣␣$last_nonblank_index_to_go
␣␣$last_nonblank_type_to_go
␣␣$last_nonblank_token_to_go
␣␣$last_last_nonblank_index_to_go
␣␣$last_last_nonblank_type_to_go
␣␣$last_last_nonblank_token_to_go
␣␣@nonblank_lines_at_depth
␣␣$starting_in_quote
␣␣$ending_in_quote
␣␣@whitespace_level_stack
␣␣$whitespace_last_level

␣␣$in_format_skipping_section
␣␣$format_skipping_pattern_begin
␣␣$format_skipping_pattern_end

␣␣$forced_breakpoint_count
␣␣$forced_breakpoint_undo_count
␣␣@forced_breakpoint_undo_stack
␣␣%postponed_breakpoint

␣␣$tabbing
␣␣$embedded_tab_count
␣␣$first_embedded_tab_at
␣␣$last_embedded_tab_at
␣␣$deleted_semicolon_count
␣␣$first_deleted_semicolon_at
␣␣$last_deleted_semicolon_at
␣␣$added_semicolon_count
␣␣$first_added_semicolon_at
␣␣$last_added_semicolon_at
␣␣$first_tabbing_disagreement
␣␣$last_tabbing_disagreement
␣␣$in_tabbing_disagreement
␣␣$tabbing_disagreement_count
␣␣$input_line_tabbing

␣␣$last_line_type
␣␣$last_line_leading_type
␣␣$last_line_leading_level
␣␣$last_last_line_leading_level

␣␣%block_leading_text
␣␣%block_opening_line_number
␣␣$csc_new_statement_ok
␣␣$csc_last_label
␣␣%csc_block_label
␣␣$accumulating_text_for_block
␣␣$leading_block_text
␣␣$rleading_block_if_elsif_text
␣␣$leading_block_text_level
␣␣$leading_block_text_length_exceeded
␣␣$leading_block_text_line_length
␣␣$leading_block_text_line_number
␣␣$closing_side_comment_prefix_pattern
␣␣$closing_side_comment_list_pattern

␣␣$last_nonblank_token
␣␣$last_nonblank_type
␣␣$last_last_nonblank_token
␣␣$last_last_nonblank_type
␣␣$last_nonblank_block_type
␣␣$last_output_level
␣␣%is_do_follower
␣␣%is_if_brace_follower
␣␣%space_after_keyword
␣␣$rbrace_follower
␣␣$looking_for_else
␣␣%is_last_next_redo_return
␣␣%is_other_brace_follower
␣␣%is_else_brace_follower
␣␣%is_anon_sub_brace_follower
␣␣%is_anon_sub_1_brace_follower
␣␣%is_sort_map_grep
␣␣%is_sort_map_grep_eval
␣␣%is_sort_map_grep_eval_do
␣␣%is_block_without_semicolon
␣␣%is_if_unless
␣␣%is_and_or
␣␣%is_assignment
␣␣%is_chain_operator
␣␣%is_if_unless_and_or_last_next_redo_return
␣␣%ok_to_add_semicolon_for_block_type

␣␣@has_broken_sublist
␣␣@dont_align
␣␣@want_comma_break

␣␣$is_static_block_comment
␣␣$index_start_one_line_block
␣␣$semicolons_before_block_self_destruct
␣␣$index_max_forced_break
␣␣$input_line_number
␣␣$diagnostics_object
␣␣$vertical_aligner_object
␣␣$logger_object
␣␣$file_writer_object
␣␣$formatter_self
␣␣@ci_stack
␣␣$last_line_had_side_comment
␣␣%want_break_before
␣␣%outdent_keyword
␣␣$static_block_comment_pattern
␣␣$static_side_comment_pattern
␣␣%opening_vertical_tightness
␣␣%closing_vertical_tightness
␣␣%closing_token_indentation
␣␣$some_closing_token_indentation

␣␣%opening_token_right
␣␣%stack_opening_token
␣␣%stack_closing_token

␣␣$block_brace_vertical_tightness_pattern

␣␣$rOpts_add_newlines
␣␣$rOpts_add_whitespace
␣␣$rOpts_block_brace_tightness
␣␣$rOpts_block_brace_vertical_tightness
␣␣$rOpts_brace_left_and_indent
␣␣$rOpts_comma_arrow_breakpoints
␣␣$rOpts_break_at_old_keyword_breakpoints
␣␣$rOpts_break_at_old_comma_breakpoints
␣␣$rOpts_break_at_old_logical_breakpoints
␣␣$rOpts_break_at_old_ternary_breakpoints
␣␣$rOpts_break_at_old_attribute_breakpoints
␣␣$rOpts_closing_side_comment_else_flag
␣␣$rOpts_closing_side_comment_maximum_text
␣␣$rOpts_continuation_indentation
␣␣$rOpts_cuddled_else
␣␣$rOpts_delete_old_whitespace
␣␣$rOpts_fuzzy_line_length
␣␣$rOpts_indent_columns
␣␣$rOpts_line_up_parentheses
␣␣$rOpts_maximum_fields_per_table
␣␣$rOpts_maximum_line_length
␣␣$rOpts_variable_maximum_line_length
␣␣$rOpts_short_concatenation_item_length
␣␣$rOpts_keep_old_blank_lines
␣␣$rOpts_ignore_old_breakpoints
␣␣$rOpts_format_skipping
␣␣$rOpts_space_function_paren
␣␣$rOpts_space_keyword_paren
␣␣$rOpts_keep_interior_semicolons
␣␣$rOpts_ignore_side_comment_lengths
␣␣$rOpts_stack_closing_block_brace
␣␣$rOpts_whitespace_cycle
␣␣$rOpts_tight_secret_operators

␣␣%is_opening_type
␣␣%is_closing_type
␣␣%is_keyword_returning_list
␣␣%tightness
␣␣%matching_token
␣␣$rOpts
␣␣%right_bond_strength
␣␣%left_bond_strength
␣␣%binary_ws_rules
␣␣%want_left_space
␣␣%want_right_space
␣␣%is_digraph
␣␣%is_trigraph
␣␣$bli_pattern
␣␣$bli_list_string
␣␣%is_closing_type
␣␣%is_opening_type
␣␣%is_closing_token
␣␣%is_opening_token
};
----------
Range: (223182,223294) (112)
qw(
␣␣␣␣␣␣..␣::␣<<␣>>␣**␣&&␣..␣||␣//␣->␣=>␣+=␣-=␣.=␣%=␣&=␣|=␣^=␣*=␣<>
␣␣␣␣␣␣<=␣>=␣==␣=~␣!~␣!=␣++␣--␣/=␣x=
␣␣␣␣);
----------
Range: (223435,223525) (90)
qw(
␣␣␣␣␣␣=␣**=␣+=␣*=␣&=␣<<=␣&&=
␣␣␣␣␣␣-=␣/=␣|=␣>>=␣||=␣//=
␣␣␣␣␣␣.=␣%=␣^=
␣␣␣␣␣␣x=
␣␣␣␣);
----------
Range: (223579,223658) (79)
qw(
␣␣␣␣␣␣grep
␣␣␣␣␣␣keys
␣␣␣␣␣␣map
␣␣␣␣␣␣reverse
␣␣␣␣␣␣sort
␣␣␣␣␣␣split
␣␣␣␣);
----------
Range: (224828,224959) (131)
qw(BEGIN␣END␣CHECK␣INIT␣AUTOLOAD␣DESTROY␣UNITCHECK␣continue␣if␣elsif␣else
␣␣␣␣␣␣unless␣while␣until␣for␣foreach␣given␣when␣default);
----------
Range: (225467,225589) (122)
qw(␣BEGIN␣END␣CHECK␣INIT␣AUTOLOAD␣DESTROY␣UNITCHECK␣continue␣if␣elsif␣else
␣␣␣␣␣␣unless␣do␣while␣until␣eval␣for␣foreach␣);
----------
Range: (232520,232627) (107)
"Leading␣whitespace␣will␣be␣entabbed␣with␣$rOpts->{'entab-leading-whitespace'}␣spaces␣per␣tab\n"
␣␣␣␣␣␣␣␣);
----------
Range: (233142,233232) (90)
confess
"Attempt␣to␣create␣more␣than␣1␣object␣in␣$class,␣which␣is␣not␣a␣true␣class␣yet\n";
----------
Range: (240829,240921) (92)
'{'
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣2␣Then␣either␣a␣brace␣or␣bracket
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (244805,244934) (129)
2

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣we␣are␣beyond␣the␣1/4␣point␣and␣there␣was␣an␣old
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣break␣at␣the␣equals
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (245403,245516) (113)
$old_breakpoint_to_go[␣$last_equals␣-␣2␣]␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (247608,247689) (81)
$gnu_stack[$max_gnu_stack_index]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣->get_SEQUENCE_NUMBER(
----------
Range: (248100,248254) (154)
"Program␣bug␣with␣-lp.␣␣seqno=$seqno␣should␣be␣$gnu_sequence_number␣and␣i=$i␣should␣be␣less␣than␣max=$max_gnu_item_index\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (248451,248544) (93)
$gnu_item_list[$i]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣->permanently_decrease_AVAILABLE_SPACES(
----------
Range: (248698,248791) (93)
$gnu_item_list[$i]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣->tentatively_decrease_AVAILABLE_SPACES(
----------
Range: (249304,249408) (104)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣go␣down␣one␣level
----------
Range: (249980,250065) (85)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣reached␣bottom␣of␣stack␣..␣should␣never␣happen␣because
----------
Range: (250217,250350) (133)
"program␣bug␣with␣-lp:␣stack_error.␣level=$level;␣lev=$lev;␣ci_level=$ci_level;␣ci_lev=$ci_lev;␣rerun␣with␣-nlp\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (251849,251927) (78)
}

␣␣␣␣␣␣␣␣#␣otherwise␣use␣the␣space␣to␣the␣first␣non-blank␣level␣change␣token
----------
Range: (254154,254245) (91)
$gnu_stack[$max_gnu_stack_index]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣->tentatively_decrease_AVAILABLE_SPACES(
----------
Range: (254276,254362) (86)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣Count␣commas␣and␣look␣for␣non-list␣characters.␣␣Once␣we␣see␣a
----------
Range: (255223,255329) (106)
/^([\:\?\,f])$/

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣previous␣character␣was␣opening␣and␣this␣does␣not␣close␣it
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (255522,255603) (81)
/^([\.]|\|\||\&\&)$/

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣this␣is␣a␣closing␣structure
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (255690,255786) (96)
$last_nonblank_type_to_go␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣previous␣token␣was␣keyword␣'return'
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (255894,255982) (88)
'{'␣)␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣starting␣a␣new␣line␣at␣certain␣keywords␣is␣fine
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (256019,256158) (139)
$is_if_unless_and_or_last_next_redo_return{$token}␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣this␣is␣after␣an␣assignment␣after␣a␣closing␣structure
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (256294,256389) (95)
/^[\}\)\]]$/

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣it␣is␣significantly␣to␣the␣right
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (257133,257236) (103)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣remember␣the␣predicted␣position␣of␣this␣token␣on␣the␣output␣line
----------
Range: (260896,261078) (182)
"program␣bug␣with␣-lp:␣want␣to␣delete␣$deleted_spaces␣from␣item␣$i,␣but␣old=$old_spaces␣deleted:␣lev=$level␣ci=$ci_level␣␣deleted:␣level=$old_level␣ci=$ci_level\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (267184,267271) (87)
"This␣means␣the␣display␣of␣this␣script␣could␣vary␣with␣device␣or␣software\n"
␣␣␣␣␣␣␣␣);
----------
Range: (267613,267705) (92)
"First␣indentation␣disagreement␣seen␣at␣input␣line␣$first_tabbing_disagreement\n"
␣␣␣␣␣␣␣␣);
----------
Range: (267778,267882) (104)
"Ending␣with␣indentation␣disagreement␣which␣started␣at␣input␣line␣$in_tabbing_disagreement\n"
␣␣␣␣␣␣␣␣);
----------
Range: (267977,268071) (94)
"Last␣indentation␣disagreement␣seen␣at␣input␣line␣$last_tabbing_disagreement\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (268252,268347) (95)
"Note:␣Indentation␣disagreement␣detection␣is␣not␣accurate␣for␣outdenting␣and␣-lp.\n"
␣␣␣␣␣␣␣␣);
----------
Range: (270494,270947) (453)
Perl::Tidy::Warn␣<<EOM;
-----------------------------------------------------------------------
Conflict:␣-lp␣␣conflicts␣with␣-io,␣-fnl,␣-nanl,␣or␣-ndnl;␣ignoring␣-lp

The␣-lp␣indentation␣logic␣requires␣that␣perltidy␣be␣able␣to␣coordinate
arbitrarily␣large␣numbers␣of␣line␣breakpoints.␣␣This␣isn't␣possible
with␣these␣flags.␣Sometimes␣an␣acceptable␣workaround␣is␣to␣use␣-wocb=3
-----------------------------------------------------------------------
EOM
----------
Range: (271005,271090) (85)
}
␣␣␣␣}

␣␣␣␣#␣At␣present,␣tabs␣are␣not␣compatible␣with␣the␣line-up-parentheses␣style
----------
Range: (271281,271387) (106)
Perl::Tidy::Warn␣<<EOM;
Conflict:␣-t␣(tabs)␣cannot␣be␣used␣with␣the␣-lp␣␣option;␣ignoring␣-t;␣see␣-et.
EOM
----------
Range: (271553,271660) (107)
Perl::Tidy::Warn␣<<EOM;
Conflict:␣-t␣(tabs)␣cannot␣be␣used␣with␣the␣-okw␣options;␣ignoring␣-t;␣see␣-et.
EOM
----------
Range: (271766,271873) (107)
Perl::Tidy::Warn␣<<EOM;
Conflict:␣-t␣(tabs)␣cannot␣be␣used␣with␣the␣-ola␣␣option;␣ignoring␣-t;␣see␣-et.
EOM
----------
Range: (273365,273444) (79)
}

␣␣␣␣#␣default␣keywords␣for␣which␣space␣is␣introduced␣before␣an␣opening␣paren
----------
Range: (273518,273633) (115)
qw(my␣local␣our␣and␣or␣err␣eq␣ne␣if␣else␣elsif␣until
␣␣␣␣␣␣unless␣while␣for␣foreach␣return␣switch␣case␣given␣when);
----------
Range: (274223,274365) (142)
qw(%␣+␣-␣*␣/␣x␣!=␣==␣>=␣<=␣=~␣!~␣<␣>␣|␣&
␣␣␣␣␣␣=␣**=␣+=␣*=␣&=␣<<=␣&&=␣-=␣/=␣|=␣>>=␣||=␣//=␣.=␣%=␣^=␣x=
␣␣␣␣␣␣.␣:␣?␣&&␣||␣and␣or␣err␣xor
␣␣␣␣);
----------
Range: (275993,276073) (80)
}

␣␣␣␣#␣Define␣here␣tokens␣which␣may␣follow␣the␣closing␣brace␣of␣a␣do␣statement
----------
Range: (278057,278154) (97)
Perl::Tidy::Die␣<<EOM;
Unrecognized␣character-encoding␣'$enc';␣expecting␣one␣of:␣(none,␣utf8)
EOM
----------
Range: (279418,279500) (82)
Perl::Tidy::Die␣<<EOM;
Unrecognized␣line␣ending␣'$ole';␣expecting␣one␣of:␣$str
EOM
----------
Range: (285505,285594) (89)
Perl::Tidy::Die
"ERROR:␣the␣-sbcp␣prefix␣is␣'$prefix'␣but␣must␣begin␣with␣'#'␣or␣'^#'\n";
----------
Range: (285723,285812) (89)
Perl::Tidy::Die
"ERROR:␣the␣-sbc␣prefix␣'$prefix'␣causes␣the␣invalid␣regex␣'$pattern'\n";
----------
Range: (286093,286183) (90)
Perl::Tidy::Die
␣␣␣␣␣␣␣␣␣␣"ERROR:␣the␣$opt_name␣parameter␣'$param'␣must␣begin␣with␣'#'\n";
----------
Range: (286279,286375) (96)
Perl::Tidy::Die
"ERROR:␣the␣$opt_name␣parameter␣'$param'␣causes␣the␣invalid␣regex␣'$pattern'\n";
----------
Range: (288689,288775) (86)
Perl::Tidy::Warn
␣␣␣␣␣␣␣␣␣␣␣␣␣␣"unrecognized␣block␣type␣$i␣after␣$abbrev,␣ignoring\n";
----------
Range: (289398,289488) (90)
Perl::Tidy::Die
"ERROR:␣the␣-sscp␣prefix␣'$prefix'␣causes␣the␣invalid␣regex␣'$pattern'\n";
----------
Range: (290726,290840) (114)
Perl::Tidy::Warn
"Program␣Error:␣the␣-cscp␣prefix␣'$csc_prefix'␣caused␣the␣invalid␣regex␣'$csc_prefix_pattern'\n";
----------
Range: (290986,291070) (84)
Perl::Tidy::Warn
␣␣␣␣␣␣␣␣␣␣␣␣␣␣"Using␣default␣-cscp␣instead;␣please␣check␣output\n";
----------
Range: (291422,291801) (379)
print␣$fh␣<<EOM;
These␣values␣are␣the␣main␣control␣of␣whitespace␣to␣the␣left␣of␣a␣token␣type;
They␣may␣be␣altered␣with␣the␣-wls␣parameter.
For␣a␣list␣of␣token␣types,␣use␣perltidy␣--dump-token-types␣(-dtt)
␣1␣means␣the␣token␣wants␣a␣space␣to␣its␣left
-1␣means␣the␣token␣does␣not␣want␣a␣space␣to␣its␣left
------------------------------------------------------------------------
EOM
----------
Range: (291977,292359) (382)
print␣$fh␣<<EOM;
These␣values␣are␣the␣main␣control␣of␣whitespace␣to␣the␣right␣of␣a␣token␣type;
They␣may␣be␣altered␣with␣the␣-wrs␣parameter.
For␣a␣list␣of␣token␣types,␣use␣perltidy␣--dump-token-types␣(-dtt)
␣1␣means␣the␣token␣wants␣a␣space␣to␣its␣right
-1␣means␣the␣token␣does␣not␣want␣a␣space␣to␣its␣right
------------------------------------------------------------------------
EOM
----------
Range: (294184,294375) (191)
/^([\'\w]|\:\:)/␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣do␣not␣combine␣a␣number␣with␣a␣concatenation␣dot
␣␣␣␣␣␣␣␣␣␣#␣example:␣pom.caputo:
␣␣␣␣␣␣␣␣␣␣#␣$vt100_compatible␣?␣"\e[0;0H"␣:␣('-'␣x␣78␣.␣"\n");
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (294469,294703) (234)
'.'␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣do␣not␣join␣a␣minus␣with␣a␣bare␣word,␣because␣you␣might␣form
␣␣␣␣␣␣␣␣␣␣#␣a␣file␣test␣operator.␣␣Example␣from␣Complex.pm:
␣␣␣␣␣␣␣␣␣␣#␣if␣(CORE::abs($z␣-␣i)␣<␣$eps);␣"z-i"␣would␣be␣taken␣as␣a␣file␣test.
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (294741,294989) (248)
/^[_A-Za-z]$/␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣and␣something␣like␣this␣could␣become␣ambiguous␣without␣space
␣␣␣␣␣␣␣␣␣␣#␣after␣the␣'-':
␣␣␣␣␣␣␣␣␣␣#␣␣␣use␣constant␣III=>1;
␣␣␣␣␣␣␣␣␣␣#␣␣␣$a␣=␣$b␣-␣III;
␣␣␣␣␣␣␣␣␣␣#␣and␣even␣this:
␣␣␣␣␣␣␣␣␣␣#␣␣␣$a␣=␣-␣III;
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (295061,295343) (282)
/^[_A-Za-z]/␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣'=␣-'␣should␣not␣become␣=-␣or␣you␣will␣get␣a␣warning
␣␣␣␣␣␣␣␣␣␣#␣about␣reversed␣-=
␣␣␣␣␣␣␣␣␣␣#␣||␣($tokenr␣eq␣'-')

␣␣␣␣␣␣␣␣␣␣#␣keep␣a␣space␣between␣a␣quote␣and␣a␣bareword␣to␣prevent␣the
␣␣␣␣␣␣␣␣␣␣#␣bareword␣from␣becoming␣a␣quote␣modifier.
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (295380,295528) (148)
/^[a-zA-Z_]/␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣keep␣a␣space␣between␣a␣token␣ending␣in␣'$'␣and␣any␣word;
␣␣␣␣␣␣␣␣␣␣#␣this␣caused␣trouble:␣␣"die␣@$␣if␣$@"
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (295597,295681) (84)
/^[a-zA-Z_]/␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣perl␣is␣very␣fussy␣about␣spaces␣before␣<<
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (295695,295833) (138)
/^\<\</␣)

␣␣␣␣␣␣␣␣␣␣#␣avoid␣combining␣tokens␣to␣create␣new␣meanings.␣Example:
␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣$a+␣+$b␣must␣not␣become␣$a++$b
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (295886,296039) (153)
$is_trigraph{␣$tokenl␣.␣$tokenr␣}␣)

␣␣␣␣␣␣␣␣␣␣#␣another␣example:␣do␣not␣combine␣these␣two␣&'s:
␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣allow_options␣&␣&OPT_EXECCGI
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (296042,296209) (167)
$is_digraph{␣$tokenl␣.␣substr(␣$tokenr,␣0,␣1␣)␣}␣)

␣␣␣␣␣␣␣␣␣␣#␣don't␣combine␣$$␣or␣$#␣with␣any␣alphanumeric
␣␣␣␣␣␣␣␣␣␣#␣(testfile␣mangle.t␣with␣--mangle)
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (296256,296411) (155)
/^\w/␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣retain␣any␣space␣after␣possible␣filehandle
␣␣␣␣␣␣␣␣␣␣#␣(testfiles␣prnterr1.t␣with␣--extrude␣and␣mangle.t␣with␣--mangle)
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (296424,296550) (126)
'Z'␣)

␣␣␣␣␣␣␣␣␣␣#␣Perl␣is␣sensitive␣to␣whitespace␣after␣the␣+␣here:
␣␣␣␣␣␣␣␣␣␣#␣␣$b␣=␣xvals␣$a␣+␣0.1␣*␣yvals␣$a;
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (296581,296666) (85)
/^[\/\?\+\-\*]$/␣)

␣␣␣␣␣␣␣␣␣␣#␣keep␣paren␣separate␣in␣'use␣Foo::Bar␣()'
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (296770,296889) (119)
'use'␣)

␣␣␣␣␣␣␣␣␣␣#␣keep␣any␣space␣between␣filehandle␣and␣paren:
␣␣␣␣␣␣␣␣␣␣#␣file␣mangle.t␣with␣--mangle:
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (296920,297005) (85)
'('␣)

␣␣␣␣␣␣␣␣␣␣#␣retain␣any␣space␣after␣here␣doc␣operator␣(␣hereerr.t)
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (297018,297151) (133)
'h'␣)

␣␣␣␣␣␣␣␣␣␣#␣be␣careful␣with␣a␣space␣around␣++␣and␣--,␣to␣avoid␣ambiguity␣as␣to
␣␣␣␣␣␣␣␣␣␣#␣which␣token␣it␣applies
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (297279,297459) (180)
/^[\;\}\)\]]/␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣need␣space␣after␣foreach␣my;␣for␣example,␣this␣will␣fail␣in
␣␣␣␣␣␣␣␣␣␣#␣older␣versions␣of␣Perl:
␣␣␣␣␣␣␣␣␣␣#␣foreach␣my$ft(@filetypes)...
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (297591,297697) (106)
/^\$/
␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣#␣must␣have␣space␣between␣grep␣and␣left␣paren;␣"grep("␣will␣fail
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (297718,297893) (175)
$is_sort_grep_map{$tokenl}␣)

␣␣␣␣␣␣␣␣␣␣#␣don't␣stick␣numbers␣next␣to␣left␣parens,␣as␣in:
␣␣␣␣␣␣␣␣␣␣#use␣Mail::Internet␣1.28␣();␣(see␣Entity.pm,␣Head.pm,␣Test.pm)
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (297930,298654) (724)
'('␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣We␣must␣be␣sure␣that␣a␣space␣between␣a␣?␣and␣a␣quoted␣string
␣␣␣␣␣␣␣␣␣␣#␣remains␣if␣the␣space␣before␣the␣?␣remains.␣␣[Loca.pm,␣lockarea]
␣␣␣␣␣␣␣␣␣␣#␣ie,
␣␣␣␣␣␣␣␣␣␣#␣␣␣␣$b=join␣$comma␣?␣','␣:␣':',␣@_;␣␣#␣ok
␣␣␣␣␣␣␣␣␣␣#␣␣␣␣$b=join␣$comma?','␣:␣':',␣@_;␣␣␣␣#␣ok!
␣␣␣␣␣␣␣␣␣␣#␣␣␣␣$b=join␣$comma␣?','␣:␣':',␣@_;␣␣␣#␣error!
␣␣␣␣␣␣␣␣␣␣#␣Not␣really␣required:
␣␣␣␣␣␣␣␣␣␣##␣||␣(␣(␣$typel␣eq␣'?'␣)␣&&␣(␣$typer␣eq␣'Q'␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣do␣not␣remove␣space␣between␣an␣'&'␣and␣a␣bare␣word␣because
␣␣␣␣␣␣␣␣␣␣#␣it␣may␣turn␣into␣a␣function␣evaluation,␣like␣here
␣␣␣␣␣␣␣␣␣␣#␣between␣'&'␣and␣'O_ACCMODE',␣producing␣a␣syntax␣error␣[File.pm]
␣␣␣␣␣␣␣␣␣␣#␣␣␣␣$opts{rdonly}␣=␣(($opts{mode}␣&␣O_ACCMODE)␣==␣O_RDONLY);
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (298691,298789) (98)
/^[a-zA-Z_]/␣)␣)

␣␣␣␣␣␣␣␣␣␣#␣space␣stacked␣labels␣␣(TODO:␣check␣if␣really␣necessary)
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (303494,303705) (211)
qw"
␣␣␣␣␣␣␣␣␣␣+␣-␣*␣/␣%␣?␣=␣.␣:␣x␣<␣>␣|␣&␣^␣..␣<<␣>>␣**␣&&␣..␣||␣//␣=>␣+=␣-=
␣␣␣␣␣␣␣␣␣␣.=␣%=␣x=␣&=␣|=␣^=␣*=␣<>␣<=␣>=␣==␣=~␣!~␣/=␣!=␣...␣<<=␣>>=␣~~␣!~~
␣␣␣␣␣␣␣␣␣␣&&=␣||=␣//=␣<=>␣A␣k␣f␣w␣F␣n␣C␣Y␣U␣G␣v
␣␣␣␣␣␣␣␣␣␣";
----------
Range: (307379,307464) (85)
my␣(␣$last_token,␣$last_type,␣$last_block_type,␣$token,␣$type,
␣␣␣␣␣␣␣␣$block_type␣);
----------
Range: (308947,309039) (92)
$token␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#---------------------------------------------------------------
----------
Range: (311122,311226) (104)
$tightness{$last_token}␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#=============================================================
----------
Range: (311998,312081) (83)
1␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#=============================================================
----------
Range: (313317,313441) (124)
$matching_token{$last_token}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣but␣watch␣out␣for␣this:␣[␣[␣]␣␣␣␣(misc.t)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (313812,313905) (93)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}␣␣␣␣#␣end␣setting␣space␣flag␣inside␣opening␣tokens
----------
Range: (316074,316158) (84)
WS_YES␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣NOTE:␣some␣older␣versions␣of␣Perl␣had␣occasional␣problems␣if
----------
Range: (318201,318286) (85)
WS_YES␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣avoid␣any␣space␣before␣the␣brace␣or␣bracket␣in␣something␣like
----------
Range: (329043,329142) (99)
"STORE:␣from␣$a␣$c:␣storing␣token␣$token␣type␣$type␣lev=$level␣slev=$slevel␣at␣$max_index_to_go\n";
----------
Range: (333423,333504) (81)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣Write␣line␣verbatim␣if␣we␣are␣in␣a␣formatting␣skip␣section
----------
Range: (335292,335370) (78)
}

␣␣␣␣␣␣␣␣#␣see␣if␣this␣is␣a␣static␣block␣comment␣(starts␣with␣##␣by␣default)
----------
Range: (336145,336320) (175)
/^\#␣␣␣\s*
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣line␣\s+␣(\d+)␣␣␣\s*
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣(?:\s("?)([^"]+)\2)?␣\s*
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$/x
␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣{
----------
Range: (336824,336903) (79)
$is_static_block_comment␣␣␣␣#␣do␣not␣make␣static␣comment␣hanging
␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (336904,337121) (217)
$rOpts->{'hanging-side-comments'}␣␣␣␣#␣user␣is␣allowing
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣hanging␣side␣comments
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣like␣this
␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣{
----------
Range: (338793,338902) (109)
$rOpts->{'blanks-before-comments'}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣not␣if␣this␣is␣an␣empty␣comment␣line
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (338919,339221) (302)
'#'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣not␣after␣a␣short␣line␣ending␣in␣an␣opening␣token
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣because␣we␣already␣have␣space␣above␣this␣comment.
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Note␣that␣the␣first␣comment␣in␣this␣if␣block,␣after
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣the␣'if␣(',␣does␣not␣get␣a␣blank␣line␣because␣of␣this.
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (339223,339328) (105)
$last_output_short_opening_token

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣never␣before␣static␣block␣comments
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (344988,345070) (82)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣If␣we␣just␣saw␣the␣end␣of␣an␣elsif␣block,␣write␣nag␣message
----------
Range: (345638,345746) (108)
'}'␣)
␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣Patch␣for␣RT␣#98902.␣Honor␣request␣to␣break␣at␣old␣commas.
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (346548,346668) (120)
$rOpts->{'delete-side-comments'}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣delete␣closing␣side␣comments␣if␣necessary
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (346871,346948) (77)
/$closing_side_comment_list_pattern/o␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (347127,347218) (91)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣If␣we␣are␣continuing␣after␣seeing␣a␣right␣curly␣brace,␣flush
----------
Range: (348355,348434) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Split␣identifiers␣with␣leading␣arrows,␣inserting␣blanks␣if
----------
Range: (349844,349926) (82)
s/\s+/␣/g␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣trim␣identifiers␣of␣trailing␣blanks␣which␣can␣occur
----------
Range: (350987,351072) (85)
/^(=|==|!=)$/

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣preceded␣by␣simple␣scalar
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (351157,351321) (164)
/^\$/

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣followed␣by␣some␣kind␣of␣termination
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣(but␣give␣complaint␣if␣we␣can's␣see␣far␣enough␣ahead)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (351346,351427) (81)
/^[;␣\)\}]$/

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣scalar␣is␣not␣declared
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (351528,351606) (78)
/^(my|our|local)$/
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (351713,351810) (97)
"Note:␣be␣sure␣you␣want␣'$last_nonblank_token'␣instead␣of␣'$guess'␣here\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (352766,352856) (90)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣Do␣not␣allow␣breaks␣which␣would␣promote␣a␣side␣comment␣to␣a
----------
Range: (355267,355347) (80)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣decide␣if␣user␣requested␣break␣before␣'{'
----------
Range: (355506,355620) (114)
$rOpts->{'opening-brace-on-new-line'}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣use␣-sbl␣flag␣for␣a␣named␣sub␣block
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣:
----------
Range: (355667,355791) (124)
$rOpts->{'opening-sub-brace-on-new-line'}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣use␣-asbl␣flag␣for␣an␣anonymous␣sub␣block
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣:
----------
Range: (355973,356079) (106)
$want_break

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣we␣were␣unable␣to␣start␣looking␣for␣a␣block,
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (356111,356374) (263)
UNDEFINED_INDEX

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣if␣it␣will␣not␣be␣on␣same␣line␣as␣its␣keyword,␣so␣that
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣it␣will␣be␣outdented␣(eval.t,␣overload.t),␣and␣the␣user
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣has␣not␣insisted␣on␣keeping␣it␣on␣the␣right
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (356430,356512) (82)
$rOpts->{'opening-brace-always-on-right'}␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (357825,357913) (88)
0

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣if␣it␣has␣too␣many␣semicolons
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (358138,358235) (97)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣put␣a␣break␣before␣this␣closing␣curly␣brace␣if␣appropriate
----------
Range: (358539,358618) (79)
0␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣we␣don't␣have␣one
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (358644,358732) (88)
';'␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣we␣are␣allowed␣to␣do␣so.
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (358733,358855) (122)
$rOpts->{'add-semicolons'}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣we␣are␣allowed␣to␣for␣this␣block␣type
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (358860,358939) (79)
$ok_to_add_semicolon_for_block_type{$block_type}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (360177,360259) (82)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣then␣write␣out␣everything␣before␣this␣closing␣curly␣brace
----------
Range: (362098,362309) (211)
$is_block_without_semicolon{$block_type}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Follow␣users␣break␣point␣for
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣one␣line␣block␣types␣U␣&␣G,␣such␣as␣a␣'try'␣block
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (362350,362484) (134)
$jmax
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣if␣needless␣semicolon␣follows␣we␣handle␣it␣later
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (362655,362755) (100)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣set␣string␣indicating␣what␣we␣need␣to␣look␣for␣brace␣follower
----------
Range: (363808,363899) (91)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣None␣of␣the␣above:␣specify␣what␣can␣follow␣a␣closing
----------
Range: (364217,364297) (80)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣See␣if␣an␣elsif␣block␣is␣followed␣by␣another␣elsif␣or␣else;
----------
Range: (364760,364878) (118)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣keep␣going␣after␣certain␣block␣types␣(map,sort,grep,eval)
----------
Range: (366662,366780) (118)
$is_block_without_semicolon{
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$last_nonblank_block_type}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (367053,367235) (182)
$rOpts->{'delete-semicolons'}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣don't␣delete␣;␣before␣a␣#␣because␣it␣would␣promote␣it
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣to␣a␣block␣comment
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (370286,370523) (237)
$rOpts->{'delete-side-comments'}␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣if␣this␣line␣ends␣in␣a␣quote
␣␣␣␣␣␣␣␣␣␣␣␣#␣NOTE:␣This␣is␣critically␣important␣for␣insuring␣that␣quoted␣lines
␣␣␣␣␣␣␣␣␣␣␣␣#␣do␣not␣get␣processed␣by␣things␣like␣-sot␣and␣-sct
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (370595,370683) (88)
$is_VERSION_statement

␣␣␣␣␣␣␣␣␣␣␣␣#␣to␣keep␣a␣label␣at␣the␣end␣of␣a␣line
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (370693,370775) (82)
'J'

␣␣␣␣␣␣␣␣␣␣␣␣#␣if␣we␣are␣instructed␣to␣keep␣all␣old␣line␣breaks
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (371258,371336) (78)
#␣pipeline␣to␣the␣VerticalAligner␣package,␣breaking␣the␣line␣into␣continuation
----------
Range: (371610,371777) (167)
"OUTPUT:␣output_line_to_go␣called:␣$a␣$c␣$last_nonblank_type␣$last_nonblank_token,␣one_line=$index_start_one_line_block,␣tokens␣to␣write=$max_index_to_go\n"
␣␣␣␣␣␣␣␣);
----------
Range: (372955,373111) (156)
$block_type_to_go[$max_index_to_go]

␣␣␣␣␣␣␣␣#␣but␣not␣one␣of␣these␣which␣are␣never␣duplicated␣on␣a␣line:
␣␣␣␣␣␣␣␣#␣until|while|for|if|elsif|else
␣␣␣␣␣␣␣␣&&
----------
Range: (373113,373193) (80)
$is_block_without_semicolon{␣$block_type_to_go[$max_index_to_go]␣}
␣␣␣␣␣␣)
␣␣␣␣{
----------
Range: (373834,373920) (86)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣quit␣if␣we␣see␣anything␣besides␣words,␣function,␣blanks
----------
Range: (376916,376998) (82)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣update␣blank␣line␣variables␣and␣count␣number␣of␣consecutive
----------
Range: (377856,377953) (97)
"FLUSH:␣flushing␣from␣$package␣$file␣$line,␣types=␣$types_to_go[$imin]␣to␣$types_to_go[$imax]\n";
----------
Range: (378273,378409) (136)
1

␣␣␣␣␣␣␣␣␣␣␣␣#␣must␣always␣call␣scan_list()␣with␣unbalanced␣batches␣because␣it
␣␣␣␣␣␣␣␣␣␣␣␣#␣is␣maintaining␣some␣stacks
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (378430,378512) (82)
)

␣␣␣␣␣␣␣␣␣␣␣␣#␣call␣scan_list␣if␣we␣might␣want␣to␣break␣at␣commas
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (378669,378806) (137)
0␣)
␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣call␣scan_list␣if␣user␣may␣want␣to␣break␣open␣some␣one-line
␣␣␣␣␣␣␣␣␣␣␣␣#␣hash␣references
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (379407,379555) (148)
$rOpts_add_newlines

␣␣␣␣␣␣␣␣␣␣␣␣#␣or,␣we␣don't␣already␣have␣an␣interior␣breakpoint
␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣we␣didn't␣see␣a␣good␣breakpoint
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (379623,379701) (78)
$saw_good_break

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣this␣line␣is␣'short'
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (382402,382500) (98)
my␣(␣$j,␣$jmax,␣$level,␣$slevel,␣$ci_level,␣$rtokens,␣$rtoken_type,
␣␣␣␣␣␣␣␣$rblock_type␣)
␣␣␣␣␣␣=
----------
Range: (385363,385442) (79)
}

␣␣␣␣␣␣␣␣#␣Patch␣to␣avoid␣breaking␣short␣blocks␣defined␣with␣extended_syntax:
----------
Range: (386972,387053) (81)
}

␣␣␣␣␣␣␣␣#␣or␣encounter␣another␣opening␣brace␣before␣finding␣the␣closing␣brace.
----------
Range: (387924,388010) (86)
##␣grep␣{␣$_->foo␣ne␣'bar'␣}␣#␣asdfa␣asdf␣asdf␣asdf␣asdf␣asdf␣asdf␣asdf␣asdf␣asdf␣asdf
----------
Range: (392272,392368) (96)
';'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣with␣possible␣side␣comment
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (397195,397356) (161)
my␣(␣$ibeg,␣$ibeg_next,␣$ibegm,␣$iend,␣$iendm,␣$ipad,␣$line,
␣␣␣␣␣␣␣␣␣␣␣␣$pad_spaces,
␣␣␣␣␣␣␣␣␣␣␣␣$tok_next,␣$type_next,␣$has_leading_op_next,␣$has_leading_op␣);
----------
Range: (404678,404788) (110)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣find␣interior␣token␣to␣pad␣if␣necessary
----------
Range: (406438,406516) (78)
##␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$font->{'loca'}->{'glyphs'}[$x]->read->{'xMin'}␣*␣1000
----------
Range: (408850,408943) (93)
$types_match

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣keywords␣must␣match␣if␣keyword
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (409038,409134) (96)
$tokens_to_go[$inext_next]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (413983,414060) (77)
$pad_spaces--␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣make␣sure␣this␣won't␣change␣if␣-lp␣is␣used
----------
Range: (414502,414621) (119)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣we␣might␣be␣able␣to␣handle␣a␣pad␣of␣-1␣by␣removing␣a␣blank
----------
Range: (423840,423991) (151)
0

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣but␣we␣should␣only␣move␣right␣if␣we␣are␣sure␣it␣will
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣not␣spoil␣vertical␣alignment
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (424365,424452) (87)
$saw_indentation{$_}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣->permanently_decrease_AVAILABLE_SPACES(
----------
Range: (424483,424577) (94)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Otherwise,␣record␣what␣we␣want␣and␣the␣vertical␣aligner
----------
Range: (426992,427293) (301)
$rOpts_closing_side_comment_maximum_text

␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣either:
␣␣␣␣␣␣␣␣␣␣␣␣#␣the␣new␣total␣line␣length␣must␣be␣below␣the␣line␣length␣limit
␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣the␣new␣length␣must␣be␣below␣the␣text␣length␣limit
␣␣␣␣␣␣␣␣␣␣␣␣#␣(ie,␣we␣may␣allow␣one␣token␣to␣exceed␣the␣text␣length␣limit)
␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (427486,427958) (472)
$rOpts_closing_side_comment_maximum_text
␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣UNLESS:␣we␣are␣adding␣a␣closing␣paren␣before␣the␣brace␣we␣seek.
␣␣␣␣␣␣␣␣␣␣␣␣#␣This␣is␣an␣attempt␣to␣avoid␣situations␣where␣the␣...␣to␣be
␣␣␣␣␣␣␣␣␣␣␣␣#␣added␣are␣longer␣than␣the␣omitted␣right␣paren,␣as␣in:

␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣foreach␣my␣$item␣(@a_rather_long_variable_name_here)␣{
␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣␣&whatever;
␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣}␣##␣end␣foreach␣my␣$item␣(@a_rather_long_variable_name_here...

␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (428368,428452) (84)
$accumulating_text_for_block␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣{
----------
Range: (431814,431897) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣if␣we␣run␣into␣a␣'}'␣then␣we␣probably␣started␣accumulating
----------
Range: (435765,435862) (97)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣Treat␣an␣'else'␣block␣specially␣by␣adding␣preceding␣'if'␣and
----------
Range: (440956,441083) (127)
my␣(␣$terminal_type,␣$i_terminal,␣$i_block_leading_text,
␣␣␣␣␣␣␣␣$block_leading_text,␣$block_line_count,␣$block_label␣)
␣␣␣␣␣␣=
----------
Range: (441574,441688) (114)
$rOpts->{'closing-side-comment-interval'}␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣there␣is␣an␣existing␣comment␣to␣check
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (441731,441853) (122)
$rOpts->{'closing-side-comment-warnings'}␣)
␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣#␣..␣and␣if␣this␣is␣one␣of␣the␣types␣of␣interest
␣␣␣␣␣␣␣␣&&
----------
Range: (441896,442273) (377)
/$closing_side_comment_list_pattern/o

␣␣␣␣␣␣␣␣#␣..␣but␣not␣an␣anonymous␣sub
␣␣␣␣␣␣␣␣#␣These␣are␣not␣normally␣of␣interest,␣and␣their␣closing␣braces␣are
␣␣␣␣␣␣␣␣#␣often␣followed␣by␣commas␣or␣semicolons␣anyway.␣␣This␣also␣avoids
␣␣␣␣␣␣␣␣#␣possible␣erratic␣output␣due␣to␣line␣numbering␣inconsistencies
␣␣␣␣␣␣␣␣#␣in␣the␣cases␣where␣their␣closing␣braces␣terminate␣a␣line.
␣␣␣␣␣␣␣␣&&
----------
Range: (442308,442532) (224)
'sub'

␣␣␣␣␣␣␣␣#␣..and␣the␣corresponding␣opening␣brace␣must␣is␣not␣in␣this␣batch
␣␣␣␣␣␣␣␣#␣(because␣we␣do␣not␣need␣to␣tag␣one-line␣blocks,␣although␣this
␣␣␣␣␣␣␣␣#␣should␣also␣be␣caught␣with␣a␣positive␣-csci␣value)
␣␣␣␣␣␣␣␣&&
----------
Range: (442691,442789) (98)
$have_side_comment

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣the␣old␣side␣comment␣is␣a␣closing␣side␣comment
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (443022,443107) (85)
"$rOpts->{'closing-side-comment-prefix'}␣$block_label$block_type_to_go[$i_terminal]";
----------
Range: (444827,444918) (91)
$new_csc␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣if␣old␣comment␣is␣contained␣in␣new␣comment,
----------
Range: (445981,446068) (87)
"perltidy␣-cscw␣replaced:␣$tokens_to_go[$max_index_to_go]\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (447042,447136) (94)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣switch␣to␣the␣new␣csc␣(unless␣we␣deleted␣it!)
----------
Range: (450220,450354) (134)
}

␣␣␣␣␣␣␣␣my␣(␣$indentation,␣$lev,␣$level_end,␣$terminal_type,
␣␣␣␣␣␣␣␣␣␣␣␣$is_semicolon_terminated,␣$is_outdented_line␣)
␣␣␣␣␣␣␣␣␣␣=
----------
Range: (450660,450767) (107)
$rOpts->{'outdent-long-quotes'}␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣which␣are␣long␣block␣comments,␣if␣allowed
␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (450835,450948) (113)
$rOpts->{'outdent-long-comments'}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣but␣not␣if␣this␣is␣a␣static␣block␣comment
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (452777,453083) (306)
$lev␣)␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣the␣terminal␣term␣must␣not␣contain␣any␣ternary␣terms,␣as␣in
␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣my␣$ECHO␣=␣(
␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣␣␣$Is_MSWin32␣?␣".\\echo$$"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣:␣$Is_MacOS␣␣␣?␣":echo$$"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣:␣(␣$Is_NetWare␣?␣"echo$$"␣:␣"./echo$$"␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣);
␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (454310,454394) (84)
$last_output_short_opening_token

␣␣␣␣␣␣␣␣␣␣#␣line␣ends␣in␣opening␣token
␣␣␣␣␣␣␣␣␣␣=
----------
Range: (454543,454694) (151)
$ibeg

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣is␣a␣single␣token␣followed␣by␣opening␣token.
␣␣␣␣␣␣␣␣␣␣␣␣#␣Note␣that␣sub␣identifiers␣have␣blanks␣like␣'sub␣doit'
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (454743,454827) (84)
/\s+/␣)
␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣#␣and␣limit␣total␣to␣10␣character␣widths
␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (461746,461841) (95)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Patch␣to␣avoid␣aligning␣leading␣and␣trailing␣if,␣unless.
----------
Range: (462687,462773) (86)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Decorate␣block␣braces␣with␣block␣types␣to␣avoid
----------
Range: (465227,465329) (102)
""␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣to␣make␣numbers␣and␣quotes␣align
----------
Range: (465915,466003) (88)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣done␣with␣this␣line␣..␣join␣text␣of␣tokens␣to␣make␣the␣last␣field
----------
Range: (472150,472229) (79)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣if␣no␣sequence␣number␣it␣must␣be␣an␣unbalanced␣container
----------
Range: (473859,473946) (87)
"non-fatal␣program␣bug␣in␣lookup_opening_indentation␣-␣index␣out␣of␣range\n"
␣␣␣␣␣␣␣␣);
----------
Range: (475197,475316) (119)
my␣(␣$ibeg,␣$iend,␣$rfields,␣$rpatterns,␣$ri_first,␣$ri_last,
␣␣␣␣␣␣␣␣␣␣␣␣$rindentation_list,␣$level_jump␣)
␣␣␣␣␣␣␣␣␣␣=
----------
Range: (476341,476457) (116)
my␣(
␣␣␣␣␣␣␣␣␣␣␣␣$opening_indentation,␣$opening_offset,
␣␣␣␣␣␣␣␣␣␣␣␣$is_leading,␣␣␣␣␣␣␣␣␣␣$opening_exists
␣␣␣␣␣␣␣␣);
----------
Range: (477116,477225) (109)
$is_semicolon_terminated

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣'cuddled␣parens'␣of␣the␣form:␣␣␣")->pack("
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (477407,477838) (431)
$nesting_depth_to_go[$ibeg]␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣when␣the␣next␣line␣is␣at␣a␣lower␣indentation␣level
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣PATCH:␣and␣only␣if␣the␣style␣allows␣undoing␣continuation
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣for␣all␣closing␣token␣types.␣We␣should␣really␣wait␣until
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣the␣indentation␣of␣the␣next␣line␣is␣known␣and␣then␣make
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣a␣decision,␣but␣that␣would␣require␣another␣pass.
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (478074,478157) (83)
','

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣allow␣just␣one␣character␣before␣the␣comma
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (478181,478360) (179)
1

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣require␣LIST␣environment;␣otherwise,␣we␣may␣outdent␣too␣much␣-
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣this␣can␣happen␣in␣calls␣without␣parentheses␣(overload.t);
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (478496,478573) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣undo␣continuation␣indentation␣of␣a␣terminal␣closing␣token␣if
----------
Range: (479385,479467) (82)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Patch␣for␣RT␣#96101,␣in␣which␣closing␣brace␣of␣anonymous␣subs
----------
Range: (483063,483187) (124)
$is_semicolon_terminated
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣}␣xxxx␣;
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (483249,483341) (92)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣if␣at␣');',␣'};',␣'>;',␣and␣'];'␣of␣a␣terminal␣qw␣quote
----------
Range: (484099,484178) (79)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣##########################################################
----------
Range: (487511,487607) (96)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣Full␣indentaion␣of␣closing␣tokens␣(-icb␣and␣-icp␣or␣-cti=2)
----------
Range: (489185,489264) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣handle␣-icp␣and␣any␣-icb␣block␣braces␣which␣fall␣through␣above
----------
Range: (490602,490679) (77)
}

␣␣␣␣␣␣␣␣#␣be␣sure␣lines␣with␣leading␣closing␣tokens␣are␣not␣outdented␣more
----------
Range: (491308,491415) (107)
$is_if_elsif_else_unless_while_until_for_foreach{
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$block_type_to_go[$ibeg]
␣␣␣␣␣␣␣␣␣␣␣␣}␣);
----------
Range: (492350,492469) (119)
$outdent_keyword{␣$tokens_to_go[$ibeg]␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣labels␣if␣requested
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (492525,492606) (81)
'J'␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣static␣block␣comments␣if␣requested
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (493049,493131) (82)
0␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣do␣not␣promote␣a␣spaced␣static␣block␣comment␣to␣non-spaced;
----------
Range: (495866,495946) (80)
0

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣allow␣2-line␣method␣call␣to␣be␣closed␣up
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (496906,496990) (84)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#--------------------------------------------------------------
----------
Range: (498176,498276) (100)
1

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣allow␣closing␣up␣2-line␣method␣calls
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (498358,498459) (101)
')'␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (499241,499339) (98)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#--------------------------------------------------------------
----------
Range: (500076,500228) (152)
$opening_token_right{␣$tokens_to_go[$ibeg_next]␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣previous␣line␣is␣not␣opening
␣␣␣␣␣␣␣␣␣␣␣␣#␣(use␣-sot␣to␣combine␣with␣it)
␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (500230,500401) (171)
$is_opening_token{$token_end}

␣␣␣␣␣␣␣␣␣␣␣␣#␣previous␣line␣ended␣in␣one␣of␣these
␣␣␣␣␣␣␣␣␣␣␣␣#␣(add␣other␣cases␣if␣necessary;␣'=>'␣and␣'.'␣are␣not␣necessary
␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (500403,500504) (101)
$block_type_to_go[$ibeg_next]

␣␣␣␣␣␣␣␣␣␣␣␣#␣this␣is␣a␣line␣with␣just␣an␣opening␣token
␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (500629,500722) (93)
'#'␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣looks␣bad␣if␣we␣align␣vertically␣with␣the␣wrong␣container
␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (503313,503399) (86)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#--------------------------------------------------------------
----------
Range: (505714,505831) (117)
qw#
␣␣␣␣␣␣␣␣␣␣=␣**=␣+=␣*=␣&=␣<<=␣&&=␣-=␣/=␣|=␣>>=␣||=␣//=␣.=␣%=␣^=␣x=
␣␣␣␣␣␣␣␣␣␣{␣?␣:␣=>␣&&␣||␣//␣~~␣!~~
␣␣␣␣␣␣␣␣␣␣#;
----------
Range: (507259,507341) (82)
$i_terminal␣}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣look␣at␣each␣line␣of␣this␣batch..
----------
Range: (509569,509706) (137)
/$static_side_comment_pattern/o
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣a␣closing␣side␣comment
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (509811,509898) (87)
/$closing_side_comment_prefix_pattern/o␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (511540,511621) (81)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Do␣not␣align␣leading␣':␣('␣or␣'.␣('.␣␣This␣would␣prevent
----------
Range: (512370,512453) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣For␣a␣paren␣after␣keyword,␣only␣align␣something␣like␣this:
----------
Range: (513016,513093) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣NOTE:␣This␣is␣deactivated␣because␣it␣causes␣the␣previous
----------
Range: (513919,514020) (101)
$alignment_type

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣its␣not␣the␣first␣token␣of␣the␣line
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (514131,514216) (85)
'b'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣previous␣token␣IS␣one␣of␣these:
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (514247,514331) (84)
/^[\,\;]$/␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣it's␣NOT␣one␣of␣these
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (514343,514446) (103)
/^[b\#\)\]\}]$/␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣then␣go␣ahead␣and␣align
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (516093,516173) (80)
$is_sort_map_grep_eval_do{␣$$rblock_type[$i]␣}␣)␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (524841,524971) (130)
qw(
␣␣␣␣␣␣␣␣␣␣␣␣␣␣=␣**=␣+=␣*=␣&=␣<<=␣&&=
␣␣␣␣␣␣␣␣␣␣␣␣␣␣-=␣/=␣|=␣>>=␣||=␣//=
␣␣␣␣␣␣␣␣␣␣␣␣␣␣.=␣%=␣^=
␣␣␣␣␣␣␣␣␣␣␣␣␣␣x=
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (536538,536695) (157)
my␣(␣$block_type,␣$i_next,␣$i_next_nonblank,␣$next_nonblank_token,
␣␣␣␣␣␣␣␣␣␣␣␣$next_nonblank_type,␣$next_token,␣$next_type,␣$total_nesting_depth,
␣␣␣␣␣␣␣␣);
----------
Range: (539482,539563) (81)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣Use␣the␣minimum␣of␣the␣left␣and␣right␣strengths.␣␣Note:␣it␣might
----------
Range: (541596,541683) (87)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣good␣to␣break␣after␣end␣of␣code␣blocks
----------
Range: (542197,542274) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Don't␣break␣after␣keyword␣my.␣␣This␣is␣a␣quick␣fix␣for␣a
----------
Range: (543496,543596) (100)
STRONG␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#---------------------------------------------------------------
----------
Range: (543920,544018) (98)
$is_sort_map_grep{$last_nonblank_token}␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣/^(sort|map|grep)$/␣)
␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (544290,544367) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣in␣older␣version␣of␣perl,␣use␣strict␣can␣cause␣problems␣with
----------
Range: (545306,545383) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣We'll␣check␣for␣an␣old␣breakpoint␣and␣keep␣a␣leading
----------
Range: (546220,546331) (111)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣Do␣not␣break␣between␣a␣possible␣filehandle␣and␣a␣?␣or␣/␣and␣do
----------
Range: (546916,547037) (121)
WS_NO
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣we␣might␣be␣followed␣by␣the␣start␣of␣a␣quote
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (547168,547254) (86)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣Breaking␣before␣a␣?␣before␣a␣quote␣can␣cause␣trouble␣if
----------
Range: (550231,550312) (81)
"BOND_TABLES:␣ltype=$ltype␣rtype=$rtype␣$bond_str_1->$bond_str_2->$bond_str_3\n";
----------
Range: (553733,553897) (164)
"BOND:␣␣i=$i␣$str␣$type␣$next_nonblank_type␣depth=$total_nesting_depth␣strength=$bond_str_1␣->␣$bond_str_2␣->␣$bond_str_3␣->␣$bond_str_4␣$bond_str␣->␣$strength␣\n";
----------
Range: (554683,554779) (96)
"Program␣bug␣in␣scan_list:␣hit␣nesting␣error␣which␣should␣have␣been␣caught\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (555127,555686) (559)
my␣(
␣␣␣␣␣␣␣␣$block_type,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$current_depth,
␣␣␣␣␣␣␣␣$depth,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$i,
␣␣␣␣␣␣␣␣$i_last_nonblank_token,␣␣␣␣$last_colon_sequence_number,
␣␣␣␣␣␣␣␣$last_nonblank_token,␣␣␣␣␣␣$last_nonblank_type,
␣␣␣␣␣␣␣␣$last_nonblank_block_type,␣$last_old_breakpoint_count,
␣␣␣␣␣␣␣␣$minimum_depth,␣␣␣␣␣␣␣␣␣␣␣␣$next_nonblank_block_type,
␣␣␣␣␣␣␣␣$next_nonblank_token,␣␣␣␣␣␣$next_nonblank_type,
␣␣␣␣␣␣␣␣$old_breakpoint_count,␣␣␣␣␣$starting_breakpoint_count,
␣␣␣␣␣␣␣␣$starting_depth,␣␣␣␣␣␣␣␣␣␣␣$token,
␣␣␣␣␣␣␣␣$type,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$type_sequence,
␣␣␣␣);
----------
Range: (555692,556206) (514)
my␣(
␣␣␣␣␣␣␣␣@breakpoint_stack,␣␣␣␣␣␣␣␣␣␣␣␣␣␣@breakpoint_undo_stack,
␣␣␣␣␣␣␣␣@comma_index,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣@container_type,
␣␣␣␣␣␣␣␣@identifier_count_stack,␣␣␣␣␣␣␣␣@index_before_arrow,
␣␣␣␣␣␣␣␣@interrupted_list,␣␣␣␣␣␣␣␣␣␣␣␣␣␣@item_count_stack,
␣␣␣␣␣␣␣␣@last_comma_index,␣␣␣␣␣␣␣␣␣␣␣␣␣␣@last_dot_index,
␣␣␣␣␣␣␣␣@last_nonblank_type,␣␣␣␣␣␣␣␣␣␣␣␣@old_breakpoint_count_stack,
␣␣␣␣␣␣␣␣@opening_structure_index_stack,␣@rfor_semicolon_list,
␣␣␣␣␣␣␣␣@has_old_logical_breakpoints,␣␣␣@rand_or_list,
␣␣␣␣␣␣␣␣@i_equals,
␣␣␣␣);
----------
Range: (557766,557853) (87)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣routine␣to␣decide␣which␣commas␣to␣break␣at␣within␣a␣container;
----------
Range: (562399,562485) (86)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣Changed␣rule␣from␣multiple␣old␣commas␣to␣just␣one␣here:
----------
Range: (567974,568056) (82)
$is_keyword_returning_list{$token}␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (568778,568865) (87)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣remember␣an␣=␣break␣as␣possible␣good␣break␣point
----------
Range: (569718,569812) (94)
"Non-fatal␣program␣bug:␣backup␣logic␣needed␣to␣break␣after␣a␣comment\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (570447,570561) (114)
/^(if|unless|while|until|for)$/

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣but␣do␣not␣break␣at␣something␣like␣'1␣while'
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (570599,570685) (86)
2␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣let␣keywords␣follow␣a␣closing␣'do'␣brace
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (570762,570867) (105)
$is_long_line

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣container␣is␣broken␣(by␣side-comment,␣etc)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (575842,575939) (97)
$max_index_to_go␣␣␣␣#␣or␣this␣'?'␣is␣the␣last␣token
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (576503,576587) (84)
TYPE_SEQUENCE_INCREMENT
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (576855,576938) (83)
#print␣"LISTX␣sees:␣i=$i␣type=$type␣␣tok=$token␣␣block=$block_type␣depth=$depth\n";
----------
Range: (579406,579501) (95)
'k'␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣a␣trailing␣'('␣usually␣indicates␣a␣non-list
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (579925,580033) (108)
$block_type

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣if␣we␣have␣the␣')'␣but␣not␣its␣'('␣in␣this␣batch..
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (581775,581960) (185)
#print␣"LISTY␣sees:␣i=$i␣type=$type␣␣tok=$token␣␣block=$block_type␣depth=$depth␣next=$next_nonblank_type␣next_block=$next_nonblank_block_type␣inter=$interrupted_list[$current_depth]\n";
----------
Range: (583123,583217) (94)
$opening_vertical_tightness{␣$tokens_to_go[$i_opening]␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (584662,584757) (95)
4␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣if␣the␣opening␣structure␣is␣in␣this␣batch
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (584758,584858) (100)
$saw_opening_structure

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣either␣on␣the␣same␣old␣line
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (584956,585082) (126)
$last_old_breakpoint_count

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣user␣wants␣to␣form␣long␣blocks␣with␣arrows
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (585117,585245) (128)
2
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣we␣made␣some␣breakpoints␣between␣the␣opening␣and␣closing
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (585313,585519) (206)
$forced_breakpoint_undo_count␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣this␣block␣is␣short␣enough␣to␣fit␣on␣one␣line
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Note:␣use␣<␣because␣need␣1␣more␣space␣for␣possible␣comma
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (587086,587164) (78)
#␣We␣will␣not␣break␣open␣the␣parens␣of␣a␣long␣but␣'simple'␣logical␣expression.
----------
Range: (587789,587866) (77)
#␣This␣is␣on␣the␣verge␣of␣being␣difficult␣to␣read.␣␣The␣current␣default␣is␣to
----------
Range: (588449,588528) (79)
#␣Some␣people␣might␣prefer␣the␣spacey␣version␣--␣an␣option␣could␣be␣added.␣␣The
----------
Range: (588751,588832) (81)
#␣closing␣containers␣because␣(1)␣it␣contains␣no␣multi-line␣sub-containers␣itself,
----------
Range: (589049,589130) (81)
#␣(although␣this␣looks␣perfectly␣ok␣and␣might␣be␣good␣for␣long␣expressions).␣␣The
----------
Range: (589131,589209) (78)
#␣outer␣'if'␣container,␣though,␣contains␣a␣broken␣sub-container,␣so␣it␣will␣be
----------
Range: (589210,589291) (81)
#␣broken␣open␣to␣avoid␣too␣much␣density.␣␣Also,␣since␣it␣contains␣no␣'or's,␣there
----------
Range: (589647,589741) (94)
$is_logical_container{␣$container_type[$current_depth]␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (591018,591165) (147)
$block_type

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣we␣do␣not␣need␣to␣break␣at␣the␣top␣level␣of␣an␣'if'
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣type␣expression
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (591167,591580) (413)
$is_simple_logical_expression

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣##␣modification␣to␣keep␣':␣('␣containers␣vertically␣tight;
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣##␣but␣probably␣better␣to␣let␣user␣set␣-vt=1␣to␣avoid
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣##␣inconsistency␣with␣other␣paren␣types
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣##␣&&␣($container_type[$current_depth]␣ne␣':')

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣otherwise,␣we␣require␣one␣of␣these␣reasons␣for␣breaking:
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (591669,591955) (286)
$has_comma_breakpoints

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣-␣the␣opening␣container␣is␣separated␣from␣this␣batch
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣for␣some␣reason␣(comment,␣blank␣line,␣code␣block)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣-␣this␣is␣a␣non-paren␣container␣spanning␣multiple␣lines
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (591957,592125) (168)
$saw_opening_structure

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣-␣this␣is␣a␣long␣block␣contained␣in␣another␣breakable
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣container
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (593204,593395) (191)
$i_start_2)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣we␣are␣breaking␣after␣an␣opening␣brace,␣paren,
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣so␣don't␣break␣before␣it␣too
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (594768,594851) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣break␣at␣'.'␣of␣lower␣depth␣level␣before␣opening␣token
----------
Range: (595011,595093) (82)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣break␣before␣opening␣structure␣if␣preceded␣by␣another
----------
Range: (595815,595894) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣also␣break␣before␣something␣like␣':('␣␣or␣'?('
----------
Range: (597818,597897) (79)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}␣␣␣␣#␣end␣logic␣to␣open␣up␣a␣container
----------
Range: (605007,605128) (121)
$dd)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Avoid␣a␣break␣which␣would␣place␣an␣isolated␣'␣or␣"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣on␣a␣line
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (608284,608558) (274)
my␣(
␣␣␣␣␣␣␣␣␣␣␣␣$depth,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$i_opening_paren,␣␣$i_closing_paren,
␣␣␣␣␣␣␣␣␣␣␣␣$item_count,␣␣␣␣␣␣␣␣␣␣$identifier_count,␣$rcomma_index,
␣␣␣␣␣␣␣␣␣␣␣␣$next_nonblank_type,␣␣$list_type,␣␣␣␣␣␣␣␣$interrupted,
␣␣␣␣␣␣␣␣␣␣␣␣$rdo_not_break_apart,␣$must_break_open,
␣␣␣␣␣␣␣␣)␣=
----------
Range: (610496,610599) (103)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣now␣we␣have␣to␣make␣a␣distinction␣between␣the␣comma␣count␣and␣item
----------
Range: (611825,611910) (85)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#---------------------------------------------------------------
----------
Range: (614143,614220) (77)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣always␣break␣at␣the␣last␣comma␣if␣this␣list␣is
----------
Range: (614602,614722) (120)
#print␣"depth=$depth␣has_broken=$has_broken_sublist[$depth]␣is_multi=$is_multiline␣opening_paren=($i_opening_paren)␣\n";
----------
Range: (620755,620854) (99)
my␣(␣$number_of_fields_best,␣$ri_ragged_break_list,
␣␣␣␣␣␣␣␣␣␣␣␣$new_identifier_count␣)
␣␣␣␣␣␣␣␣␣␣=
----------
Range: (621132,621215) (83)
}

␣␣␣␣␣␣␣␣#␣----------------------------------------------------------------------
----------
Range: (623189,623302) (113)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣try␣for␣one␣column␣if␣two␣won't␣work
----------
Range: (623746,623824) (78)
}

␣␣␣␣␣␣␣␣#␣How␣many␣columns␣(characters)␣and␣lines␣would␣this␣container␣take
----------
Range: (624371,624448) (77)
#␣␣␣␣␣␣␣␣␣#␣We're␣in␣trouble.␣␣We␣can't␣find␣a␣single␣field␣width␣that␣works.
----------
Range: (624628,624709) (81)
#␣␣␣␣␣␣␣␣␣In␣many␣cases,␣it␣may␣be␣best␣to␣not␣force␣a␣break␣if␣there␣is␣just␣one
----------
Range: (624710,624789) (79)
#␣␣␣␣␣␣␣␣␣comma,␣because␣the␣standard␣continuation␣break␣logic␣will␣do␣a␣better
----------
Range: (625283,625365) (82)
#␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣sort␣{␣$color_value{$::a}␣<=>␣$color_value{$::b};␣}␣keys␣%colors
----------
Range: (625491,625573) (82)
#␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣"Number␣of␣routes␣in␣adj-RIB-in␣to␣be␣considered:␣$peercount"␣);
----------
Range: (626236,626316) (80)
1

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣if␣this␣is␣a␣sublist␣of␣a␣larger␣list
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (626317,626460) (143)
$in_hierarchical_list

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣if␣multiple␣commas␣and␣we␣don't␣have␣a␣long␣first␣or␣last
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣term
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (630469,630565) (96)
0.15
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)␣␣␣␣#␣would␣be␣fairly␣spaced␣gaps␣if␣aligned
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (631560,631894) (334)
"SPARSE:cols=$columns␣commas=$comma_count␣items:$item_count␣ids=$identifier_count␣pairwidth=$pair_width␣fields=$number_of_fields␣lines␣packed:␣$packed_lines␣packed_cols=$packed_columns␣fmtd:$formatted_lines␣cols␣/line:$columns_per_line␣␣unused:$unused_columns␣fmtd:$formatted_columns␣sparsity=$sparsity␣allow=$max_allowed_sparsity\n";
----------
Range: (633140,633218) (78)
}

␣␣␣␣␣␣␣␣#␣FIXME:␣For␣an␣item␣after␣a␣'=>',␣try␣to␣include␣the␣length␣of␣the
----------
Range: (633647,633737) (90)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣Always␣break␣lists␣contained␣in␣'['␣and␣'{'␣if␣too␣long␣for␣1␣line,
----------
Range: (633990,634293) (303)
#print␣"LISTX:␣next=$next_nonblank_type␣␣avail␣cols=$columns␣packed=$packed_columns␣must␣format␣=␣$must_break_open_container␣too-long=$too_long␣␣opening=$opening_token␣list_type=$list_type␣formatted_lines=$formatted_lines␣␣packed=$packed_lines␣max_sparsity=␣$max_allowed_sparsity␣sparsity=$sparsity␣\n";
----------
Range: (645241,645361) (120)
"NOBREAK:␣forced_breakpoint␣$forced_breakpoint_count␣from␣$a␣$c␣with␣i=$i␣max=$max_index_to_go␣type=$types_to_go[$i]\n";
----------
Range: (646626,646807) (181)
"FORCE␣$forced_breakpoint_count␣from␣$a␣$c␣with␣i=$i_nonblank␣max=$max_index_to_go␣tok=$tokens_to_go[$i_nonblank]␣type=$types_to_go[$i_nonblank]␣nobr=$nobreak_to_go[$i_nonblank]\n";
----------
Range: (647685,647766) (81)
"Program␣Bug:␣undo_forced_breakpoint_stack␣from␣$a␣$c␣has␣i=$i_start␣"
␣␣␣␣␣␣␣␣);
----------
Range: (648184,648286) (102)
"UNDOBP:␣undo␣forced_breakpoint␣i=$i␣$forced_breakpoint_undo_count␣from␣$a␣$c␣max=$max_index_to_go\n";
----------
Range: (648504,648587) (83)
"Program␣Bug:␣undo_forced_breakpoint␣from␣$a␣$c␣has␣i=$i␣but␣max=$max_index_to_go";
----------
Range: (651805,651894) (89)
Perl::Tidy::Die
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣"Program␣bug-infinite␣loop␣in␣recombine␣breakpoints\n";
----------
Range: (654425,654566) (141)
"RECOMBINE:␣n=$n␣imid=$iend_1␣if=$ibeg_1␣type=$type_ibeg_1␣=$tokens_to_go[$ibeg_1]␣next_type=$type_ibeg_2␣next_tok=$tokens_to_go[$ibeg_2]\n";
----------
Range: (654984,655064) (80)
';'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣with␣possible␣side␣comment
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (655280,655358) (78)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#----------------------------------------------------------
----------
Range: (658685,658770) (85)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣check␣for␣a␣number␣on␣the␣left
----------
Range: (659586,659689) (103)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣look␣for␣a␣single␣short␣token␣either␣side␣of␣the
----------
Range: (660353,660463) (110)
/^[in]$/

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣one␣of␣the␣two␣lines␣must␣be␣short:
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (660669,660760) (91)
$iend_2

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣short
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (660883,660990) (107)
$rOpts_short_concatenation_item_length
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (661161,661252) (91)
$ibeg_1

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣short
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (661379,661588) (209)
$rOpts_short_concatenation_item_length
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣keep␣pure␣terms;␣don't␣mix␣+-␣with␣*/
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (661762,661866) (104)
$is_mult_div{␣$types_to_go[$itokpp]␣}␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (661961,662039) (78)
$is_plus_minus{␣$types_to_go[$itokmm]␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (662040,662146) (106)
$is_plus_minus{␣$types_to_go[$itokpp]␣}␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣;
----------
Range: (662171,662254) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣it␣is␣also␣good␣to␣combine␣if␣we␣can␣reduce␣to␣2␣lines
----------
Range: (663104,663182) (78)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#----------------------------------------------------------
----------
Range: (665355,665467) (112)
$this_line_is_semicolon_terminated

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣only␣one␣token␣on␣last␣line
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (665479,665561) (82)
$iend_1

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣must␣be␣structural␣paren
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (665588,665670) (82)
')'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣style␣must␣allow␣outdenting,
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (665672,665928) (256)
$closing_token_indentation{')'}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣only␣leading␣'&&',␣'||',␣and␣':'␣if␣no␣others␣seen
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣(but␣note:␣our␣count␣made␣below␣could␣be␣wrong
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣due␣to␣intervening␣comments)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (665998,666185) (187)
/^(:|\&\&|\|\|)$/␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣but␣leading␣colons␣probably␣line␣up␣with␣a
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣previous␣colon␣or␣question␣(count␣could␣be␣wrong).
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (666202,666356) (154)
':'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣only␣one␣step␣in␣depth␣allowed.␣␣this␣line␣must␣not
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣begin␣with␣a␣')'␣itself.
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (668233,668344) (111)
$is_if_unless{␣$tokens_to_go[$ibeg_2]␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (668515,668639) (124)
$previous_outdentable_closing_paren

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣handle␣'.'␣and␣'?'␣specially␣below
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (672242,672351) (109)
$old_breakpoint_to_go[$iend_1]

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣don't␣strand␣an␣isolated␣'='
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (673321,673439) (118)
2

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣three␣lines,␣the␣last␣with␣a␣leading␣semicolon
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (673527,673640) (113)
';'␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣the␣next␣line␣ends␣with␣a␣here␣doc
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (673657,673852) (195)
'h'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣the␣next␣line␣ends␣in␣an␣open␣paren␣or␣brace
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣the␣break␣hasn't␣been␣forced␣[dima.t]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (673946,674165) (219)
'{'␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣do␣not␣recombine␣if␣the␣two␣lines␣might␣align␣well
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣this␣is␣a␣very␣approximate␣test␣for␣this
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (674425,674787) (362)
2

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣-lp␣users␣often␣prefer␣this:
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣my␣$title␣=␣function($env,␣$env,␣$sysarea,
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣"bubba␣Borrower␣Entry");
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣so␣we␣will␣recombine␣if␣-lp␣is␣used␣we␣have
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣ending␣comma
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (675657,675740) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣ok␣to␣recombine␣if␣no␣level␣changes␣before␣last␣token
----------
Range: (676651,676734) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣do␣not␣recombine␣if␣total␣is␣more␣than␣2␣level␣changes
----------
Range: (676816,676893) (77)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣unless
----------
Range: (677351,677495) (144)
$is_last_next_redo_return{␣$tokens_to_go[$iend_1]␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣but␣only␣if␣followed␣by␣multiple␣lines
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (677727,677823) (96)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#----------------------------------------------------------
----------
Range: (678760,680044) (1284)
'('␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣is␣followed␣by␣a␣?␣or␣:␣at␣same␣depth
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣We␣are␣looking␣for␣something␣like␣this.␣We␣can
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣recombine␣the␣&&␣line␣with␣the␣line␣above␣to␣make␣the
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣structure␣more␣clear:
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣return
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣exists␣$G->{Attr}->{V}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣&&␣exists␣$G->{Attr}->{V}->{$u}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣?␣%{␣$G->{Attr}->{V}->{$u}␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣:␣();
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣We␣should␣probably␣leave␣something␣like␣this␣alone:
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣return
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣␣␣exists␣$G->{Attr}->{E}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣&&␣exists␣$G->{Attr}->{E}->{$u}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣&&␣exists␣$G->{Attr}->{E}->{$u}->{$v}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣?␣%{␣$G->{Attr}->{E}->{$u}->{$v}␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣:␣();
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣so␣that␣we␣either␣have␣all␣of␣the␣&&'s␣(or␣||'s)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣on␣one␣line,␣as␣in␣the␣first␣example,␣or␣break␣at
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣each␣one␣as␣in␣the␣second␣example.␣␣However,␣it
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣sometimes␣makes␣things␣worse␣to␣check␣for␣this␣because
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣it␣prevents␣multiple␣recombinations.␣␣So␣this␣is␣not␣done.
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (683155,683410) (255)
$type_ibeg_2
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣...␣or␣this␣would␣strand␣a␣short␣quote␣,␣like␣this
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣.␣"some␣long␣quote"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣.␣"\n";

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (684212,684635) (423)
$is_if_unless{␣$tokens_to_go[$ibeg_1]␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣important:␣only␣combine␣a␣very␣simple␣or
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣statement␣because␣the␣step␣below␣may␣have
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣combined␣a␣trailing␣'and'␣with␣this␣or,
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣we␣do␣not␣want␣to␣then␣combine
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣everything␣together
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (686004,686082) (78)
$is_if_unless{␣$tokens_to_go[$ibeg_1]␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (686499,686636) (137)
$this_line_is_semicolon_terminated

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣previous␣line␣begins␣with␣'and'␣or␣'or'
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (687244,687364) (120)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣similar␣treatment␣of␣&&␣and␣||␣as␣above␣for␣'and'␣and␣'or':
----------
Range: (687782,687924) (142)
$this_line_is_semicolon_terminated

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣previous␣line␣begins␣with␣an␣'if'␣or␣'unless'␣keyword
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (688445,688550) (105)
2

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣three␣lines,␣the␣last␣with␣a␣leading␣semicolon
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (688595,688692) (97)
';'␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣the␣next␣line␣ends␣with␣a␣here␣doc
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (688709,688802) (93)
'h'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣this␣is␣a␣short␣line␣ending␣in␣;
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (688957,689035) (78)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#----------------------------------------------------------
----------
Range: (690630,690745) (115)
$levels_to_go[$if_next]

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣but␣an␣isolated␣'if␣('␣is␣undesirable
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (691529,691628) (99)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣recombine␣the␣pair␣with␣the␣greatest␣bond␣strength
----------
Range: (698716,698796) (80)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣Break␣after␣a␣'return'␣followed␣by␣a␣chain␣of␣operators
----------
Range: (707691,707781) (90)
##␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣factorial(␣$a␣+␣$b␣-␣1␣)␣/␣factorial(␣$a␣-␣1␣)␣/␣factorial(␣$b␣-␣1␣)
----------
Range: (707982,708143) (161)
$old_breakpoint_to_go[$i_test]

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣which␣is␣a␣'good'␣breakpoint,␣meaning␣...
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣we␣don't␣want␣to␣break␣before␣it
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (708145,708334) (189)
$want_break_before{$type}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣either␣we␣want␣to␣break␣before␣the␣next␣token
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣the␣next␣token␣is␣not␣short␣(i.e.␣not␣a␣'*',␣'/'␣etc.)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (708637,708717) (80)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣otherwise␣increase␣strength␣a␣bit␣if␣this␣token␣would␣be␣at␣the
----------
Range: (710874,711533) (659)
$forced_breakpoint_to_go[$i_test]

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣break␣between␣)␣{␣in␣a␣continued␣line␣so␣that␣the␣'{'␣can
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣be␣outdented
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣See␣similar␣logic␣in␣scan_list␣which␣catches␣instances
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣where␣a␣line␣is␣just␣something␣like␣')␣{'.␣␣We␣have␣to
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣be␣careful␣because␣the␣corresponding␣block␣keyword␣might
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣not␣be␣on␣the␣first␣line,␣such␣as␣'for'␣here:
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣eval␣{
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣for␣("a")␣{
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣␣␣␣␣for␣$x␣(␣1,␣2␣)␣{␣local␣$_␣=␣"b";␣s/(.*)/+$1/␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣};
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (711771,712044) (273)
$tokens_to_go[$i_begin]␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣RT␣#104427:␣Dont␣break␣before␣opening␣sub␣brace␣because
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣sub␣block␣breaks␣handled␣at␣higher␣level,␣unless
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣it␣looks␣like␣the␣preceeding␣list␣is␣long␣and␣broken
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (712199,712285) (86)
$nesting_depth_to_go[$i_next_nonblank]␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (712287,712445) (158)
$rOpts->{'opening-brace-always-on-right'}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣There␣is␣an␣implied␣forced␣break␣at␣a␣terminal␣opening␣brace
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (712908,712994) (86)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣quit␣if␣a␣break␣here␣would␣put␣a␣good␣terminal␣token␣on
----------
Range: (715462,715598) (136)
/^[#;\{]$/␣␣␣␣␣␣␣␣#␣and␣this␣line␣ends␣in
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣';'␣or␣side␣comment
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (718581,718673) (92)
$nesting_depth_to_go[$i_next_nonblank]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (718936,719013) (77)
$nesting_depth_to_go[$i_test]␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (721211,721391) (180)
"BREAK:␣i=$i_test␣imax=$imax␣$types_to_go[$i_test]␣$next_nonblank_type␣sp=($leading_spaces)␣lnext=␣$summed_lengths_to_go[$i_testp2]␣2long=$too_long␣str=$strength␣␣␣␣$ltok␣$rtok\n";
----------
Range: (728931,729012) (81)
"Non-fatal␣program␣bug:␣couldn't␣set␣break␣at␣$i_break_left\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (731453,731578) (125)
"Start␣indentation␣disagreement:␣input=$guessed_indentation_level;␣output=$structural_indentation_level\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (731949,732041) (92)
"End␣indentation␣disagreement␣from␣input␣line␣$in_tabbing_disagreement\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (732316,732396) (80)
}
␣␣␣␣}
}

#####################################################################
----------
Range: (734260,734474) (214)
my␣(
␣␣␣␣␣␣␣␣$class,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$spaces,␣␣␣␣␣␣␣␣␣␣␣$level,
␣␣␣␣␣␣␣␣$ci_level,␣␣␣␣␣␣␣␣␣␣␣␣$available_spaces,␣$index,
␣␣␣␣␣␣␣␣$gnu_sequence_number,␣$align_paren,␣␣␣␣␣␣$stack_depth,
␣␣␣␣␣␣␣␣$starting_index,
␣␣␣␣)␣=
----------
Range: (745703,745784) (81)
$_[2]␣}

}

#####################################################################
----------
Range: (750405,751682) (1277)
}

use␣vars␣qw(
␣␣$vertical_aligner_self
␣␣$current_line
␣␣$maximum_alignment_index
␣␣$ralignment_list
␣␣$maximum_jmax_seen
␣␣$minimum_jmax_seen
␣␣$previous_minimum_jmax_seen
␣␣$previous_maximum_jmax_seen
␣␣$maximum_line_index
␣␣$group_level
␣␣$group_type
␣␣$group_maximum_gap
␣␣$marginal_match
␣␣$last_level_written
␣␣$last_leading_space_count
␣␣$extra_indent_ok
␣␣$zero_count
␣␣@group_lines
␣␣$last_comment_column
␣␣$last_side_comment_line_number
␣␣$last_side_comment_length
␣␣$last_side_comment_level
␣␣$outdented_line_count
␣␣$first_outdented_line_at
␣␣$last_outdented_line_at
␣␣$diagnostics_object
␣␣$logger_object
␣␣$file_writer_object
␣␣@side_comment_history
␣␣$comment_leading_space_count
␣␣$is_matching_terminal_line
␣␣$consecutive_block_comments

␣␣$cached_line_text
␣␣$cached_line_type
␣␣$cached_line_flag
␣␣$cached_seqno
␣␣$cached_line_valid
␣␣$cached_line_leading_space_count
␣␣$cached_seqno_string

␣␣$valign_buffer_filling
␣␣@valign_buffer

␣␣$seqno_string
␣␣$last_nonblank_seqno_string

␣␣$rOpts

␣␣$rOpts_maximum_line_length
␣␣$rOpts_variable_maximum_line_length
␣␣$rOpts_continuation_indentation
␣␣$rOpts_indent_columns
␣␣$rOpts_tabs
␣␣$rOpts_entab_leading_whitespace
␣␣$rOpts_valign

␣␣$rOpts_fixed_position_side_comment
␣␣$rOpts_minimum_space_to_comment

);
----------
Range: (756488,756575) (87)
"Current␣Alignments:\ni\ttoken\tstarting_column\tcolumn\tstarting_line\tending_line\n";
----------
Range: (757016,757097) (81)
"$i\t$matching_token\t$starting_column\t$column\t$starting_line\t$ending_line\n";
----------
Range: (760306,760626) (320)
my␣(
␣␣␣␣␣␣␣␣$level,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$level_end,
␣␣␣␣␣␣␣␣$indentation,␣␣␣␣␣␣␣␣␣$rfields,
␣␣␣␣␣␣␣␣$rtokens,␣␣␣␣␣␣␣␣␣␣␣␣␣$rpatterns,
␣␣␣␣␣␣␣␣$is_forced_break,␣␣␣␣␣$outdent_long_lines,
␣␣␣␣␣␣␣␣$is_terminal_ternary,␣$is_terminal_statement,
␣␣␣␣␣␣␣␣$do_not_pad,␣␣␣␣␣␣␣␣␣␣$rvertical_tightness_flags,
␣␣␣␣␣␣␣␣$level_jump,
␣␣␣␣)␣=
----------
Range: (761660,761816) (156)
"APPEND0:␣entering␣lines=$maximum_line_index␣new␣#fields=␣$jmax,␣leading_count=$leading_space_count␣last_cmt=$last_comment_column␣force=$is_forced_break\n";
----------
Range: (763908,763985) (77)
}

␣␣␣␣#␣--------------------------------------------------------------------
----------
Range: (764562,764645) (83)
}
␣␣␣␣}

␣␣␣␣#␣--------------------------------------------------------------------
----------
Range: (764973,765050) (77)
}

␣␣␣␣#␣--------------------------------------------------------------------
----------
Range: (765387,765464) (77)
}

␣␣␣␣#␣--------------------------------------------------------------------
----------
Range: (765915,765995) (80)
)␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣flush␣current␣group␣if␣we␣are␣just␣collecting␣side␣comments..
----------
Range: (766107,766210) (103)
3␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣..or␣if␣this␣new␣line␣doesn't␣fit␣to␣the␣left␣of␣the␣comments
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (766388,766476) (88)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣patch␣to␣start␣new␣COMMENT␣group␣if␣this␣comment␣may␣be␣outdented
----------
Range: (766828,766908) (80)
}

␣␣␣␣␣␣␣␣#␣just␣write␣this␣line␣directly␣if␣no␣current␣group,␣no␣side␣comment,
----------
Range: (767445,767592) (147)
"Program␣bug␣in␣Perl::Tidy::VerticalAligner␣-␣number␣of␣tokens␣=␣$#{$rtokens}␣should␣be␣one␣less␣than␣number␣of␣fields:␣$#{$rfields})\n"
␣␣␣␣␣␣␣␣);
----------
Range: (767628,767705) (77)
}

␣␣␣␣#␣--------------------------------------------------------------------
----------
Range: (769073,769150) (77)
}

␣␣␣␣#␣--------------------------------------------------------------------
----------
Range: (772259,772342) (83)
}
␣␣␣␣}

␣␣␣␣#␣--------------------------------------------------------------------
----------
Range: (773480,773557) (77)
}

␣␣␣␣#␣--------------------------------------------------------------------
----------
Range: (779849,779944) (95)
12

␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣don't␣remember␣comment␣location␣across␣block␣level␣changes
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (791516,791593) (77)
}

␣␣␣␣␣␣␣␣#␣flush␣if␣adding␣this␣line␣would␣make␣a␣non-monotonic␣field␣count
----------
Range: (793435,793524) (89)
}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣do␣detailed␣check␣for␣everything␣else␣except␣hanging␣side␣comments
----------
Range: (795676,795851) (175)
$old_tok

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Exception␣for␣matching␣terminal␣:␣of␣ternary␣statement..
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣consider␣containers␣prefixed␣by␣?␣and␣:␣a␣match
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (796121,796837) (716)
$jlimit

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣and␣there␣is␣either␣at␣least␣one␣alignment␣token
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣this␣is␣a␣single␣item␣following␣a␣list.␣␣This
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣latter␣rule␣is␣required␣for␣'December'␣to␣join
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣the␣following␣list:
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣my␣(@months)␣=␣(
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣'',␣␣␣␣␣␣␣'January',␣␣␣'February',␣'March',
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣'April',␣␣'May',␣␣␣␣␣␣␣'June',␣␣␣␣␣'July',
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣'August',␣'September',␣'October',␣␣'November',
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣␣␣␣␣'December'
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣);
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣If␣it␣doesn't␣then␣the␣-lp␣formatting␣will␣fail.
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (799452,799549) (97)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Handle␣an␣'='␣alignment␣with␣different␣patterns␣to
----------
Range: (800517,800599) (82)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣If␣we␣pass␣that␣test,␣we'll␣call␣it␣a␣marginal␣match.
----------
Range: (801300,801416) (116)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Don't␣let␣line␣with␣fewer␣fields␣increase␣column␣widths
----------
Range: (802749,802892) (143)
}
␣␣␣␣␣␣␣␣␣␣␣␣##print␣"marginal=$marginal_match␣saw=$saw_good_alignment␣jmax=$jmax␣max=$maximum_field_index␣maxpad=$max_pad␣minpad=$min_pad\n";
----------
Range: (803586,803717) (131)
##print␣"BUBBA:␣no␣match␣jmax=$jmax␣␣max=$maximum_field_index␣$group_list_type␣lines=$maximum_line_index␣token=$$old_rtokens[0]\n";
----------
Range: (804781,804858) (77)
}

␣␣␣␣␣␣␣␣#␣remember␣largest␣gap␣of␣the␣group,␣excluding␣gap␣to␣side␣comment
----------
Range: (805572,805766) (194)
$padding_available␣)

␣␣␣␣␣␣␣␣␣␣␣␣#␣previously,␣there␣were␣upper␣bounds␣placed␣on␣padding␣here
␣␣␣␣␣␣␣␣␣␣␣␣#␣(maximum_whitespace_columns),␣but␣they␣were␣not␣really␣helpful

␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣{
----------
Range: (810529,810615) (86)
"APPEND0:␣Flush␣called␣from␣$a␣$b␣$c␣for␣COMMENT␣group:␣lines=$maximum_line_index␣\n";
----------
Range: (812224,812363) (139)
"APPEND0:␣Flush␣called␣from␣$a␣$b␣$c␣fields=$maximum_field_index␣list=$group_list_type␣lines=$maximum_line_index␣extra=$extra_indent_ok\n";
----------
Range: (813718,813798) (80)
$marginal_match

␣␣␣␣␣␣␣␣␣␣␣␣#␣don't␣align␣two␣lines␣with␣big␣gap
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (813820,814000) (180)
12

␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣lines␣with␣differing␣number␣of␣alignment␣tokens
␣␣␣␣␣␣␣␣␣␣␣␣#␣TODO:␣this␣could␣be␣improved.␣␣It␣occasionally␣rejects
␣␣␣␣␣␣␣␣␣␣␣␣#␣good␣matches.
␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (820457,820558) (101)
my␣(␣$line,␣$min_ci_gap,␣$do_not_align,␣$group_leader_length,
␣␣␣␣␣␣␣␣$extra_leading_spaces␣)
␣␣␣␣␣␣=
----------
Range: (826959,827087) (128)
my␣(␣$leading_space_count,␣$str,␣$side_comment_length,␣$outdent_long_lines,
␣␣␣␣␣␣␣␣$rvertical_tightness_flags,␣$level␣)
␣␣␣␣␣␣=
----------
Range: (828419,828506) (87)
my␣(␣$open_or_close,␣$tightness_flag,␣$seqno,␣$valid,␣$seqno_beg,
␣␣␣␣␣␣␣␣$seqno_end␣);
----------
Range: (830317,830406) (89)
$seqno_beg

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣The␣container␣combination␣must␣be␣okay..
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (830499,830608) (109)
$cached_line_type␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣closing␣block␣brace␣may␣append␣to␣non-block
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (830767,830854) (87)
2␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣The␣combined␣line␣must␣fit
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (835353,835434) (81)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$str␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣=
----------
Range: (840545,840646) (101)
"Error␣entabbing␣in␣valign_output_step_D:␣expected␣count=$leading_space_count\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (841129,841248) (119)
"Error␣entabbing␣in␣valign_output_step_D:␣for␣level=$group_level␣count=$leading_space_count\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (841807,841908) (101)
"Error␣entabbing␣in␣valign_output_step_D:␣expected␣count=$leading_space_count\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (843682,843790) (108)
"Error␣in␣get_leading_string:␣for␣level=$group_level␣count=$leading_whitespace_count\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (844639,844717) (78)
"␣␣use␣-noll␣to␣prevent␣outdenting,␣-l=n␣to␣increase␣line␣length\n"
␣␣␣␣␣␣␣␣);
----------
Range: (850476,850582) (106)
"␣␣Maximum␣output␣line␣length␣was␣$max_output_line_length␣at␣line␣$max_output_line_length_at\n"
␣␣␣␣␣␣␣␣);
----------
Range: (850702,850811) (109)
"$line_length_error_count␣output␣line$word␣exceeded␣$rOpts->{'maximum-line-length'}␣characters:\n"
␣␣␣␣␣␣␣␣);
----------
Range: (851069,851165) (96)
"␣$word␣at␣line␣$first_line_length_error_at␣by␣$first_line_length_error␣characters\n"
␣␣␣␣␣␣␣␣);
----------
Range: (851569,851667) (98)
"␣Maximum␣at␣line␣$max_line_length_error_at␣by␣$max_line_length_error␣characters\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (851708,851805) (97)
"␣Last␣at␣line␣$last_line_length_error_at␣by␣$last_line_length_error␣characters\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (851814,851894) (80)
}
␣␣␣␣}
}

#####################################################################
----------
Range: (852557,852640) (83)
print␣$fh
␣␣␣␣␣␣"Use␣-dump-token-types␣(-dtt)␣to␣get␣a␣list␣of␣token␣type␣codes\n";
----------
Range: (858537,859298) (761)
use␣vars␣qw{
␣␣$tokenizer_self

␣␣$last_nonblank_token
␣␣$last_nonblank_type
␣␣$last_nonblank_block_type
␣␣$statement_type
␣␣$in_attribute_list
␣␣$current_package
␣␣$context

␣␣%is_constant
␣␣%is_user_function
␣␣%user_function_prototype
␣␣%is_block_function
␣␣%is_block_list_function
␣␣%saw_function_definition

␣␣$brace_depth
␣␣$paren_depth
␣␣$square_bracket_depth

␣␣@current_depth
␣␣@total_depth
␣␣$total_depth
␣␣@nesting_sequence_number
␣␣@current_sequence_number
␣␣@paren_type
␣␣@paren_semicolon_count
␣␣@paren_structural_type
␣␣@brace_type
␣␣@brace_structural_type
␣␣@brace_context
␣␣@brace_package
␣␣@square_bracket_type
␣␣@square_bracket_structural_type
␣␣@depth_array
␣␣@nested_ternary_flag
␣␣@nested_statement_type
␣␣@starting_line_of_current_depth
};
----------
Range: (859348,859751) (403)
use␣vars␣qw{
␣␣%is_indirect_object_taker
␣␣%is_block_operator
␣␣%expecting_operator_token
␣␣%expecting_operator_types
␣␣%expecting_term_types
␣␣%expecting_term_token
␣␣%is_digraph
␣␣%is_file_test_operator
␣␣%is_trigraph
␣␣%is_valid_token_type
␣␣%is_keyword
␣␣%is_code_block_token
␣␣%really_want_term
␣␣@opening_brace_names
␣␣@closing_brace_names
␣␣%is_keyword_taking_list
␣␣%is_q_qq_qw_qx_qr_s_y_tr_m
};
----------
Range: (865532,865622) (90)
confess
"Attempt␣to␣create␣more␣than␣1␣object␣in␣$class,␣which␣is␣not␣a␣true␣class␣yet\n";
----------
Range: (868258,868376) (118)
"hit␣eof␣while␣in␣pod␣documentation␣(no␣=cut␣seen)\n\tthis␣can␣cause␣trouble␣with␣some␣pod␣utilities\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (868425,868543) (118)
"hit␣eof␣while␣in␣pod␣documentation␣(no␣=cut␣seen)\n\tthis␣can␣cause␣trouble␣with␣some␣pod␣utilities\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (868842,868968) (126)
"hit␣EOF␣in␣here␣document␣starting␣at␣line␣$started_looking_for_here_target_at␣with␣target:␣$here_doc_target\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (869015,869136) (121)
"hit␣EOF␣in␣here␣document␣starting␣at␣line␣$started_looking_for_here_target_at␣with␣empty␣target␣string\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (869319,869425) (106)
"NOTE:␣almost␣matched␣at␣input␣line␣$nearly_matched_here_target_at␣except␣for␣whitespace\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (869765,869867) (102)
"hit␣EOF␣seeking␣end␣of␣$what␣starting␣at␣line␣$line_start_quote␣ending␣in␣$quote_target\n"
␣␣␣␣␣␣␣␣);
----------
Range: (871184,871301) (117)
"Found␣v-string␣'$tok'␣but␣v-strings␣are␣not␣implemented␣in␣your␣version␣of␣perl;␣see␣Camel␣3␣book␣ch␣2\n"
␣␣␣␣␣␣␣␣);
----------
Range: (877752,877830) (78)
"Hash-bang␣in␣pod␣can␣cause␣older␣versions␣of␣perl␣to␣fail!␣\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (880472,880571) (99)
"There␣seems␣to␣be␣a␣hash-bang␣after␣line␣1;␣do␣you␣need␣to␣run␣with␣-x␣?\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (880955,881046) (91)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣wait␣for␣a␣hash-bang␣before␣parsing␣if␣the␣user␣invoked␣us␣with␣-x
----------
Range: (883166,883246) (80)
"=cut␣starts␣a␣pod␣section␣..␣this␣can␣fool␣pod␣utilities.\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (886081,886158) (77)
}

␣␣␣␣#␣Note:␣if␣keyword␣'format'␣occurs␣in␣this␣line␣code,␣it␣is␣still␣CODE
----------
Range: (894015,894453) (438)
my␣(
␣␣␣␣␣␣␣␣$block_type,␣␣␣␣␣␣␣␣$container_type,␣␣␣␣$expecting,
␣␣␣␣␣␣␣␣$i,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$i_tok,␣␣␣␣␣␣␣␣␣␣␣␣␣$input_line,
␣␣␣␣␣␣␣␣$input_line_number,␣$last_nonblank_i,␣␣␣$max_token_index,
␣␣␣␣␣␣␣␣$next_tok,␣␣␣␣␣␣␣␣␣␣$next_type,␣␣␣␣␣␣␣␣␣$peeked_ahead,
␣␣␣␣␣␣␣␣$prototype,␣␣␣␣␣␣␣␣␣$rhere_target_list,␣$rtoken_map,
␣␣␣␣␣␣␣␣$rtoken_type,␣␣␣␣␣␣␣$rtokens,␣␣␣␣␣␣␣␣␣␣␣$tok,
␣␣␣␣␣␣␣␣$type,␣␣␣␣␣␣␣␣␣␣␣␣␣␣$type_sequence,␣␣␣␣␣$indent_flag,
␣␣␣␣);
----------
Range: (895060,895205) (145)
my␣(␣$in_quote,␣$quote_type,␣$quote_character,␣$quote_pos,␣$quote_depth,
␣␣␣␣␣␣␣␣$quoted_string_1,␣$quoted_string_2,␣$allowed_quote_modifiers,␣);
----------
Range: (895580,895942) (362)
my␣(
␣␣␣␣␣␣␣␣$nesting_token_string,␣␣␣␣␣␣$nesting_type_string,
␣␣␣␣␣␣␣␣$nesting_block_string,␣␣␣␣␣␣$nesting_block_flag,
␣␣␣␣␣␣␣␣$nesting_list_string,␣␣␣␣␣␣␣$nesting_list_flag,
␣␣␣␣␣␣␣␣$ci_string_in_tokenizer,␣␣␣␣$continuation_string_in_tokenizer,
␣␣␣␣␣␣␣␣$in_statement_continuation,␣$level_in_tokenizer,
␣␣␣␣␣␣␣␣$slevel_in_tokenizer,␣␣␣␣␣␣␣$rslevel_stack,
␣␣␣␣);
----------
Range: (896085,896386) (301)
my␣(
␣␣␣␣␣␣␣␣$last_nonblank_container_type,␣␣␣␣␣$last_nonblank_type_sequence,
␣␣␣␣␣␣␣␣$last_last_nonblank_token,␣␣␣␣␣␣␣␣␣$last_last_nonblank_type,
␣␣␣␣␣␣␣␣$last_last_nonblank_block_type,␣␣␣␣$last_last_nonblank_container_type,
␣␣␣␣␣␣␣␣$last_last_nonblank_type_sequence,␣$last_nonblank_prototype,
␣␣␣␣);
----------
Range: (907439,907516) (77)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣a␣sub␣to␣warn␣if␣token␣found␣where␣operator␣expected
----------
Range: (911389,911777) (388)
OPERATOR

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣be␣sure␣this␣is␣not␣a␣method␣call␣of␣the␣form
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣&method(...),␣$method->(..),␣&{method}(...),
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣$ref[2](list)␣is␣ok␣&␣short␣for␣$ref[2]->(list)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣NOTE:␣at␣present,␣braces␣in␣something␣like␣&{␣xxx␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣are␣not␣marked␣as␣a␣block,␣we␣might␣have␣a␣method␣call
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (912000,912085) (85)
"do␣SUBROUTINE␣is␣deprecated;␣consider␣&␣or␣->␣notation\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (915378,915457) (79)
"Syntax␣error?␣found␣token␣'$last_nonblank_type'␣then␣'('\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (916372,916452) (80)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣for␣operator_expected:␣note␣if␣we␣are␣in␣the␣list␣(use.t)
----------
Range: (916517,916605) (88)
'_use'␣}
##␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣FIXME:␣need␣to␣move␣this␣elsewhere,␣perhaps␣check␣after␣a␣'('
----------
Range: (916662,916743) (81)
##␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣warning("Leading␣','s␣illegal␣in␣some␣versions␣of␣perl\n");
----------
Range: (920388,920467) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣for␣SWITCH/CASE:␣hide␣these␣keywords␣from␣an␣immediately
----------
Range: (921863,921990) (127)
"syntax␣error␣at␣')␣{',␣didn't␣see␣one␣of:␣<<$list>>;␣If␣this␣code␣is␣okay␣try␣using␣the␣-xs␣flag\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (922011,922108) (97)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣for␣paren-less␣for/foreach␣glitch,␣part␣2.
----------
Range: (922408,922497) (89)
"syntax␣error␣at␣'$want_paren␣..␣{'␣--␣missing␣\$␣loop␣variable\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (923429,923516) (87)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣code␣and␣anonymous␣hash␣have␣the␣same␣type,␣'{',␣but␣are
----------
Range: (924149,924249) (100)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣for␣SWITCH/CASE:␣if␣we␣find␣a␣stray␣opening␣block␣brace
----------
Range: (924586,924671) (85)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣$brace_type[␣++$brace_depth␣]␣␣␣␣␣␣␣␣=
----------
Range: (925584,925664) (80)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣propagate␣type␣information␣for␣'do'␣and␣'eval'␣blocks,␣and␣also
----------
Range: (932235,932312) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣propagate␣type␣information␣for␣smartmatch␣operator.␣␣This␣is
----------
Range: (935132,935226) (94)
my␣(␣$found_target,␣$here_doc_target,␣$here_quote_character,
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$saw_error␣);
----------
Range: (936034,936111) (77)
"Unconventional␣here-target:␣'$here_doc_target'\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (937271,937351) (80)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣for␣operator_expected:␣note␣if␣we␣are␣in␣the␣list␣(use.t)
----------
Range: (938692,938834) (142)
qw(␣}␣{␣BEGIN␣END␣CHECK␣INIT␣AUTOLOAD␣DESTROY␣UNITCHECK␣continue␣;
␣␣␣␣␣␣if␣elsif␣else␣unless␣while␣until␣for␣foreach␣switch␣case␣given␣when);
----------
Range: (942137,942215) (78)
#␣comparison␣of␣the␣input␣string␣and␣its␣tokenization␣for␣each␣line␣of␣a␣file.
----------
Range: (942633,942710) (77)
#␣with␣changes␣in␣perl␣and␣to␣help␣adapt␣the␣tokenizer␣to␣other␣applications.
----------
Range: (948731,948829) (98)
1␣␣␣␣#␣no␣use␣tokenizing␣a␣comment
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣start␣by␣breaking␣the␣line␣into␣pre-tokens
----------
Range: (951964,952047) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣For␣an␣'e'␣quote␣modifier␣we␣must␣scan␣the␣replacement
----------
Range: (952887,952972) (85)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣if
----------
Range: (953900,954051) (151)
<<EOM);

Partial␣match␣to␣quote␣modifier␣$allowed_quote_modifiers␣at␣word:␣'$str'
Please␣put␣a␣space␣between␣quote␣modifiers␣and␣trailing␣keywords.
EOM
----------
Range: (954821,954904) (83)
"Note:␣found␣word␣$str␣at␣quote␣modifier␣location\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (961612,961692) (80)
0␣}

␣␣␣␣␣␣␣␣␣␣␣␣###############################################################
----------
Range: (963800,963888) (88)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣#␣quote␣a␣bare␣word␣within␣braces..like␣xxx->{s};␣note␣that␣we
----------
Range: (964526,964603) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣a␣bare␣word␣immediately␣followed␣by␣::␣is␣not␣a␣keyword;
----------
Range: (965357,965462) (105)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣FIXME:␣Patch:␣mark␣something␣like␣x4␣as␣an␣integer␣for␣now
----------
Range: (966643,966788) (145)
'use'

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣these␣regexes␣are␣from␣AutoSplit.pm,␣which␣we␣want
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣to␣mimic
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (966881,966968) (87)
/\bISA\s*=.*\bAutoLoader\b/
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (968887,969002) (115)
"Attempting␣to␣define␣constant␣'$next_nonblank_token'␣which␣is␣a␣perl␣keyword\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (969031,969137) (106)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣FIXME:␣could␣check␣for␣error␣in␣which␣next␣token␣is
----------
Range: (969260,969344) (84)
$is_constant{$current_package}{$next_nonblank_token}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣=
----------
Range: (969372,969456) (84)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣various␣quote␣operators
----------
Range: (970706,970790) (84)
$is_for_foreach{$want_paren}␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (973487,973579) (92)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣recognize␣'use'␣statements,␣which␣are␣special
----------
Range: (973813,973890) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣remember␣my␣and␣our␣to␣check␣for␣trailing␣":␣shared"
----------
Range: (974008,974091) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣Check␣for␣misplaced␣'elsif'␣and␣'else',␣but␣allow␣isolated
----------
Range: (974506,974592) (86)
"expecting␣'$tok'␣to␣follow␣one␣of␣'if|elsif|unless'\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (974915,975196) (281)
/^(if|elsif|unless|case|when)$/

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣to␣avoid␣an␣unwanted␣error␣message␣for
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣the␣case␣of␣a␣parenless␣'case'␣(RT␣105484):
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣switch␣(␣1␣)␣{␣case␣x␣{␣2␣}␣else␣{␣}␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (975244,975329) (85)
/^(if|elsif|unless|case|when)$/
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (975367,975463) (96)
"expecting␣'$tok'␣to␣follow␣one␣of␣'if|elsif|unless|case|when'\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (976449,976541) (92)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣for␣SWITCH/CASE␣if␣'case'␣and␣'when␣are
----------
Range: (978679,978806) (127)
<<EOM);
Expecting␣operator␣after␣'$last_nonblank_token'␣but␣found␣bare␣word␣'$tok'
␣␣␣␣␣␣␣Maybe␣indirectet␣object␣notation?
EOM
----------
Range: (979007,979112) (105)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣mark␣bare␣words␣immediately␣followed␣by␣a␣paren␣as
----------
Range: (979321,979400) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣underscore␣after␣file␣test␣operator␣is␣file␣handle
----------
Range: (980230,980313) (83)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣patch␣for␣SWITCH/CASE␣if␣switch␣and␣given␣not␣keywords
----------
Range: (980878,981010) (132)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣###############################################################
----------
Range: (981651,981743) (92)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣###############################################################
----------
Range: (986595,986676) (81)
#␣␣␣␣␣The␣total␣indentation␣will␣be␣$level␣*␣(4␣spaces)␣+␣$ci_level␣*␣(2␣spaces),
----------
Range: (988171,988249) (78)
#␣␣␣␣␣␣␣the␣nesting␣depth␣that␣would␣occur␣if␣every␣nesting␣token␣--␣'{',␣'[',
----------
Range: (988480,988633) (153)
my␣(␣$ci_string_i,␣$level_i,␣$nesting_block_string_i,
␣␣␣␣␣␣␣␣␣␣␣␣$nesting_list_string_i,␣$nesting_token_string_i,
␣␣␣␣␣␣␣␣␣␣␣␣$nesting_type_string_i,␣);
----------
Range: (991257,991367) (110)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣if␣we␣are␣already␣in␣an␣indented␣if,␣see␣if␣we␣should␣outdent
----------
Range: (992624,992703) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣my␣$tok␣=
----------
Range: (993275,993356) (81)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣----------------------------------------------------------------
----------
Range: (993731,993817) (86)
'k'␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣-----------------------------------------------------------------
----------
Range: (997748,997827) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣do␣not␣change␣container␣environment␣here␣if␣we␣are␣not
----------
Range: (998084,998163) (79)
##␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣File::Spec->catdir(␣$_,␣"auto",␣$root,␣"$sub$lib_ext"␣)
----------
Range: (998622,998715) (93)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣we␣will␣use␣continuation␣indentation␣within␣containers
----------
Range: (999342,999423) (81)
$is_logical_container{␣$routput_container_type->[$i]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣};
----------
Range: (1000175,1000252) (77)
#␣␣For␣other␣types,␣we␣will␣give␣them␣continuation␣indentation.␣␣For␣example,
----------
Range: (1002789,1002872) (83)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

#␣...and␣include␣all␣block␣types␣except␣user␣subs␣with
----------
Range: (1002927,1003044) (117)
#␣/^(\}|\{|BEGIN|END|CHECK|INIT|AUTOLOAD|DESTROY|UNITCHECK|continue|;|if|elsif|else|unless|while|until|for|foreach)$/
----------
Range: (1003105,1003254) (149)
$is_zero_continuation_block_type{
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$routput_block_type->[$i]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (1003524,1003677) (153)
$is_not_zero_continuation_block_type{
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$routput_block_type->[$i]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (1006134,1006226) (92)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣be␣sure␣binary␣operators␣get␣continuation␣indentation
----------
Range: (1006517,1006598) (81)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣continuation␣indentation␣is␣sum␣of␣any␣open␣ci␣from␣previous
----------
Range: (1007198,1007277) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣otherwise,␣we␣are␣continuing␣the␣current␣statement
----------
Range: (1007778,1007857) (79)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣otherwise,␣the␣token␣after␣a␣','␣starts␣a␣new␣term
----------
Range: (1008973,1009069) (96)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣#␣set␣secondary␣nesting␣levels␣based␣on␣all␣containment␣token␣types
----------
Range: (1014533,1014614) (81)
##print␣"tok=$tok␣last␣type=$last_nonblank_type␣last␣tok=$last_nonblank_token\n";
----------
Range: (1014895,1015008) (113)
#␣␣␣␣␣print␣"previous␣token=$last_nonblank_token␣␣type=$last_nonblank_type␣prototype=$last_nonblank_prototype\n";
----------
Range: (1015233,1015312) (79)
}

␣␣␣␣␣␣␣␣#␣For␣possible␣file␣handle␣like␣"$a",␣Perl␣uses␣weird␣parsing␣rules.
----------
Range: (1016012,1016108) (96)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣Check␣for␣smartmatch␣operator␣before␣preceding␣brace␣or␣square␣bracket.
----------
Range: (1020722,1020807) (85)
"OP:␣unknown␣after␣type=$last_nonblank_type␣␣token=$last_nonblank_token\n"
␣␣␣␣␣␣␣␣);
----------
Range: (1020876,1020970) (94)
"EXPECT:␣returns␣$op_expected␣for␣last␣type␣$last_nonblank_type␣token␣$last_nonblank_token\n";
----------
Range: (1021770,1021850) (80)
}

␣␣␣␣#␣otherwise,␣it␣is␣a␣label␣if␣and␣only␣if␣it␣follows␣a␣';'␣(real␣or␣fake)
----------
Range: (1022617,1022701) (84)
#␣print␣"BLOCK_TYPE␣EXAMINING:␣type=$last_nonblank_type␣tok=$last_nonblank_token\n";
----------
Range: (1024065,1024142) (77)
}
␣␣␣␣}

␣␣␣␣################################################################
----------
Range: (1024675,1024806) (131)
#␣/^(BEGIN|END|CHECK|INIT|AUTOLOAD|DESTROY|UNITCHECK|continue|if|elsif|else|unless|do|while|until|eval|for|foreach|map|grep|sort)$/
----------
Range: (1030763,1030852) (89)
/^(s|m|y|tr|qr|q|qq|qx)$/
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣a␣=>
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (1031163,1031276) (113)
my␣(␣$found,␣$expecting,␣$i_tok,␣$last_nonblank_i,␣$rpretoken_map,
␣␣␣␣␣␣␣␣$rpretoken_type,␣$input_line␣)
␣␣␣␣␣␣=
----------
Range: (1033667,1033926) (259)
/^([\$\@\*\&\%\)]|->|::)/

␣␣␣␣␣␣␣␣␣␣#␣or␣if␣we␣follow␣a␣hash␣or␣array␣closing␣curly␣brace␣or␣bracket
␣␣␣␣␣␣␣␣␣␣#␣For␣example,␣the␣second␣'{'␣in␣this␣is␣non-structural:␣$a{'x'}{'y'}
␣␣␣␣␣␣␣␣␣␣#␣because␣the␣first␣'}'␣would␣have␣been␣given␣type␣'R'
␣␣␣␣␣␣␣␣␣␣||
----------
Range: (1037415,1037503) (88)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}
␣␣␣␣}
␣␣␣␣$nested_statement_type[$aa][␣$current_depth[$aa]␣]␣=
----------
Range: (1038974,1039137) (163)
MAX_NAG_MESSAGES

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣if␣too␣many␣closing␣types␣have␣occurred,␣we␣probably
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣already␣caught␣this␣error
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (1039316,1039399) (83)
$starting_line_of_current_depth[$aa]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣[␣$current_depth[$aa]␣];
----------
Range: (1040043,1040172) (129)
<<"EOM";
Found␣$diff␣extra␣$bname$ess␣between␣$opening_brace_names[$aa]␣on␣line␣$sl␣and␣$closing_brace_names[$aa]␣on␣line␣$el
EOM
----------
Range: (1040273,1040360) (87)
$starting_line_of_current_depth[$bb]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣[␣$current_depth[$bb]␣];
----------
Range: (1040978,1041101) (123)
<<"EOM";
There␣is␣no␣previous␣$opening_brace_names[$aa]␣to␣match␣a␣$closing_brace_names[$aa]␣on␣line␣$input_line_number
EOM
----------
Range: (1041627,1041780) (153)
<<"EOM";
Final␣nesting␣depth␣of␣$opening_brace_names[$aa]s␣is␣$current_depth[$aa]
The␣most␣recent␣un-matched␣$opening_brace_names[$aa]␣is␣on␣line␣$sl
EOM
----------
Range: (1041874,1041956) (82)
}
␣␣␣␣}
}

#########i#############################################################
----------
Range: (1051030,1051124) (94)
my␣(␣$input_line,␣$i,␣$tok,␣$type,␣$prototype,␣$rtoken_map,
␣␣␣␣␣␣␣␣$max_token_index␣)
␣␣␣␣␣␣=
----------
Range: (1053385,1053463) (78)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣bareword␣after␣sort␣has␣implied␣empty␣prototype;␣for␣example:
----------
Range: (1053751,1053828) (77)
}

␣␣␣␣␣␣␣␣␣␣␣␣#␣Note:␣strangely,␣perl␣does␣not␣seem␣to␣really␣let␣you␣create
----------
Range: (1055288,1055433) (145)
$is_indirect_object_taker{$last_nonblank_token}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣or␣preceded␣by␣something␣like␣'print('␣or␣'printf('
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣||
----------
Range: (1055519,1055668) (149)
$is_indirect_object_taker{␣$paren_type[$paren_depth]
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣␣␣␣␣{
----------
Range: (1056714,1056801) (87)
"Caution:␣unknown␣word␣'$tok'␣in␣indirect␣object␣slot\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (1056826,1056944) (118)
}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣bareword␣not␣followed␣by␣a␣space␣--␣may␣not␣be␣filehandle
----------
Range: (1057087,1057172) (85)
}
␣␣␣␣␣␣␣␣␣␣␣␣}
␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣#␣Now␣we␣must␣convert␣back␣from␣character␣position
----------
Range: (1058525,1058609) (84)
#␣USES␣GLOBAL␣VARIABLES:␣$current_package,␣$last_nonblank_token,␣$in_attribute_list,
----------
Range: (1058650,1058751) (101)
my␣(␣$input_line,␣$i,␣$tok,␣$rtokens,␣$rtoken_map,␣$id_scan_state,
␣␣␣␣␣␣␣␣$max_token_index␣)
␣␣␣␣␣␣=
----------
Range: (1060034,1060113) (79)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣handle␣non-blank␣line;␣identifier,␣if␣any,␣must␣follow
----------
Range: (1060925,1061008) (83)
"Program␣bug␣in␣scan_id:␣undefined␣type␣but␣scan_state=$id_scan_state\n"
␣␣␣␣␣␣␣␣);
----------
Range: (1063238,1063338) (100)
my␣(␣$input_line,␣$i,␣$i_beg,␣$tok,␣$type,␣$rtokens,␣$rtoken_map,
␣␣␣␣␣␣␣␣$max_token_index␣)
␣␣␣␣␣␣=
----------
Range: (1065257,1065335) (78)
"Unexpected␣'$next_nonblank_token'␣after␣package␣name␣'$tok'\n"
␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (1065917,1066028) (111)
my␣(␣$i,␣$id_scan_state,␣$identifier,␣$rtokens,␣$max_token_index,
␣␣␣␣␣␣␣␣$expecting,␣$container_type␣)
␣␣␣␣␣␣=
----------
Range: (1074102,1074184) (82)
}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣POSTDEFREF:␣Postfix␣reference␣->$*␣->%*␣␣->@*␣->**␣->&*␣->$#*
----------
Range: (1082695,1082898) (203)
1␣)

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣In␣something␣like␣'@$='␣we␣have␣an␣identifier␣'@$'
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣In␣something␣like␣'$${'␣we␣have␣type␣'$$'␣(and␣only
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣part␣of␣an␣identifier)
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (1083680,1083807) (127)
"SCANID:␣called␣from␣$a␣$b␣$c␣with␣tok,␣i,␣state,␣identifier␣=$tok_begin,␣$i_begin,␣$id_scan_state_begin,␣$identifier_begin\n";
----------
Range: (1083829,1083920) (91)
"SCANID:␣returned␣with␣tok,␣i,␣state,␣identifier␣=$tok,␣$i,␣$id_scan_state,␣$identifier\n";
----------
Range: (1084689,1084863) (174)
my␣(
␣␣␣␣␣␣␣␣␣␣␣␣$input_line,␣$i,␣␣␣␣␣␣␣␣␣␣␣␣␣$i_beg,
␣␣␣␣␣␣␣␣␣␣␣␣$tok,␣␣␣␣␣␣␣␣$type,␣␣␣␣␣␣␣␣␣␣$rtokens,
␣␣␣␣␣␣␣␣␣␣␣␣$rtoken_map,␣$id_scan_state,␣$max_token_index
␣␣␣␣␣␣␣␣)␣=
----------
Range: (1085231,1085393) (162)
m/\G\s*
␣␣␣␣␣␣␣␣((?:\w*(?:'|::))*)␣␣#␣package␣-␣something␣that␣ends␣in␣::␣or␣'
␣␣␣␣␣␣␣␣(\w+)␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣NAME␣␣␣␣-␣required
␣␣␣␣␣␣␣␣/gcx
␣␣␣␣␣␣␣␣␣␣)
␣␣␣␣␣␣␣␣{
----------
Range: (1086552,1086690) (138)
m/\G(\s*\([^\)\(\}\{\,]*\))?␣␣#␣PROTO
␣␣␣␣␣␣␣␣␣␣␣␣(\s*:)?␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣ATTRS␣leading␣':'
␣␣␣␣␣␣␣␣␣␣␣␣/gcx
␣␣␣␣␣␣␣␣␣␣␣␣&&
----------
Range: (1088315,1088401) (86)
"Possibly␣invalid␣sub\n")␣}

␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣#␣check␣for␣multiple␣definitions␣of␣a␣sub
----------
Range: (1089677,1089783) (106)
"already␣saw␣definition␣of␣'sub␣$subname'␣in␣package␣'$package'␣at␣line␣$lno\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (1091268,1091399) (131)
"expecting␣':'␣or␣';'␣or␣'{'␣after␣definition␣or␣declaration␣of␣sub␣'$subname'␣but␣saw␣'$next_nonblank_token'\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (1091603,1091681) (78)
}
}

#########i###############################################################
----------
Range: (1095118,1095207) (89)
'[\>\;\=\#\|\<]'␣}

␣␣␣␣#␣shouldn't␣happen␣-␣we␣shouldn't␣be␣here␣if␣operator␣is␣expected
----------
Range: (1095227,1095345) (118)
"Program␣Bug␣in␣find_angle_operator_termination\n")␣}

␣␣␣␣#␣To␣illustrate␣what␣we␣might␣be␣looking␣at,␣in␣case␣we␣are
----------
Range: (1096949,1097026) (77)
}
␣␣␣␣␣␣␣␣␣␣␣␣}

␣␣␣␣␣␣␣␣␣␣␣␣######################################debug#####
----------
Range: (1105412,1105518) (106)
"Did␣not␣find␣here-doc␣string␣terminator␣($here_quote_character)␣before␣end␣of␣line␣\n"
␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣);
----------
Range: (1107701,1107907) (206)
my␣(
␣␣␣␣␣␣␣␣$i,␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣$in_quote,␣␣␣␣$quote_character,
␣␣␣␣␣␣␣␣$quote_pos,␣␣␣␣␣␣␣$quote_depth,␣$quoted_string_1,
␣␣␣␣␣␣␣␣$quoted_string_2,␣$rtokens,␣␣␣␣␣$rtoken_map,
␣␣␣␣␣␣␣␣$max_token_index
␣␣␣␣)␣=
----------
Range: (1110079,1110189) (110)
my␣(␣$i_beg,␣$in_quote,␣$rtokens,␣$beginning_tok,␣$quote_pos,␣$quote_depth,
␣␣␣␣␣␣␣␣$max_token_index␣)
␣␣␣␣␣␣=
----------
Range: (1110346,1110428) (82)
"QUOTE␣entering␣with␣quote_pos␣=␣$quote_pos␣i=$i␣beginning_tok␣=$beginning_tok\n";
----------
Range: (1111603,1111691) (88)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣#␣There␣are␣two␣different␣loops␣which␣search␣for␣the␣ending␣quote
----------
Range: (1113722,1113817) (95)
}
␣␣␣␣␣␣␣␣}
␣␣␣␣}

␣␣␣␣########################################################################
----------
Range: (1121111,1123990) (2879)
print␣$fh␣<<'END_OF_LIST';

Here␣is␣a␣list␣of␣the␣token␣types␣currently␣used␣for␣lines␣of␣type␣'CODE'.
For␣the␣following␣tokens,␣the␣"type"␣of␣a␣token␣is␣just␣the␣token␣itself.

..␣::␣<<␣>>␣**␣&&␣..␣||␣//␣->␣=>␣+=␣-=␣.=␣%=␣&=␣|=␣^=␣*=␣<>
(␣)␣<=␣>=␣==␣=~␣!~␣!=␣++␣--␣/=␣x=
...␣**=␣<<=␣>>=␣&&=␣||=␣//=␣<=>
,␣+␣-␣/␣*␣|␣%␣!␣x␣~␣=␣\␣?␣:␣.␣<␣>␣^␣&

The␣following␣additional␣token␣types␣are␣defined:

␣type␣␣␣␣meaning
␣␣␣␣b␣␣␣␣blank␣(white␣space)
␣␣␣␣{␣␣␣␣indent:␣opening␣structural␣curly␣brace␣or␣square␣bracket␣or␣paren
␣␣␣␣␣␣␣␣␣(code␣block,␣anonymous␣hash␣reference,␣or␣anonymous␣array␣reference)
␣␣␣␣}␣␣␣␣outdent:␣right␣structural␣curly␣brace␣or␣square␣bracket␣or␣paren
␣␣␣␣[␣␣␣␣left␣non-structural␣square␣bracket␣(enclosing␣an␣array␣index)
␣␣␣␣]␣␣␣␣right␣non-structural␣square␣bracket
␣␣␣␣(␣␣␣␣left␣non-structural␣paren␣(all␣but␣a␣list␣right␣of␣an␣=)
␣␣␣␣)␣␣␣␣right␣non-structural␣paren
␣␣␣␣L␣␣␣␣left␣non-structural␣curly␣brace␣(enclosing␣a␣key)
␣␣␣␣R␣␣␣␣right␣non-structural␣curly␣brace
␣␣␣␣;␣␣␣␣terminal␣semicolon
␣␣␣␣f␣␣␣␣indicates␣a␣semicolon␣in␣a␣"for"␣statement
␣␣␣␣h␣␣␣␣here_doc␣operator␣<<
␣␣␣␣#␣␣␣␣a␣comment
␣␣␣␣Q␣␣␣␣indicates␣a␣quote␣or␣pattern
␣␣␣␣q␣␣␣␣indicates␣a␣qw␣quote␣block
␣␣␣␣k␣␣␣␣a␣perl␣keyword
␣␣␣␣C␣␣␣␣user-defined␣constant␣or␣constant␣function␣(with␣void␣prototype␣=␣())
␣␣␣␣U␣␣␣␣user-defined␣function␣taking␣parameters
␣␣␣␣G␣␣␣␣user-defined␣function␣taking␣block␣parameter␣(like␣grep/map/eval)
␣␣␣␣M␣␣␣␣(unused,␣but␣reserved␣for␣subroutine␣definition␣name)
␣␣␣␣P␣␣␣␣(unused,␣but␣-html␣uses␣it␣to␣label␣pod␣text)
␣␣␣␣t␣␣␣␣type␣indicater␣such␣as␣%,$,@,*,&,sub
␣␣␣␣w␣␣␣␣bare␣word␣(perhaps␣a␣subroutine␣call)
␣␣␣␣i␣␣␣␣identifier␣of␣some␣type␣(with␣leading␣%,␣$,␣@,␣*,␣&,␣sub,␣->␣)
␣␣␣␣n␣␣␣␣a␣number
␣␣␣␣v␣␣␣␣a␣v-string
␣␣␣␣F␣␣␣␣a␣file␣test␣operator␣(like␣-e)
␣␣␣␣Y␣␣␣␣File␣handle
␣␣␣␣Z␣␣␣␣identifier␣in␣indirect␣object␣slot:␣may␣be␣file␣handle,␣object
␣␣␣␣J␣␣␣␣LABEL:␣␣code␣block␣label
␣␣␣␣j␣␣␣␣LABEL␣after␣next,␣last,␣redo,␣goto
␣␣␣␣p␣␣␣␣unary␣+
␣␣␣␣m␣␣␣␣unary␣-
␣␣␣␣pp␣␣␣pre-increment␣operator␣++
␣␣␣␣mm␣␣␣pre-decrement␣operator␣--
␣␣␣␣A␣␣␣␣:␣used␣as␣attribute␣separator

␣␣␣␣Here␣are␣the␣'_line_type'␣codes␣used␣internally:
␣␣␣␣SYSTEM␣␣␣␣␣␣␣␣␣-␣system-specific␣code␣before␣hash-bang␣line
␣␣␣␣CODE␣␣␣␣␣␣␣␣␣␣␣-␣line␣of␣perl␣code␣(including␣comments)
␣␣␣␣POD_START␣␣␣␣␣␣-␣line␣starting␣pod,␣such␣as␣'=head'
␣␣␣␣POD␣␣␣␣␣␣␣␣␣␣␣␣-␣pod␣documentation␣text
␣␣␣␣POD_END␣␣␣␣␣␣␣␣-␣last␣line␣of␣pod␣section,␣'=cut'
␣␣␣␣HERE␣␣␣␣␣␣␣␣␣␣␣-␣text␣of␣here-document
␣␣␣␣HERE_END␣␣␣␣␣␣␣-␣last␣line␣of␣here-doc␣(target␣word)
␣␣␣␣FORMAT␣␣␣␣␣␣␣␣␣-␣format␣section
␣␣␣␣FORMAT_END␣␣␣␣␣-␣last␣line␣of␣format␣section,␣'.'
␣␣␣␣DATA_START␣␣␣␣␣-␣__DATA__␣line
␣␣␣␣DATA␣␣␣␣␣␣␣␣␣␣␣-␣unidentified␣text␣following␣__DATA__
␣␣␣␣END_START␣␣␣␣␣␣-␣__END__␣line
␣␣␣␣END␣␣␣␣␣␣␣␣␣␣␣␣-␣unidentified␣text␣following␣__END__
␣␣␣␣ERROR␣␣␣␣␣␣␣␣␣␣-␣we␣are␣in␣big␣trouble,␣probably␣not␣a␣perl␣script
END_OF_LIST
----------
Range: (1124168,1124295) (127)
qw(
␣␣␣␣␣␣..␣::␣<<␣>>␣**␣&&␣..␣||␣//␣->␣=>␣+=␣-=␣.=␣%=␣&=␣|=␣^=␣*=␣<>
␣␣␣␣␣␣<=␣>=␣==␣=~␣!~␣!=␣++␣--␣/=␣x=␣~~␣~.␣|.␣&.␣^.
␣␣␣␣);
----------
Range: (1124658,1124786) (128)
qw#
␣␣␣␣␣␣A␣b␣C␣G␣L␣R␣f␣h␣Q␣k␣t␣w␣i␣q␣n␣p␣m␣F␣pp␣mm␣U␣j␣J␣Y␣Z␣v
␣␣␣␣␣␣{␣}␣(␣)␣[␣]␣;␣+␣-␣/␣*␣|␣%␣!␣x␣~␣=␣\␣?␣:␣.␣<␣>␣^␣&
␣␣␣␣␣␣#;
----------
Range: (1125930,1126100) (170)
qw(␣BEGIN␣END␣CHECK␣INIT␣AUTOLOAD␣DESTROY␣UNITCHECK␣continue␣if␣elsif␣else
␣␣␣␣␣␣unless␣do␣while␣until␣eval␣for␣foreach␣map␣grep␣sort
␣␣␣␣␣␣switch␣case␣given␣when␣catch);
----------
Range: (1126497,1129240) (2743)
qw(
␣␣␣␣␣␣AUTOLOAD
␣␣␣␣␣␣BEGIN
␣␣␣␣␣␣CHECK
␣␣␣␣␣␣DESTROY
␣␣␣␣␣␣END
␣␣␣␣␣␣EQ
␣␣␣␣␣␣GE
␣␣␣␣␣␣GT
␣␣␣␣␣␣INIT
␣␣␣␣␣␣LE
␣␣␣␣␣␣LT
␣␣␣␣␣␣NE
␣␣␣␣␣␣UNITCHECK
␣␣␣␣␣␣abs
␣␣␣␣␣␣accept
␣␣␣␣␣␣alarm
␣␣␣␣␣␣and
␣␣␣␣␣␣atan2
␣␣␣␣␣␣bind
␣␣␣␣␣␣binmode
␣␣␣␣␣␣bless
␣␣␣␣␣␣break
␣␣␣␣␣␣caller
␣␣␣␣␣␣chdir
␣␣␣␣␣␣chmod
␣␣␣␣␣␣chomp
␣␣␣␣␣␣chop
␣␣␣␣␣␣chown
␣␣␣␣␣␣chr
␣␣␣␣␣␣chroot
␣␣␣␣␣␣close
␣␣␣␣␣␣closedir
␣␣␣␣␣␣cmp
␣␣␣␣␣␣connect
␣␣␣␣␣␣continue
␣␣␣␣␣␣cos
␣␣␣␣␣␣crypt
␣␣␣␣␣␣dbmclose
␣␣␣␣␣␣dbmopen
␣␣␣␣␣␣defined
␣␣␣␣␣␣delete
␣␣␣␣␣␣die
␣␣␣␣␣␣dump
␣␣␣␣␣␣each
␣␣␣␣␣␣else
␣␣␣␣␣␣elsif
␣␣␣␣␣␣eof
␣␣␣␣␣␣eq
␣␣␣␣␣␣exec
␣␣␣␣␣␣exists
␣␣␣␣␣␣exit
␣␣␣␣␣␣exp
␣␣␣␣␣␣fcntl
␣␣␣␣␣␣fileno
␣␣␣␣␣␣flock
␣␣␣␣␣␣for
␣␣␣␣␣␣foreach
␣␣␣␣␣␣formline
␣␣␣␣␣␣ge
␣␣␣␣␣␣getc
␣␣␣␣␣␣getgrgid
␣␣␣␣␣␣getgrnam
␣␣␣␣␣␣gethostbyaddr
␣␣␣␣␣␣gethostbyname
␣␣␣␣␣␣getnetbyaddr
␣␣␣␣␣␣getnetbyname
␣␣␣␣␣␣getpeername
␣␣␣␣␣␣getpgrp
␣␣␣␣␣␣getpriority
␣␣␣␣␣␣getprotobyname
␣␣␣␣␣␣getprotobynumber
␣␣␣␣␣␣getpwnam
␣␣␣␣␣␣getpwuid
␣␣␣␣␣␣getservbyname
␣␣␣␣␣␣getservbyport
␣␣␣␣␣␣getsockname
␣␣␣␣␣␣getsockopt
␣␣␣␣␣␣glob
␣␣␣␣␣␣gmtime
␣␣␣␣␣␣goto
␣␣␣␣␣␣grep
␣␣␣␣␣␣gt
␣␣␣␣␣␣hex
␣␣␣␣␣␣if
␣␣␣␣␣␣index
␣␣␣␣␣␣int
␣␣␣␣␣␣ioctl
␣␣␣␣␣␣join
␣␣␣␣␣␣keys
␣␣␣␣␣␣kill
␣␣␣␣␣␣last
␣␣␣␣␣␣lc
␣␣␣␣␣␣lcfirst
␣␣␣␣␣␣le
␣␣␣␣␣␣length
␣␣␣␣␣␣link
␣␣␣␣␣␣listen
␣␣␣␣␣␣local
␣␣␣␣␣␣localtime
␣␣␣␣␣␣lock
␣␣␣␣␣␣log
␣␣␣␣␣␣lstat
␣␣␣␣␣␣lt
␣␣␣␣␣␣map
␣␣␣␣␣␣mkdir
␣␣␣␣␣␣msgctl
␣␣␣␣␣␣msgget
␣␣␣␣␣␣msgrcv
␣␣␣␣␣␣msgsnd
␣␣␣␣␣␣my
␣␣␣␣␣␣ne
␣␣␣␣␣␣next
␣␣␣␣␣␣no
␣␣␣␣␣␣not
␣␣␣␣␣␣oct
␣␣␣␣␣␣open
␣␣␣␣␣␣opendir
␣␣␣␣␣␣or
␣␣␣␣␣␣ord
␣␣␣␣␣␣our
␣␣␣␣␣␣pack
␣␣␣␣␣␣pipe
␣␣␣␣␣␣pop
␣␣␣␣␣␣pos
␣␣␣␣␣␣print
␣␣␣␣␣␣printf
␣␣␣␣␣␣prototype
␣␣␣␣␣␣push
␣␣␣␣␣␣quotemeta
␣␣␣␣␣␣rand
␣␣␣␣␣␣read
␣␣␣␣␣␣readdir
␣␣␣␣␣␣readlink
␣␣␣␣␣␣readline
␣␣␣␣␣␣readpipe
␣␣␣␣␣␣recv
␣␣␣␣␣␣redo
␣␣␣␣␣␣ref
␣␣␣␣␣␣rename
␣␣␣␣␣␣require
␣␣␣␣␣␣reset
␣␣␣␣␣␣return
␣␣␣␣␣␣reverse
␣␣␣␣␣␣rewinddir
␣␣␣␣␣␣rindex
␣␣␣␣␣␣rmdir
␣␣␣␣␣␣scalar
␣␣␣␣␣␣seek
␣␣␣␣␣␣seekdir
␣␣␣␣␣␣select
␣␣␣␣␣␣semctl
␣␣␣␣␣␣semget
␣␣␣␣␣␣semop
␣␣␣␣␣␣send
␣␣␣␣␣␣sethostent
␣␣␣␣␣␣setnetent
␣␣␣␣␣␣setpgrp
␣␣␣␣␣␣setpriority
␣␣␣␣␣␣setprotoent
␣␣␣␣␣␣setservent
␣␣␣␣␣␣setsockopt
␣␣␣␣␣␣shift
␣␣␣␣␣␣shmctl
␣␣␣␣␣␣shmget
␣␣␣␣␣␣shmread
␣␣␣␣␣␣shmwrite
␣␣␣␣␣␣shutdown
␣␣␣␣␣␣sin
␣␣␣␣␣␣sleep
␣␣␣␣␣␣socket
␣␣␣␣␣␣socketpair
␣␣␣␣␣␣sort
␣␣␣␣␣␣splice
␣␣␣␣␣␣split
␣␣␣␣␣␣sprintf
␣␣␣␣␣␣sqrt
␣␣␣␣␣␣srand
␣␣␣␣␣␣stat
␣␣␣␣␣␣study
␣␣␣␣␣␣substr
␣␣␣␣␣␣symlink
␣␣␣␣␣␣syscall
␣␣␣␣␣␣sysopen
␣␣␣␣␣␣sysread
␣␣␣␣␣␣sysseek
␣␣␣␣␣␣system
␣␣␣␣␣␣syswrite
␣␣␣␣␣␣tell
␣␣␣␣␣␣telldir
␣␣␣␣␣␣tie
␣␣␣␣␣␣tied
␣␣␣␣␣␣truncate
␣␣␣␣␣␣uc
␣␣␣␣␣␣ucfirst
␣␣␣␣␣␣umask
␣␣␣␣␣␣undef
␣␣␣␣␣␣unless
␣␣␣␣␣␣unlink
␣␣␣␣␣␣unpack
␣␣␣␣␣␣unshift
␣␣␣␣␣␣untie
␣␣␣␣␣␣until
␣␣␣␣␣␣use
␣␣␣␣␣␣utime
␣␣␣␣␣␣values
␣␣␣␣␣␣vec
␣␣␣␣␣␣waitpid
␣␣␣␣␣␣warn
␣␣␣␣␣␣while
␣␣␣␣␣␣write
␣␣␣␣␣␣xor

␣␣␣␣␣␣switch
␣␣␣␣␣␣case
␣␣␣␣␣␣given
␣␣␣␣␣␣when
␣␣␣␣␣␣err
␣␣␣␣␣␣say
␣␣␣␣);
----------
Range: (1129948,1130274) (326)
qw(
␣␣␣␣␣␣endgrent
␣␣␣␣␣␣endhostent
␣␣␣␣␣␣endnetent
␣␣␣␣␣␣endprotoent
␣␣␣␣␣␣endpwent
␣␣␣␣␣␣endservent
␣␣␣␣␣␣fork
␣␣␣␣␣␣getgrent
␣␣␣␣␣␣gethostent
␣␣␣␣␣␣getlogin
␣␣␣␣␣␣getnetent
␣␣␣␣␣␣getppid
␣␣␣␣␣␣getprotoent
␣␣␣␣␣␣getpwent
␣␣␣␣␣␣getservent
␣␣␣␣␣␣setgrent
␣␣␣␣␣␣setpwent
␣␣␣␣␣␣time
␣␣␣␣␣␣times
␣␣␣␣␣␣wait
␣␣␣␣␣␣wantarray
␣␣␣␣);
----------
Range: (1131073,1131324) (251)
qw#
␣␣␣␣␣␣L␣{␣(␣[␣~␣!~␣=~␣;␣.␣..␣...␣A␣:␣&&␣!␣||␣//␣=␣+␣-␣x
␣␣␣␣␣␣**=␣+=␣-=␣.=␣/=␣*=␣%=␣x=␣&=␣|=␣^=␣<<=␣>>=␣&&=␣||=␣//=
␣␣␣␣␣␣<=␣>=␣==␣!=␣=>␣\␣>␣<␣%␣*␣/␣?␣&␣|␣**␣<=>␣~~␣!~~
␣␣␣␣␣␣f␣F␣pp␣mm␣Y␣p␣m␣U␣J␣G␣j␣>>␣<<␣^␣t
␣␣␣␣␣␣~.␣^.␣|.␣&.␣^.=␣|.=␣&.=
␣␣␣␣␣␣#;
----------
Range: (1132476,1132620) (144)
qw(
␣␣␣␣␣␣do
␣␣␣␣␣␣eval
␣␣␣␣␣␣format
␣␣␣␣␣␣m
␣␣␣␣␣␣package
␣␣␣␣␣␣q
␣␣␣␣␣␣qq
␣␣␣␣␣␣qr
␣␣␣␣␣␣qw
␣␣␣␣␣␣qx
␣␣␣␣␣␣s
␣␣␣␣␣␣sub
␣␣␣␣␣␣tr
␣␣␣␣␣␣y
␣␣␣␣);
----------
Range: (1132843,1133753) (910)
qw(
␣␣␣␣␣␣and
␣␣␣␣␣␣chmod
␣␣␣␣␣␣chomp
␣␣␣␣␣␣chop
␣␣␣␣␣␣chown
␣␣␣␣␣␣dbmopen
␣␣␣␣␣␣die
␣␣␣␣␣␣elsif
␣␣␣␣␣␣exec
␣␣␣␣␣␣fcntl
␣␣␣␣␣␣for
␣␣␣␣␣␣foreach
␣␣␣␣␣␣formline
␣␣␣␣␣␣getsockopt
␣␣␣␣␣␣if
␣␣␣␣␣␣index
␣␣␣␣␣␣ioctl
␣␣␣␣␣␣join
␣␣␣␣␣␣kill
␣␣␣␣␣␣local
␣␣␣␣␣␣msgctl
␣␣␣␣␣␣msgrcv
␣␣␣␣␣␣msgsnd
␣␣␣␣␣␣my
␣␣␣␣␣␣open
␣␣␣␣␣␣or
␣␣␣␣␣␣our
␣␣␣␣␣␣pack
␣␣␣␣␣␣print
␣␣␣␣␣␣printf
␣␣␣␣␣␣push
␣␣␣␣␣␣read
␣␣␣␣␣␣readpipe
␣␣␣␣␣␣recv
␣␣␣␣␣␣return
␣␣␣␣␣␣reverse
␣␣␣␣␣␣rindex
␣␣␣␣␣␣seek
␣␣␣␣␣␣select
␣␣␣␣␣␣semctl
␣␣␣␣␣␣semget
␣␣␣␣␣␣send
␣␣␣␣␣␣setpriority
␣␣␣␣␣␣setsockopt
␣␣␣␣␣␣shmctl
␣␣␣␣␣␣shmget
␣␣␣␣␣␣shmread
␣␣␣␣␣␣shmwrite
␣␣␣␣␣␣socket
␣␣␣␣␣␣socketpair
␣␣␣␣␣␣sort
␣␣␣␣␣␣splice
␣␣␣␣␣␣split
␣␣␣␣␣␣sprintf
␣␣␣␣␣␣substr
␣␣␣␣␣␣syscall
␣␣␣␣␣␣sysopen
␣␣␣␣␣␣sysread
␣␣␣␣␣␣sysseek
␣␣␣␣␣␣system
␣␣␣␣␣␣syswrite
␣␣␣␣␣␣tie
␣␣␣␣␣␣unless
␣␣␣␣␣␣unlink
␣␣␣␣␣␣unpack
␣␣␣␣␣␣unshift
␣␣␣␣␣␣until
␣␣␣␣␣␣vec
␣␣␣␣␣␣warn
␣␣␣␣␣␣while
␣␣␣␣␣␣given
␣␣␣␣␣␣when
␣␣␣␣);
----------
