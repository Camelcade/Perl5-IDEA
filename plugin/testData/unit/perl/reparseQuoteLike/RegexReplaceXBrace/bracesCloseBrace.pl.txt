Reparsing block
----------
Full reparse
----------
After typing
----------
sub something{
  s{test
    say 'hi';
    # comment }<caret>
    say 'hi'
  }<replacement $3>x;
}

----------
Psi structure
----------
Perl5
  PsiPerlSubDefinitionImpl(SUB_DEFINITION)@main::something
    PsiElement(Perl5: sub)('sub')
    PsiWhiteSpace(' ')
    PerlSubNameElementImpl(Perl5: subname)('something')
    PsiPerlBlockImpl(Perl5: BLOCK)
      PsiElement(Perl5: {)('{')
      PsiWhiteSpace('\n  ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlReplacementRegexImpl(Perl5: REPLACEMENT_REGEX)
          PsiElement(Perl5: s)('s')
          PsiElement(Perl5: r{)('{')
          PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)
            PsiElement(Perl5: regex)('test\n    say 'hi';\n    # comment ')
          PsiElement(Perl5: r})('}')
          PsiWhiteSpace('\n    ')
          PsiElement(Perl5: r{)('s')
          PsiPerlRegexReplacementImpl(Perl5: REGEX_REPLACEMENT)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('ay 'hi'\n  }<replacement ')
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('3')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('>x;\n}\n')
          PsiErrorElement:<expr>, <oct char>, Perl5: STRING_CONTENT_QQ, Perl5: \1, Perl5: \E, Perl5: \F, Perl5: \L, Perl5: \N, Perl5: \Q, Perl5: \U, Perl5: \\", Perl5: \\u, Perl5: \a, Perl5: \b, Perl5: \c*, Perl5: \e, Perl5: \f, Perl5: \l, Perl5: \n, Perl5: \r, Perl5: \t, Perl5: \x or Perl5: r} expected
            <empty list>
