Subtree: Perl5 (Perl5)
Perl5
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlStringSqImpl(Perl5: STRING_SQ)
      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)(':full')
      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: charname)('GREEK SMALL LETTER SIGMA')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' is called sigma.')
          PsiElement(Perl5: \n)('\n')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
              PsiElement(Perl5: \N)('\N')
              PsiElement(Perl5: "{)('{')
              PsiElement(Perl5: charname)('LATIN CAPITAL LETTER E WITH VERTICAL LINE BELOW')
              PsiElement(Perl5: }")('}')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' is an officially named sequence of two Unicode characters')
            PsiElement(Perl5: \n)('\n')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlStringSqImpl(Perl5: STRING_SQ)
      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)(':loose')
      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
              PsiElement(Perl5: \N)('\N')
              PsiElement(Perl5: "{)('{')
              PsiElement(Perl5: charname)('Greek small-letter  sigma')
              PsiElement(Perl5: }")('}')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('can be used to ignore case, underscores, most blanks,')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('and when you aren't sure if the official name has hyphens')
            PsiElement(Perl5: \n)('\n')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlStringSqImpl(Perl5: STRING_SQ)
      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
      PerlStringContentElementImpl(Perl5: STRING_CONTENT)(':short')
      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: charname)('greek:Sigma')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' is an upper-case sigma.')
          PsiElement(Perl5: \n)('\n')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlStringListImpl(Perl5: STRING_LIST)
      PsiElement(Perl5: qw)('qw')
      PsiElement(Perl5: QUOTE_SINGLE_OPEN)('(')
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('cyrillic')
      PsiPerlStringBareImpl(Perl5: STRING_BARE)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('greek')
      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(')')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: charname)('sigma')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' is Greek sigma, and ')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: charname)('be')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' is Cyrillic b.')
          PsiElement(Perl5: \n)('\n')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PerlUseStatementElement(USE_STATEMENT)
    PsiElement(Perl5: use)('use')
    PerlNamespaceElementImpl(Perl5: package::name)('charnames')
    PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
      PsiPerlStringDqImpl(Perl5: STRING_DQ)
        PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(':full')
        PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
      PsiElement(Perl5: ,)(',')
      PsiPerlStringDqImpl(Perl5: STRING_DQ)
        PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
        PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(':alias')
        PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
      PsiElement(Perl5: =>)('=>')
      PsiPerlAnonHashImpl(Perl5: ANON_HASH)
        PsiElement(Perl5: {)('{')
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('e_ACUTE')
          PsiElement(Perl5: =>)('=>')
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('LATIN SMALL LETTER E WITH ACUTE')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('mychar')
          PsiElement(Perl5: =>)('=>')
          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
            PsiElement(Perl5: NUMBER_HEX)('0xE8000')
          PsiElement(Perl5: ,)(',')
          PsiComment(Perl5: COMMENT_LINE)('# Private use area')
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('自転車に乗る人')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: =>)('=>')
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('BICYCLIST')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
        PsiElement(Perl5: })('}')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: charname)('e_ACUTE')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' is a small letter e with an acute.')
          PsiElement(Perl5: \n)('\n')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: charname)('mychar')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' allows me to name private use characters.')
          PsiElement(Perl5: \n)('\n')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: print)('print')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('And I can create synonyms in other languages,')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' such as ')
            PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
              PsiElement(Perl5: \N)('\N')
              PsiElement(Perl5: "{)('{')
              PsiElement(Perl5: charname)('自転車に乗る人')
              PsiElement(Perl5: }")('}')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' for ')
            PsiElement(Perl5: \\")('\')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('"BICYCLIST (U+1F6B4)')
            PsiElement(Perl5: \n)('\n')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('Hello man ')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: U+)('U+')
            PsiElement(Perl5: NUMBER_HEX)('21')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' ')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: U+)('U+')
            PsiElement(Perl5: NUMBER_HEX)('021')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' ')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: U+)('U+')
            PsiElement(Perl5: NUMBER_HEX)('0021')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' ')
          PsiPerlUnicodeCharImpl(Perl5: UNICODE_CHAR)
            PsiElement(Perl5: \N)('\N')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: U+)('U+')
            PsiElement(Perl5: NUMBER_HEX)('00021')
            PsiElement(Perl5: }")('}')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
--------------------------------------------------------------------------------
Subtree: Perl5 POD (Perl5 POD)
POD file
  PsiElement(Perl5 POD: POD_OUTER)('use charnames ':full';\nprint "\N{GREEK SMALL LETTER SIGMA} is called sigma.\n";\nprint "\N{LATIN CAPITAL LETTER E WITH VERTICAL LINE BELOW}",\n    " is an officially named sequence of two Unicode characters\n";\nuse charnames ':loose';\nprint "\N{Greek small-letter  sigma}",\n    "can be used to ignore case, underscores, most blanks,",\n    "and when you aren't sure if the official name has hyphens\n";\nuse charnames ':short';\nprint "\N{greek:Sigma} is an upper-case sigma.\n";\nuse charnames qw(cyrillic greek);\nprint "\N{sigma} is Greek sigma, and \N{be} is Cyrillic b.\n";\n\nuse charnames ":full", ":alias" => {\n    e_ACUTE   => "LATIN SMALL LETTER E WITH ACUTE",\n    mychar    => 0xE8000, # Private use area\n    "自転車に乗る人" => "BICYCLIST"\n};\nprint "\N{e_ACUTE} is a small letter e with an acute.\n";\nprint "\N{mychar} allows me to name private use characters.\n";\nprint "And I can create synonyms in other languages,",\n    " such as \N{自転車に乗る人} for \"BICYCLIST (U+1F6B4)\n";\nsay "Hello man \N{U+21} \N{U+021} \N{U+0021} \N{U+00021}";')
--------------------------------------------------------------------------------
