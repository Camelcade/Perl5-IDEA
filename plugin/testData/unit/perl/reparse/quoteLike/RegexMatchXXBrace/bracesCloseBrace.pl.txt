Reparsing block
----------
Full reparse
----------
After typing
----------
sub something{
  m{test
    say 'hi';
    # comment }<caret>
    say 'hi'
  }xx;
}

----------
Psi structure
----------
Perl5
  PsiPerlSubDefinitionImpl(SUB_DEFINITION)@main::something
    PsiElement(Perl5: sub)('sub')
    PsiWhiteSpace(' ')
    PerlSubNameElementImpl(Perl5: subname)('something')
    PsiPerlBlockImpl(Perl5: BLOCK)
      PsiElement(Perl5: {)('{')
      PsiWhiteSpace('\n  ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlMatchRegexImpl(Perl5: MATCH_REGEX)
          PsiElement(Perl5: m)('m')
          PsiElement(Perl5: r{)('{')
          PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)
            PsiElement(Perl5: regex)('test\n    say 'hi';\n    # comment ')
          PsiElement(Perl5: r})('}')
        PsiErrorElement:Semicolon expected
          <empty list>
      PsiWhiteSpace('\n    ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlSubCallImpl(SUB_CALL)
          PsiPerlMethodImpl(Perl5: METHOD)
            PerlSubNameElementImpl(Perl5: subname)('say')
          PsiWhiteSpace(' ')
          PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
            PsiPerlStringSqImpl(Perl5: STRING_SQ)
              PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
              PerlStringContentElementImpl(Perl5: STRING_CONTENT)('hi')
              PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
      PsiWhiteSpace('\n  ')
      PsiElement(Perl5: })('}')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlSubCallImpl(SUB_CALL)
      PsiPerlMethodImpl(Perl5: METHOD)
        PerlSubNameElementImpl(Perl5: subname)('xx')
    PsiElement(Perl5: ;)(';')
  PsiWhiteSpace('\n')
  PsiErrorElement:<__END__ or __DATA__>, <after modifier>, <around modifier>, <augment modifier>, <before modifier>, <compound statement>, <format definition>, <func definition>, <method definition>, <named block>, <namespace definition>, <perl annotation>, <pod section>, <statement>, <sub definition> or Perl5: { expected, got '}'
    PsiElement(Perl5: })('}')
  PsiWhiteSpace('\n')
