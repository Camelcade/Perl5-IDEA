Text: :5.10; Tail: null; Type: bareword_filehandles indirect multidimensional say state switch; Icon: /options.png; Type Icon: null
	Lookups: :5.10
	String: :5.10
Text: :5.11; Tail: null; Type: bareword_filehandles indirect multidimensional say state switch unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.11
	String: :5.11
Text: :5.12; Tail: null; Type: bareword_filehandles indirect multidimensional say state switch unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.12
	String: :5.12
Text: :5.13; Tail: null; Type: bareword_filehandles indirect multidimensional say state switch unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.13
	String: :5.13
Text: :5.14; Tail: null; Type: bareword_filehandles indirect multidimensional say state switch unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.14
	String: :5.14
Text: :5.15; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.15
	String: :5.15
Text: :5.16; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.16
	String: :5.16
Text: :5.17; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.17
	String: :5.17
Text: :5.18; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.18
	String: :5.18
Text: :5.19; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.19
	String: :5.19
Text: :5.20; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.20
	String: :5.20
Text: :5.21; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.21
	String: :5.21
Text: :5.22; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.22
	String: :5.22
Text: :5.23; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.23
	String: :5.23
Text: :5.24; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.24
	String: :5.24
Text: :5.25; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.25
	String: :5.25
Text: :5.26; Tail: null; Type: bareword_filehandles __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.26
	String: :5.26
Text: :5.27; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.27
	String: :5.27
Text: :5.28; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.28
	String: :5.28
Text: :5.29; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.29
	String: :5.29
Text: :5.30; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.30
	String: :5.30
Text: :5.31; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.31
	String: :5.31
Text: :5.32; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.32
	String: :5.32
Text: :5.33; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.33
	String: :5.33
Text: :5.34; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc indirect multidimensional postderef_qq say state switch unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.34
	String: :5.34
Text: :5.35; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc isa postderef_qq say signatures state unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.35
	String: :5.35
Text: :5.36; Tail: null; Type: bareword_filehandles bitwise __SUB__ evalbytes fc isa postderef_qq say signatures state unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.36
	String: :5.36
Text: :5.37; Tail: null; Type: bitwise __SUB__ evalbytes fc isa module_true postderef_qq say signatures state unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.37
	String: :5.37
Text: :5.38; Tail: null; Type: bitwise __SUB__ evalbytes fc isa module_true postderef_qq say signatures state unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.38
	String: :5.38
Text: :5.40; Tail: null; Type: feature_apos_as_name_sep bitwise __SUB__ evalbytes fc isa module_true postderef_qq say signatures feature_smartmatch state try unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.40
	String: :5.40
Text: :5.42; Tail: null; Type: bitwise __SUB__ evalbytes fc isa module_true postderef_qq say signatures state try unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :5.42
	String: :5.42
Text: :5.9.5; Tail: null; Type: bareword_filehandles indirect multidimensional say state switch; Icon: /options.png; Type Icon: null
	Lookups: :5.9.5
	String: :5.9.5
Text: :all; Tail: null; Type: feature_apos_as_name_sep bareword_filehandles bitwise class __SUB__ myref defer evalbytes more_delims fc indirect isa feature_keyword_all feature_keyword_any module_true multidimensional postderef_qq refaliasing say signatures feature_smartmatch state switch try unieval unicode; Icon: /options.png; Type Icon: null
	Lookups: :all
	String: :all
Text: :default; Tail: null; Type: feature_apos_as_name_sep bareword_filehandles indirect multidimensional feature_smartmatch; Icon: /options.png; Type Icon: null
	Lookups: :default
	String: :default
Text: __SUB__; Tail: null; Type: v5.16, provides the __SUB__ token that returns a reference to the current subroutine or undef outside of a subroutine; Icon: /option.png; Type Icon: null
	Lookups: __SUB__
	String: __SUB__
Text: bareword_filehandles; Tail: null; Type: v5.34, enables bareword filehandles for builtin functions operations, a generally discouraged practice.; Icon: /option.png; Type Icon: null
	Lookups: bareword_filehandles
	String: bareword_filehandles
Text: bitwise; Tail: null; Type: v5.22, makes the four standard bitwise operators treat their operands consistently as numbers, and introduces four new dotted operators that treat their operands consistently as strings. The same applies to the assignment variants. Requires no warnings "experimental::bitwise"; Icon: /option.png; Type Icon: null
	Lookups: bitwise
	String: bitwise
Text: class; Tail: null; Type: v5.38, enables class block syntax; Icon: /option.png; Type Icon: null
	Lookups: class
	String: class
Text: defer; Tail: null; Type: v5.36, enables defer block syntax; Icon: /option.png; Type Icon: null
	Lookups: defer
	String: defer
Text: evalbytes; Tail: null; Type: v5.16, force eval to treat string argument as a string of bytes; Icon: /option.png; Type Icon: null
	Lookups: evalbytes
	String: evalbytes
Text: fc; Tail: null; Type: v5.16, enables the fc function, which implements Unicode casefolding; Icon: /option.png; Type Icon: null
	Lookups: fc
	String: fc
Text: feature_apos_as_name_sep; Tail: null; Type: v5.42, enables use apostrophe as an alternative to using :: as a separate in package and other global names.; Icon: /option.png; Type Icon: null
	Lookups: feature_apos_as_name_sep
	String: feature_apos_as_name_sep
Text: feature_keyword_all; Tail: null; Type: v5.42, Enables experimental 'all' keyword; Icon: /option.png; Type Icon: null
	Lookups: feature_keyword_all
	String: feature_keyword_all
Text: feature_keyword_any; Tail: null; Type: v5.42,  Enables experimental 'any' keyword; Icon: /option.png; Type Icon: null
	Lookups: feature_keyword_any
	String: feature_keyword_any
Text: feature_smartmatch; Tail: null; Type: v5.42, enabled '~~' smartmatch operator; Icon: /option.png; Type Icon: null
	Lookups: feature_smartmatch
	String: feature_smartmatch
Text: indirect; Tail: null; Type: v5.32, allows the use of indirect object syntax for method calls, e.g. new Foo 1, 2;; Icon: /option.png; Type Icon: null
	Lookups: indirect
	String: indirect
Text: isa; Tail: null; Type: v5.32, allows the use of the isa infix operator, which tests whether the scalar given by the left operand is an object of the class given by the right operand. Requires no warnings "experimental::isa"; Icon: /option.png; Type Icon: null
	Lookups: isa
	String: isa
Text: module_true; Tail: null; Type: v5.38, removes the need to return a true value at the end of a module loaded with require or use; Icon: /option.png; Type Icon: null
	Lookups: module_true
	String: module_true
Text: more_delims; Tail: null; Type: v5.36, allows to use additional paired delimiters; Icon: /option.png; Type Icon: null
	Lookups: more_delims
	String: more_delims
Text: multidimensional; Tail: null; Type: v5.34, enables multidimensional array emulation like $foo{$x, $y}; Icon: /option.png; Type Icon: null
	Lookups: multidimensional
	String: multidimensional
Text: myref; Tail: null; Type: v5.26, allows a reference to a variable to be declared with my, state, our our, or localized with local. Requires no warnings "experimental::declared_refs"; Icon: /option.png; Type Icon: null
	Lookups: myref
	String: myref
Text: postderef_qq; Tail: null; Type: v5.20, allows the use of postfix dereference syntax in within interpolated strings. Requires no warnings "experimental::postderef"; Icon: /option.png; Type Icon: null
	Lookups: postderef_qq
	String: postderef_qq
Text: refaliasing; Tail: null; Type: v5.22, enables aliasing via assignment to references. Requires  no warnings "experimental::refaliasing"; Icon: /option.png; Type Icon: null
	Lookups: refaliasing
	String: refaliasing
Text: say; Tail: null; Type: v5.10, enables the Perl 6 style say function; Icon: /option.png; Type Icon: null
	Lookups: say
	String: say
Text: signatures; Tail: null; Type: v5.20, enables unpacking of subroutine arguments into lexical variables. Requires  no warnings "experimental::signatures"; Icon: /option.png; Type Icon: null
	Lookups: signatures
	String: signatures
Text: state; Tail: null; Type: v5.10, enables state variables; Icon: /option.png; Type Icon: null
	Lookups: state
	String: state
Text: switch; Tail: null; Type: v5.10, enables the Perl 6 given/when construct. Requires no warnings "experimental::smartmatch"; Icon: /option.png; Type Icon: null
	Lookups: switch
	String: switch
Text: try; Tail: null; Type: v5.34, enables the try and catch syntax, which allows exception handling. Requires no warnings "experimental::try"; Icon: /option.png; Type Icon: null
	Lookups: try
	String: try
Text: unicode; Tail: null; Type: v5.16, use Unicode rules in all string operations executed within its scope (unless they are also within the scope of either use locale or use bytes); Icon: /option.png; Type Icon: null
	Lookups: unicode
	String: unicode
Text: unieval; Tail: null; Type: v5.16, force eval to treat string argument as a string of characters ignoring any use utf8 declarations; Icon: /option.png; Type Icon: null
	Lookups: unieval
	String: unieval