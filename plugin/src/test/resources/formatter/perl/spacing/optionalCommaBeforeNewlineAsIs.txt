Fakelib::dummy->new(
        hoge => 1,
        fuga => "Foo"
);
Fakelib::dummy->new(
        hoge => 1,
        fuga => "Foo",
);
Fakelib::dummy->new(hoge => 1, fuga => "Foo");
Fakelib::dummy->new(hoge => 1, fuga => "Foo",);
my @test = (1, 2, 3);
my @test = (1, 2, 3,);
my @test = (1, 2, 3,);
my @test = (1,
        2, 3);
my @test = (1,
        2, 3,);
my @test = (1, 2, 3
);
my @test = (1, 2, 3,
);
my @test = (
        1,
        2,
        3
);
my @test = (
        1,
        2,
        3,
);

my @test = [ 1, 2, 3 ];
my @test = [ 1, 2, 3, ];
my @test = [ 1,
        2, 3 ];
my @test = [ 1,
        2, 3, ];
my @test = [
        1,
        2,
        3
];
my @test = [
        1,
        2,
        3,
];

my %test = (
        hoge => 10,
        fuga => [
                "testComma",
                12345
        ]
);
my %test = (
        hoge => 10,
        fuga => [
                "testComma",
                12345,
        ]
);
my %test = (
        hoge => 10,
        fuga => "testComma"
);
my $test = {
        hoge => 10,
        fuga => "testComma2",
};
my $test = {
        hoge => 10,
        fuga => "testComma3"


};
my $test = {
        hoge => 10,
        fuga => "testComma3",


};
my %test = (hoge => 10, fuga => "test");
my %test = (hoge => 10, fuga => "test",);
my $test = {
        hoge => 10,
        fuga => [ 123, 456, "aaa" ],
        piyo => [
                123,
                456,
                "aaa"
        ]
};
my $test = {
        hoge => 10,
        fuga => [ 123, 456, "aaa" ],
        piyo => [
                123,
                456,
                "aaa",
        ]
};
my $test = {
        hoge => 10,
        fuga => [ 123, 456, "aaa" ],
        piyo => [ 123, 456,
                "aaa" ],
};
my $test = {
        hoge => 10,
        fuga => [ 123, 456, "aaa" ],
        piyo => [ 123, 456,
                "aaa", ],
};
my $test = {
        hoge => 10,
        piyo => [ 123, 456, "aaa" ]
};
my $test = {
        hoge => 10,
        piyo => [ 123, 456, "aaa", ],
};
my $test = {
        hoge => 10,
        fuga => [ 123, 456, "aaa" ],
        piyo => [
                aaa => 12,
                bbb => 13,
                ccc => 14
        ]
};
my $test = {
        hoge => 10,
        fuga => [ 123, 456, "aaa" ],
        piyo => [
                aaa => 12,
                bbb => 13,
                ccc => 14,
        ],
};
my $test = {
        hoge => 10,
        fuga => "testComma2",
};
my $test = { hoge => 10, fuga => "testComma2",
        foo       => 111, bar => 123 };
my $test = { hoge => 10, fuga => "testComma2",
        foo       => 111, bar => 123, };
has test => (
        is  => 'ro',
        isa => 'Str'
);
has test => (
        is  => 'ro',
        isa => 'Str',
);
has test => (is => 'ro', isa => 'Str');
has test => (is => 'ro', isa => 'Str',);