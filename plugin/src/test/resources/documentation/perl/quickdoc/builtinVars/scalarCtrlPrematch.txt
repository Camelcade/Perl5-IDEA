<p><a href="psi_element://perlvar">perlvar</a>: <a href="psi_element://perlvar%2FSPECIAL+VARIABLES">SPECIAL VARIABLES</a>: <a href="psi_element://perlvar%2FVariables+related+to+regular+expressions">Variables related to regular expressions</a>: <a href="psi_element://perlvar%2FPerformance+issues">Performance issues</a></p><dl><dt style="padding-bottom:4px;font-weight:bold;">${^PREMATCH}
 </dt><dd style="padding-top:6px;"><p style="padding-bottom: 10px;">This is similar to <code>$`</code> ($PREMATCH) except that it does not incur the
performance penalty associated with that variable.</p>
<p style="padding-bottom: 10px;">See <a href="psi_element://perlvar%2FPerformance+issues">Performance issues</a> above.</p>
<p style="padding-bottom: 10px;">In Perl v5.18 and earlier, it is only guaranteed
to return a defined value when the pattern was compiled or executed with
the <code>/p</code> modifier.  In Perl v5.20, the <code>/p</code> modifier does nothing, so
<code>${^PREMATCH}</code> does the same thing as <code>$PREMATCH</code>.</p>
<p style="padding-bottom: 10px;">This variable was added in Perl v5.10.0.</p>
<p style="padding-bottom: 10px;">This variable is read-only and dynamically-scoped.</p></dd></dl>
