<p><a href="psi_element://Mojolicious%3A%3ARoutes%3A%3ARoute">Mojolicious::Routes::Route</a>: <a href="psi_element://Mojolicious%3A%3ARoutes%3A%3ARoute%2FMETHODS">METHODS</a></p><h2>under</h2><div style="padding-bottom: 10px;"><pre><code>  my $route = $r-&gt;under(sub {...});
  my $route = $r-&gt;under('/:foo' =&gt; sub {...});
  my $route = $r-&gt;under('/:foo' =&gt; {foo =&gt; 'bar'});
  my $route = $r-&gt;under('/:foo' =&gt; [foo =&gt; qr/\w+/]);
  my $route = $r-&gt;under('/:foo' =&gt; (agent =&gt; qr/Firefox/));
  my $route = $r-&gt;under([format =&gt; 0]);</code></pre></div>
<p style="padding-bottom: 10px;">Generate <a href="psi_element://Mojolicious%3A%3ARoutes%3A%3ARoute">Mojolicious::Routes::Route</a> object for a nested route with its own
intermediate destination, takes the same arguments as <a href="psi_element://Mojolicious%3A%3ARoutes%3A%3ARoute%2Fany">any</a> (except for the
HTTP methods to match, which are not available). See
<a href="psi_element://Mojolicious%3A%3AGuides%3A%3ATutorial">Mojolicious::Guides::Tutorial</a> and <a href="psi_element://Mojolicious%3A%3AGuides%3A%3ARouting">Mojolicious::Guides::Routing</a> for more
information.</p>
<div style="padding-bottom: 10px;"><pre><code>  # Longer version
  $r-&gt;any('/:foo' =&gt; sub {...})-&gt;inline(1);

  # Intermediate destination and prefix shared between two routes
  my $auth = $r-&gt;under('/user')-&gt;to('user#auth');
  $auth-&gt;get('/show')-&gt;to('#show');
  $auth-&gt;post('/create')-&gt;to('#create');</code></pre></div>