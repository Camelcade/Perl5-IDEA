Subtree: Perl5 (Perl5)
Perl5
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: NUMBER_HEX)('263A')
            PsiErrorElement:'*(?' unexpected
              PsiElement(BAD_CHARACTER)('*(?')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' test ')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: NUMBER_HEX)('1')
            PsiElement(Perl5: }")('}')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiErrorElement:<hex character code> expected, got '(*&-234'
              PsiElement(BAD_CHARACTER)('(*&-234')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' test ')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: NUMBER_HEX)('1')
            PsiElement(Perl5: }")('}')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiErrorElement:<hex character code> expected, got '-263a'
              PsiElement(BAD_CHARACTER)('-263a')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' test ')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: NUMBER_HEX)('1')
            PsiElement(Perl5: }")('}')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: NUMBER_HEX)('abcdefABCDEF1234567890')
            PsiElement(Perl5: }")('}')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(' test ')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: NUMBER_HEX)('1')
            PsiElement(Perl5: }")('}')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: NUMBER_HEX)('ab')
          PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('cdef1234567890 test ')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: NUMBER_HEX)('1')
            PsiElement(Perl5: }")('}')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiErrorElement:<hex character code> expected, got 'test \x{1'
              PsiElement(BAD_CHARACTER)(' test \x{1')
            PsiElement(Perl5: }")('}')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
  PsiPerlStatementImpl(Perl5: STATEMENT)
    PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
      PsiElement(Perl5: say)('say')
      PsiPerlCallArgumentsImpl(Perl5: CALL_ARGUMENTS)
        PsiPerlStringDqImpl(Perl5: STRING_DQ)
          PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
          PsiPerlHexCharImpl(Perl5: HEX_CHAR)
            PsiElement(Perl5: \x)('\x')
            PsiElement(Perl5: "{)('{')
            PsiElement(Perl5: NUMBER_HEX)('A1')
            PsiErrorElement:'test \x{1' unexpected
              PsiElement(BAD_CHARACTER)(' test \x{1')
            PsiElement(Perl5: }")('}')
          PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
    PsiElement(Perl5: ;)(';')
--------------------------------------------------------------------------------
Subtree: Perl5 POD (Perl5 POD)
POD file
  PsiElement(Perl5 POD: POD_OUTER)('say "\x{263A*(?} test \x{1}";\nsay "\x{(*&-234} test \x{1}";\nsay "\x{-263a} test \x{1}";\nsay "\x{abcdefABCDEF1234567890} test \x{1}";\nsay "\xabcdef1234567890 test \x{1}";\nsay "\x{ test \x{1}";\nsay "\x{A1 test \x{1}";')
--------------------------------------------------------------------------------
