// This is a generated file. Not intended for manual editing.
package com.perl5.lang.perl.lexer;

import com.intellij.psi.tree.IElementType;
import com.intellij.psi.PsiElement;
import com.intellij.lang.ASTNode;
import com.perl5.lang.perl.parser.elementTypes.PerlElementTypeFactory;
import com.perl5.lang.perl.psi.impl.*;

public interface PerlElementTypesGenerated {

  IElementType ADD_EXPR = PerlElementTypeFactory.getElementType("ADD_EXPR");
  IElementType AFTER_MODIFIER = PerlElementTypeFactory.getElementType("AFTER_MODIFIER");
  IElementType AND_EXPR = PerlElementTypeFactory.getElementType("AND_EXPR");
  IElementType ANNOTATION_ABSTRACT = PerlElementTypeFactory.getElementType("ANNOTATION_ABSTRACT");
  IElementType ANNOTATION_DEPRECATED = PerlElementTypeFactory.getElementType("ANNOTATION_DEPRECATED");
  IElementType ANNOTATION_INJECT = PerlElementTypeFactory.getElementType("ANNOTATION_INJECT");
  IElementType ANNOTATION_METHOD = PerlElementTypeFactory.getElementType("ANNOTATION_METHOD");
  IElementType ANNOTATION_NOINSPECTION = PerlElementTypeFactory.getElementType("ANNOTATION_NOINSPECTION");
  IElementType ANNOTATION_NO_INJECT = PerlElementTypeFactory.getElementType("ANNOTATION_NO_INJECT");
  IElementType ANNOTATION_OVERRIDE = PerlElementTypeFactory.getElementType("ANNOTATION_OVERRIDE");
  IElementType ANNOTATION_RETURNS = PerlElementTypeFactory.getElementType("ANNOTATION_RETURNS");
  IElementType ANNOTATION_TYPE = PerlElementTypeFactory.getElementType("ANNOTATION_TYPE");
  IElementType ANNOTATION_VARIABLE = PerlElementTypeFactory.getElementType("ANNOTATION_VARIABLE");
  IElementType ANON_ARRAY = PerlElementTypeFactory.getElementType("ANON_ARRAY");
  IElementType ANON_HASH = PerlElementTypeFactory.getElementType("ANON_HASH");
  IElementType AROUND_MODIFIER = PerlElementTypeFactory.getElementType("AROUND_MODIFIER");
  IElementType AROUND_SIGNATURE_INVOCANTS = PerlElementTypeFactory.getElementType("AROUND_SIGNATURE_INVOCANTS");
  IElementType ARRAYREF_TYPE = PerlElementTypeFactory.getElementType("ARRAYREF_TYPE");
  IElementType ARRAY_CAST_EXPR = PerlElementTypeFactory.getElementType("ARRAY_CAST_EXPR");
  IElementType ARRAY_ELEMENT = PerlElementTypeFactory.getElementType("ARRAY_ELEMENT");
  IElementType ARRAY_INDEX = PerlElementTypeFactory.getElementType("ARRAY_INDEX");
  IElementType ARRAY_INDEX_VARIABLE = PerlElementTypeFactory.getElementType("ARRAY_INDEX_VARIABLE");
  IElementType ARRAY_POP_EXPR = PerlElementTypeFactory.getElementType("ARRAY_POP_EXPR");
  IElementType ARRAY_PUSH_EXPR = PerlElementTypeFactory.getElementType("ARRAY_PUSH_EXPR");
  IElementType ARRAY_SHIFT_EXPR = PerlElementTypeFactory.getElementType("ARRAY_SHIFT_EXPR");
  IElementType ARRAY_SLICE = PerlElementTypeFactory.getElementType("ARRAY_SLICE");
  IElementType ARRAY_UNSHIFT_EXPR = PerlElementTypeFactory.getElementType("ARRAY_UNSHIFT_EXPR");
  IElementType ARRAY_VARIABLE = PerlElementTypeFactory.getElementType("ARRAY_VARIABLE");
  IElementType ASSIGN_EXPR = PerlElementTypeFactory.getElementType("ASSIGN_EXPR");
  IElementType ATTRIBUTE = PerlElementTypeFactory.getElementType("ATTRIBUTE");
  IElementType ATTRIBUTES = PerlElementTypeFactory.getElementType("ATTRIBUTES");
  IElementType AUGMENT_MODIFIER = PerlElementTypeFactory.getElementType("AUGMENT_MODIFIER");
  IElementType BEFORE_MODIFIER = PerlElementTypeFactory.getElementType("BEFORE_MODIFIER");
  IElementType BITWISE_AND_EXPR = PerlElementTypeFactory.getElementType("BITWISE_AND_EXPR");
  IElementType BITWISE_OR_XOR_EXPR = PerlElementTypeFactory.getElementType("BITWISE_OR_XOR_EXPR");
  IElementType BLESS_EXPR = PerlElementTypeFactory.getElementType("BLESS_EXPR");
  IElementType BLOCK = PerlElementTypeFactory.getElementType("BLOCK");
  IElementType BLOCK_ARRAY = PerlElementTypeFactory.getElementType("BLOCK_ARRAY");
  IElementType BLOCK_BRACELESS = PerlElementTypeFactory.getElementType("BLOCK_BRACELESS");
  IElementType BLOCK_CODE = PerlElementTypeFactory.getElementType("BLOCK_CODE");
  IElementType BLOCK_COMPOUND = PerlElementTypeFactory.getElementType("BLOCK_COMPOUND");
  IElementType BLOCK_GLOB = PerlElementTypeFactory.getElementType("BLOCK_GLOB");
  IElementType BLOCK_HASH = PerlElementTypeFactory.getElementType("BLOCK_HASH");
  IElementType BLOCK_SCALAR = PerlElementTypeFactory.getElementType("BLOCK_SCALAR");
  IElementType CALL_ARGUMENTS = PerlElementTypeFactory.getElementType("CALL_ARGUMENTS");
  IElementType CASE_COMPOUND = PerlElementTypeFactory.getElementType("CASE_COMPOUND");
  IElementType CASE_CONDITION = PerlElementTypeFactory.getElementType("CASE_CONDITION");
  IElementType CASE_DEFAULT = PerlElementTypeFactory.getElementType("CASE_DEFAULT");
  IElementType CATCH_CONDITION = PerlElementTypeFactory.getElementType("CATCH_CONDITION");
  IElementType CATCH_EXPR = PerlElementTypeFactory.getElementType("CATCH_EXPR");
  IElementType CODE_CAST_EXPR = PerlElementTypeFactory.getElementType("CODE_CAST_EXPR");
  IElementType CODE_VARIABLE = PerlElementTypeFactory.getElementType("CODE_VARIABLE");
  IElementType COMMA_SEQUENCE_EXPR = PerlElementTypeFactory.getElementType("COMMA_SEQUENCE_EXPR");
  IElementType COMMENT_ANNOTATION = PerlElementTypeFactory.getElementType("COMMENT_ANNOTATION");
  IElementType COMPARE_EXPR = PerlElementTypeFactory.getElementType("COMPARE_EXPR");
  IElementType COMPILE_REGEX = PerlElementTypeFactory.getElementType("COMPILE_REGEX");
  IElementType COMPOSITE_ATOM_EXPR = PerlElementTypeFactory.getElementType("COMPOSITE_ATOM_EXPR");
  IElementType CONDITIONAL_BLOCK = PerlElementTypeFactory.getElementType("CONDITIONAL_BLOCK");
  IElementType CONDITION_EXPR = PerlElementTypeFactory.getElementType("CONDITION_EXPR");
  IElementType CONTINUATION_EXPR = PerlElementTypeFactory.getElementType("CONTINUATION_EXPR");
  IElementType CONTINUE_BLOCK = PerlElementTypeFactory.getElementType("CONTINUE_BLOCK");
  IElementType CONTINUE_EXPR = PerlElementTypeFactory.getElementType("CONTINUE_EXPR");
  IElementType CUSTOM_ATOM_EXPR = PerlElementTypeFactory.getElementType("CUSTOM_ATOM_EXPR");
  IElementType DEFAULT_COMPOUND = PerlElementTypeFactory.getElementType("DEFAULT_COMPOUND");
  IElementType DEFINED_EXPR = PerlElementTypeFactory.getElementType("DEFINED_EXPR");
  IElementType DELETE_EXPR = PerlElementTypeFactory.getElementType("DELETE_EXPR");
  IElementType DEREF_EXPR = PerlElementTypeFactory.getElementType("DEREF_EXPR");
  IElementType DO_BLOCK_EXPR = PerlElementTypeFactory.getElementType("DO_BLOCK_EXPR");
  IElementType DO_EXPR = PerlElementTypeFactory.getElementType("DO_EXPR");
  IElementType EACH_EXPR = PerlElementTypeFactory.getElementType("EACH_EXPR");
  IElementType EQUAL_EXPR = PerlElementTypeFactory.getElementType("EQUAL_EXPR");
  IElementType ESC_CHAR = PerlElementTypeFactory.getElementType("ESC_CHAR");
  IElementType EVAL_EXPR = PerlElementTypeFactory.getElementType("EVAL_EXPR");
  IElementType EXCEPT_EXPR = PerlElementTypeFactory.getElementType("EXCEPT_EXPR");
  IElementType EXIT_EXPR = PerlElementTypeFactory.getElementType("EXIT_EXPR");
  IElementType EXPR = PerlElementTypeFactory.getElementType("EXPR");
  IElementType FILE_GLOB_EXPR = PerlElementTypeFactory.getElementType("FILE_GLOB_EXPR");
  IElementType FILE_READ_EXPR = PerlElementTypeFactory.getElementType("FILE_READ_EXPR");
  IElementType FINALLY_EXPR = PerlElementTypeFactory.getElementType("FINALLY_EXPR");
  IElementType FLIPFLOP_EXPR = PerlElementTypeFactory.getElementType("FLIPFLOP_EXPR");
  IElementType FOREACH_COMPOUND = PerlElementTypeFactory.getElementType("FOREACH_COMPOUND");
  IElementType FOREACH_ITERATOR = PerlElementTypeFactory.getElementType("FOREACH_ITERATOR");
  IElementType FORMAT_DEFINITION = PerlElementTypeFactory.getElementType("FORMAT_DEFINITION");
  IElementType FOR_COMPOUND = PerlElementTypeFactory.getElementType("FOR_COMPOUND");
  IElementType FOR_CONDITION = PerlElementTypeFactory.getElementType("FOR_CONDITION");
  IElementType FOR_INIT = PerlElementTypeFactory.getElementType("FOR_INIT");
  IElementType FOR_MUTATOR = PerlElementTypeFactory.getElementType("FOR_MUTATOR");
  IElementType FOR_STATEMENT_MODIFIER = PerlElementTypeFactory.getElementType("FOR_STATEMENT_MODIFIER");
  IElementType FUNC_DEFINITION = PerlElementTypeFactory.getElementType("FUNC_DEFINITION");
  IElementType FUN_EXPR = PerlElementTypeFactory.getElementType("FUN_EXPR");
  IElementType GIVEN_COMPOUND = PerlElementTypeFactory.getElementType("GIVEN_COMPOUND");
  IElementType GLOB_CAST_EXPR = PerlElementTypeFactory.getElementType("GLOB_CAST_EXPR");
  IElementType GLOB_SLOT = PerlElementTypeFactory.getElementType("GLOB_SLOT");
  IElementType GLOB_VARIABLE = PerlElementTypeFactory.getElementType("GLOB_VARIABLE");
  IElementType GOTO_EXPR = PerlElementTypeFactory.getElementType("GOTO_EXPR");
  IElementType GREP_EXPR = PerlElementTypeFactory.getElementType("GREP_EXPR");
  IElementType HASHREF_TYPE = PerlElementTypeFactory.getElementType("HASHREF_TYPE");
  IElementType HASH_ARRAY_SLICE = PerlElementTypeFactory.getElementType("HASH_ARRAY_SLICE");
  IElementType HASH_CAST_EXPR = PerlElementTypeFactory.getElementType("HASH_CAST_EXPR");
  IElementType HASH_ELEMENT = PerlElementTypeFactory.getElementType("HASH_ELEMENT");
  IElementType HASH_HASH_SLICE = PerlElementTypeFactory.getElementType("HASH_HASH_SLICE");
  IElementType HASH_INDEX = PerlElementTypeFactory.getElementType("HASH_INDEX");
  IElementType HASH_SLICE = PerlElementTypeFactory.getElementType("HASH_SLICE");
  IElementType HASH_VARIABLE = PerlElementTypeFactory.getElementType("HASH_VARIABLE");
  IElementType HEREDOC = PerlElementTypeFactory.getElementType("HEREDOC");
  IElementType HEREDOC_OPENER = PerlElementTypeFactory.getElementType("HEREDOC_OPENER");
  IElementType HEREDOC_QQ = PerlElementTypeFactory.getElementType("HEREDOC_QQ");
  IElementType HEREDOC_QX = PerlElementTypeFactory.getElementType("HEREDOC_QX");
  IElementType HEX_CHAR = PerlElementTypeFactory.getElementType("HEX_CHAR");
  IElementType IF_COMPOUND = PerlElementTypeFactory.getElementType("IF_COMPOUND");
  IElementType IF_STATEMENT_MODIFIER = PerlElementTypeFactory.getElementType("IF_STATEMENT_MODIFIER");
  IElementType ISA_EXPR = PerlElementTypeFactory.getElementType("ISA_EXPR");
  IElementType KEYS_EXPR = PerlElementTypeFactory.getElementType("KEYS_EXPR");
  IElementType LABEL_DECLARATION = PerlElementTypeFactory.getElementType("LABEL_DECLARATION");
  IElementType LABEL_EXPR = PerlElementTypeFactory.getElementType("LABEL_EXPR");
  IElementType LAST_EXPR = PerlElementTypeFactory.getElementType("LAST_EXPR");
  IElementType LP_AND_EXPR = PerlElementTypeFactory.getElementType("LP_AND_EXPR");
  IElementType LP_NOT_EXPR = PerlElementTypeFactory.getElementType("LP_NOT_EXPR");
  IElementType LP_OR_XOR_EXPR = PerlElementTypeFactory.getElementType("LP_OR_XOR_EXPR");
  IElementType MAP_EXPR = PerlElementTypeFactory.getElementType("MAP_EXPR");
  IElementType MATCH_REGEX = PerlElementTypeFactory.getElementType("MATCH_REGEX");
  IElementType METHOD = PerlElementTypeFactory.getElementType("METHOD");
  IElementType METHOD_DEFINITION = PerlElementTypeFactory.getElementType("METHOD_DEFINITION");
  IElementType METHOD_EXPR = PerlElementTypeFactory.getElementType("METHOD_EXPR");
  IElementType METHOD_SIGNATURE_INVOCANT = PerlElementTypeFactory.getElementType("METHOD_SIGNATURE_INVOCANT");
  IElementType MUL_EXPR = PerlElementTypeFactory.getElementType("MUL_EXPR");
  IElementType NAMED_BLOCK = PerlElementTypeFactory.getElementType("NAMED_BLOCK");
  IElementType NAMESPACE_CONTENT = PerlElementTypeFactory.getElementType("NAMESPACE_CONTENT");
  IElementType NAMESPACE_DEFINITION = PerlElementTypeFactory.getElementType("NAMESPACE_DEFINITION");
  IElementType NEXT_EXPR = PerlElementTypeFactory.getElementType("NEXT_EXPR");
  IElementType NUMBER_CONSTANT = PerlElementTypeFactory.getElementType("NUMBER_CONSTANT");
  IElementType NYI_STATEMENT = PerlElementTypeFactory.getElementType("NYI_STATEMENT");
  IElementType OCT_CHAR = PerlElementTypeFactory.getElementType("OCT_CHAR");
  IElementType OR_EXPR = PerlElementTypeFactory.getElementType("OR_EXPR");
  IElementType OTHERWISE_EXPR = PerlElementTypeFactory.getElementType("OTHERWISE_EXPR");
  IElementType PACKAGE_EXPR = PerlElementTypeFactory.getElementType("PACKAGE_EXPR");
  IElementType PARENTHESISED_CALL_ARGUMENTS = PerlElementTypeFactory.getElementType("PARENTHESISED_CALL_ARGUMENTS");
  IElementType PARENTHESISED_EXPR = PerlElementTypeFactory.getElementType("PARENTHESISED_EXPR");
  IElementType PARSABLE_STRING_USE_VARS = PerlElementTypeFactory.getElementType("PARSABLE_STRING_USE_VARS");
  IElementType PERL_HANDLE_EXPR = PerlElementTypeFactory.getElementType("PERL_HANDLE_EXPR");
  IElementType PERL_REGEX = PerlElementTypeFactory.getElementType("PERL_REGEX");
  IElementType PERL_REGEX_MODIFIERS = PerlElementTypeFactory.getElementType("PERL_REGEX_MODIFIERS");
  IElementType POST_DEREF_ARRAY_SLICE_EXPR = PerlElementTypeFactory.getElementType("POST_DEREF_ARRAY_SLICE_EXPR");
  IElementType POST_DEREF_EXPR = PerlElementTypeFactory.getElementType("POST_DEREF_EXPR");
  IElementType POST_DEREF_GLOB_EXPR = PerlElementTypeFactory.getElementType("POST_DEREF_GLOB_EXPR");
  IElementType POST_DEREF_HASH_SLICE_EXPR = PerlElementTypeFactory.getElementType("POST_DEREF_HASH_SLICE_EXPR");
  IElementType POW_EXPR = PerlElementTypeFactory.getElementType("POW_EXPR");
  IElementType PREFIX_UNARY_EXPR = PerlElementTypeFactory.getElementType("PREFIX_UNARY_EXPR");
  IElementType PREF_PP_EXPR = PerlElementTypeFactory.getElementType("PREF_PP_EXPR");
  IElementType PRINT_EXPR = PerlElementTypeFactory.getElementType("PRINT_EXPR");
  IElementType REDO_EXPR = PerlElementTypeFactory.getElementType("REDO_EXPR");
  IElementType REF_EXPR = PerlElementTypeFactory.getElementType("REF_EXPR");
  IElementType REGEX_EXPR = PerlElementTypeFactory.getElementType("REGEX_EXPR");
  IElementType REGEX_REPLACEMENT = PerlElementTypeFactory.getElementType("REGEX_REPLACEMENT");
  IElementType REPLACEMENT_REGEX = PerlElementTypeFactory.getElementType("REPLACEMENT_REGEX");
  IElementType REQUIRE_EXPR = PerlElementTypeFactory.getElementType("REQUIRE_EXPR");
  IElementType RETURN_EXPR = PerlElementTypeFactory.getElementType("RETURN_EXPR");
  IElementType SCALAR_CALL = PerlElementTypeFactory.getElementType("SCALAR_CALL");
  IElementType SCALAR_CAST_EXPR = PerlElementTypeFactory.getElementType("SCALAR_CAST_EXPR");
  IElementType SCALAR_EXPR = PerlElementTypeFactory.getElementType("SCALAR_EXPR");
  IElementType SCALAR_INDEX_CAST_EXPR = PerlElementTypeFactory.getElementType("SCALAR_INDEX_CAST_EXPR");
  IElementType SCALAR_VARIABLE = PerlElementTypeFactory.getElementType("SCALAR_VARIABLE");
  IElementType SHIFT_EXPR = PerlElementTypeFactory.getElementType("SHIFT_EXPR");
  IElementType SIGNATURE_CONTENT = PerlElementTypeFactory.getElementType("SIGNATURE_CONTENT");
  IElementType SIGNATURE_ELEMENT = PerlElementTypeFactory.getElementType("SIGNATURE_ELEMENT");
  IElementType SORT_EXPR = PerlElementTypeFactory.getElementType("SORT_EXPR");
  IElementType SPLICE_EXPR = PerlElementTypeFactory.getElementType("SPLICE_EXPR");
  IElementType STATEMENT = PerlElementTypeFactory.getElementType("STATEMENT");
  IElementType STATEMENT_MODIFIER = PerlElementTypeFactory.getElementType("STATEMENT_MODIFIER");
  IElementType STRING_BARE = PerlElementTypeFactory.getElementType("STRING_BARE");
  IElementType STRING_DQ = PerlElementTypeFactory.getElementType("STRING_DQ");
  IElementType STRING_LIST = PerlElementTypeFactory.getElementType("STRING_LIST");
  IElementType STRING_SQ = PerlElementTypeFactory.getElementType("STRING_SQ");
  IElementType STRING_XQ = PerlElementTypeFactory.getElementType("STRING_XQ");
  IElementType SUB_CALL = PerlElementTypeFactory.getElementType("SUB_CALL");
  IElementType SUB_DECLARATION = PerlElementTypeFactory.getElementType("SUB_DECLARATION");
  IElementType SUB_DEFINITION = PerlElementTypeFactory.getElementType("SUB_DEFINITION");
  IElementType SUB_EXPR = PerlElementTypeFactory.getElementType("SUB_EXPR");
  IElementType SUB_SIGNATURE_ELEMENT_IGNORE = PerlElementTypeFactory.getElementType("SUB_SIGNATURE_ELEMENT_IGNORE");
  IElementType SUFF_PP_EXPR = PerlElementTypeFactory.getElementType("SUFF_PP_EXPR");
  IElementType SWITCH_COMPOUND = PerlElementTypeFactory.getElementType("SWITCH_COMPOUND");
  IElementType SWITCH_CONDITION = PerlElementTypeFactory.getElementType("SWITCH_CONDITION");
  IElementType TAG_SCALAR = PerlElementTypeFactory.getElementType("TAG_SCALAR");
  IElementType TERNARY_EXPR = PerlElementTypeFactory.getElementType("TERNARY_EXPR");
  IElementType TRYCATCH_COMPOUND = PerlElementTypeFactory.getElementType("TRYCATCH_COMPOUND");
  IElementType TRYCATCH_EXPR = PerlElementTypeFactory.getElementType("TRYCATCH_EXPR");
  IElementType TRY_EXPR = PerlElementTypeFactory.getElementType("TRY_EXPR");
  IElementType TR_MODIFIERS = PerlElementTypeFactory.getElementType("TR_MODIFIERS");
  IElementType TR_REGEX = PerlElementTypeFactory.getElementType("TR_REGEX");
  IElementType TR_REPLACEMENTLIST = PerlElementTypeFactory.getElementType("TR_REPLACEMENTLIST");
  IElementType TR_SEARCHLIST = PerlElementTypeFactory.getElementType("TR_SEARCHLIST");
  IElementType TYPE_CONSTRAINTS = PerlElementTypeFactory.getElementType("TYPE_CONSTRAINTS");
  IElementType TYPE_SPECIFIER = PerlElementTypeFactory.getElementType("TYPE_SPECIFIER");
  IElementType UNCONDITIONAL_BLOCK = PerlElementTypeFactory.getElementType("UNCONDITIONAL_BLOCK");
  IElementType UNDEF_EXPR = PerlElementTypeFactory.getElementType("UNDEF_EXPR");
  IElementType UNICODE_CHAR = PerlElementTypeFactory.getElementType("UNICODE_CHAR");
  IElementType UNLESS_COMPOUND = PerlElementTypeFactory.getElementType("UNLESS_COMPOUND");
  IElementType UNLESS_STATEMENT_MODIFIER = PerlElementTypeFactory.getElementType("UNLESS_STATEMENT_MODIFIER");
  IElementType UNTIL_COMPOUND = PerlElementTypeFactory.getElementType("UNTIL_COMPOUND");
  IElementType UNTIL_STATEMENT_MODIFIER = PerlElementTypeFactory.getElementType("UNTIL_STATEMENT_MODIFIER");
  IElementType VALUES_EXPR = PerlElementTypeFactory.getElementType("VALUES_EXPR");
  IElementType VARIABLE_DECLARATION_ELEMENT = PerlElementTypeFactory.getElementType("VARIABLE_DECLARATION_ELEMENT");
  IElementType VARIABLE_DECLARATION_GLOBAL = PerlElementTypeFactory.getElementType("VARIABLE_DECLARATION_GLOBAL");
  IElementType VARIABLE_DECLARATION_LEXICAL = PerlElementTypeFactory.getElementType("VARIABLE_DECLARATION_LEXICAL");
  IElementType VARIABLE_DECLARATION_LOCAL = PerlElementTypeFactory.getElementType("VARIABLE_DECLARATION_LOCAL");
  IElementType WANTARRAY_EXPR = PerlElementTypeFactory.getElementType("WANTARRAY_EXPR");
  IElementType WHEN_COMPOUND = PerlElementTypeFactory.getElementType("WHEN_COMPOUND");
  IElementType WHEN_STATEMENT_MODIFIER = PerlElementTypeFactory.getElementType("WHEN_STATEMENT_MODIFIER");
  IElementType WHILE_COMPOUND = PerlElementTypeFactory.getElementType("WHILE_COMPOUND");
  IElementType WHILE_STATEMENT_MODIFIER = PerlElementTypeFactory.getElementType("WHILE_STATEMENT_MODIFIER");

  IElementType ANNOTATION_ABSTRACT_KEY = PerlElementTypeFactory.getTokenType("#@abstract");
  IElementType ANNOTATION_ARRAY = PerlElementTypeFactory.getTokenType("@annotated");
  IElementType ANNOTATION_DEPRECATED_KEY = PerlElementTypeFactory.getTokenType("#@deprecated");
  IElementType ANNOTATION_HASH = PerlElementTypeFactory.getTokenType("%annotated");
  IElementType ANNOTATION_INJECT_KEY = PerlElementTypeFactory.getTokenType("#@inject");
  IElementType ANNOTATION_METHOD_KEY = PerlElementTypeFactory.getTokenType("#@method");
  IElementType ANNOTATION_NOINSPECTION_KEY = PerlElementTypeFactory.getTokenType("#@noinspection");
  IElementType ANNOTATION_NO_INJECT_KEY = PerlElementTypeFactory.getTokenType("#@noinject");
  IElementType ANNOTATION_OVERRIDE_KEY = PerlElementTypeFactory.getTokenType("#@override");
  IElementType ANNOTATION_RETURNS_KEY = PerlElementTypeFactory.getTokenType("#@returns");
  IElementType ANNOTATION_SCALAR = PerlElementTypeFactory.getTokenType("$annotated");
  IElementType ANNOTATION_TYPE_KEY = PerlElementTypeFactory.getTokenType("#@type");
  IElementType ANNOTATION_UNKNOWN_KEY = PerlElementTypeFactory.getTokenType("#@unknown");
  IElementType ARRAY_NAME = PerlElementTypeFactory.getTokenType("ARRAY_NAME");
  IElementType ATTRIBUTE_IDENTIFIER = PerlElementTypeFactory.getTokenType("ATTRIBUTE_IDENTIFIER");
  IElementType BLOCK_NAME = PerlElementTypeFactory.getTokenType("BLOCK_NAME");
  IElementType BUILTIN_ARGUMENTLESS = PerlElementTypeFactory.getTokenType("argumentless");
  IElementType BUILTIN_LIST = PerlElementTypeFactory.getTokenType("list");
  IElementType BUILTIN_UNARY = PerlElementTypeFactory.getTokenType("unary");
  IElementType COLON = PerlElementTypeFactory.getTokenType(":");
  IElementType COMMA = PerlElementTypeFactory.getTokenType(",");
  IElementType COMMENT_BLOCK = PerlElementTypeFactory.getTokenType("COMMENT_BLOCK");
  IElementType COMMENT_LINE = PerlElementTypeFactory.getTokenType("COMMENT_LINE");
  IElementType CUSTOM_UNARY = PerlElementTypeFactory.getTokenType("unary_custom");
  IElementType DEREF_ARRAY = PerlElementTypeFactory.getTokenType("->@*");
  IElementType DEREF_CODE = PerlElementTypeFactory.getTokenType("->&*");
  IElementType DEREF_GLOB = PerlElementTypeFactory.getTokenType("->**");
  IElementType DEREF_HASH = PerlElementTypeFactory.getTokenType("->%*");
  IElementType DEREF_SCALAR = PerlElementTypeFactory.getTokenType("->$*");
  IElementType DEREF_SCALAR_INDEX = PerlElementTypeFactory.getTokenType("->$#*");
  IElementType FAT_COMMA = PerlElementTypeFactory.getTokenType("=>");
  IElementType FORMAT = PerlElementTypeFactory.getTokenType("FORMAT");
  IElementType FORMAT_TERMINATOR = PerlElementTypeFactory.getTokenType("FORMAT_TERMINATOR");
  IElementType GLOB_NAME = PerlElementTypeFactory.getTokenType("GLOB_NAME");
  IElementType HANDLE = PerlElementTypeFactory.getTokenType("HANDLE");
  IElementType HASH_NAME = PerlElementTypeFactory.getTokenType("HASH_NAME");
  IElementType HEREDOC_END = PerlElementTypeFactory.getTokenType("HEREDOC_END");
  IElementType HEREDOC_END_INDENTABLE = PerlElementTypeFactory.getTokenType("HEREDOC_END_INDENTABLE");
  IElementType IDENTIFIER = PerlElementTypeFactory.getTokenType("IDENTIFIER");
  IElementType LEFT_ANGLE = PerlElementTypeFactory.getTokenType("LEFT_ANGLE");
  IElementType LEFT_BRACE = PerlElementTypeFactory.getTokenType("{");
  IElementType LEFT_BRACE_ARRAY = PerlElementTypeFactory.getTokenType("@{");
  IElementType LEFT_BRACE_CODE = PerlElementTypeFactory.getTokenType("&{");
  IElementType LEFT_BRACE_GLOB = PerlElementTypeFactory.getTokenType("*{");
  IElementType LEFT_BRACE_HASH = PerlElementTypeFactory.getTokenType("%{");
  IElementType LEFT_BRACE_SCALAR = PerlElementTypeFactory.getTokenType("${");
  IElementType LEFT_BRACKET = PerlElementTypeFactory.getTokenType("[");
  IElementType LEFT_PAREN = PerlElementTypeFactory.getTokenType("(");
  IElementType LP_CODE_BLOCK = PerlElementTypeFactory.getTokenType("LP_CODE_BLOCK");
  IElementType LP_CODE_BLOCK_WITH_TRYCATCH = PerlElementTypeFactory.getTokenType("LP_CODE_BLOCK_WITH_TRYCATCH");
  IElementType LP_REGEX = PerlElementTypeFactory.getTokenType("LP_REGEX");
  IElementType LP_REGEX_SQ = PerlElementTypeFactory.getTokenType("LP_REGEX_SQ");
  IElementType LP_REGEX_X = PerlElementTypeFactory.getTokenType("LP_REGEX_X");
  IElementType LP_REGEX_XX = PerlElementTypeFactory.getTokenType("LP_REGEX_XX");
  IElementType LP_REGEX_XX_SQ = PerlElementTypeFactory.getTokenType("LP_REGEX_XX_SQ");
  IElementType LP_REGEX_X_SQ = PerlElementTypeFactory.getTokenType("LP_REGEX_X_SQ");
  IElementType LP_STRING_Q = PerlElementTypeFactory.getTokenType("LP_STRING_Q");
  IElementType LP_STRING_QQ = PerlElementTypeFactory.getTokenType("LP_STRING_QQ");
  IElementType LP_STRING_QQ_RESTRICTED = PerlElementTypeFactory.getTokenType("LP_STRING_QQ_RESTRICTED");
  IElementType LP_STRING_QW = PerlElementTypeFactory.getTokenType("LP_STRING_QW");
  IElementType LP_STRING_QX = PerlElementTypeFactory.getTokenType("LP_STRING_QX");
  IElementType LP_STRING_QX_RESTRICTED = PerlElementTypeFactory.getTokenType("LP_STRING_QX_RESTRICTED");
  IElementType LP_STRING_RE = PerlElementTypeFactory.getTokenType("LP_STRING_RE");
  IElementType LP_STRING_TR = PerlElementTypeFactory.getTokenType("LP_STRING_TR");
  IElementType NUMBER = PerlElementTypeFactory.getTokenType("NUMBER");
  IElementType NUMBER_BIN = PerlElementTypeFactory.getTokenType("NUMBER_BIN");
  IElementType NUMBER_HEX = PerlElementTypeFactory.getTokenType("NUMBER_HEX");
  IElementType NUMBER_OCT = PerlElementTypeFactory.getTokenType("NUMBER_OCT");
  IElementType NUMBER_VERSION = PerlElementTypeFactory.getTokenType("NUMBER_VERSION");
  IElementType OPERATOR_AND = PerlElementTypeFactory.getTokenType("&&");
  IElementType OPERATOR_AND_ASSIGN = PerlElementTypeFactory.getTokenType("&&=");
  IElementType OPERATOR_AND_LP = PerlElementTypeFactory.getTokenType("and");
  IElementType OPERATOR_ASSIGN = PerlElementTypeFactory.getTokenType("=");
  IElementType OPERATOR_BITWISE_AND = PerlElementTypeFactory.getTokenType("&");
  IElementType OPERATOR_BITWISE_AND_ASSIGN = PerlElementTypeFactory.getTokenType("&=");
  IElementType OPERATOR_BITWISE_NOT = PerlElementTypeFactory.getTokenType("~");
  IElementType OPERATOR_BITWISE_OR = PerlElementTypeFactory.getTokenType("|");
  IElementType OPERATOR_BITWISE_OR_ASSIGN = PerlElementTypeFactory.getTokenType("|=");
  IElementType OPERATOR_BITWISE_XOR = PerlElementTypeFactory.getTokenType("^");
  IElementType OPERATOR_BITWISE_XOR_ASSIGN = PerlElementTypeFactory.getTokenType("^=");
  IElementType OPERATOR_CMP_NUMERIC = PerlElementTypeFactory.getTokenType("<=>");
  IElementType OPERATOR_CMP_STR = PerlElementTypeFactory.getTokenType("cmp");
  IElementType OPERATOR_CONCAT = PerlElementTypeFactory.getTokenType(".");
  IElementType OPERATOR_CONCAT_ASSIGN = PerlElementTypeFactory.getTokenType(".=");
  IElementType OPERATOR_DEREFERENCE = PerlElementTypeFactory.getTokenType("->");
  IElementType OPERATOR_DIV = PerlElementTypeFactory.getTokenType("/");
  IElementType OPERATOR_DIV_ASSIGN = PerlElementTypeFactory.getTokenType("/=");
  IElementType OPERATOR_EQ_NUMERIC = PerlElementTypeFactory.getTokenType("==");
  IElementType OPERATOR_EQ_STR = PerlElementTypeFactory.getTokenType("eq");
  IElementType OPERATOR_FILETEST = PerlElementTypeFactory.getTokenType("-t");
  IElementType OPERATOR_FLIP_FLOP = PerlElementTypeFactory.getTokenType("..");
  IElementType OPERATOR_GE_NUMERIC = PerlElementTypeFactory.getTokenType(">=");
  IElementType OPERATOR_GE_STR = PerlElementTypeFactory.getTokenType("ge");
  IElementType OPERATOR_GT_NUMERIC = PerlElementTypeFactory.getTokenType(">");
  IElementType OPERATOR_GT_STR = PerlElementTypeFactory.getTokenType("gt");
  IElementType OPERATOR_HELLIP = PerlElementTypeFactory.getTokenType("...");
  IElementType OPERATOR_HEREDOC = PerlElementTypeFactory.getTokenType("heredoc<<");
  IElementType OPERATOR_ISA = PerlElementTypeFactory.getTokenType("isa");
  IElementType OPERATOR_LE_NUMERIC = PerlElementTypeFactory.getTokenType("<=");
  IElementType OPERATOR_LE_STR = PerlElementTypeFactory.getTokenType("le");
  IElementType OPERATOR_LT_NUMERIC = PerlElementTypeFactory.getTokenType("<");
  IElementType OPERATOR_LT_STR = PerlElementTypeFactory.getTokenType("lt");
  IElementType OPERATOR_MINUS = PerlElementTypeFactory.getTokenType("-");
  IElementType OPERATOR_MINUS_ASSIGN = PerlElementTypeFactory.getTokenType("-=");
  IElementType OPERATOR_MINUS_MINUS = PerlElementTypeFactory.getTokenType("--");
  IElementType OPERATOR_MOD = PerlElementTypeFactory.getTokenType("%");
  IElementType OPERATOR_MOD_ASSIGN = PerlElementTypeFactory.getTokenType("%=");
  IElementType OPERATOR_MUL = PerlElementTypeFactory.getTokenType("*");
  IElementType OPERATOR_MUL_ASSIGN = PerlElementTypeFactory.getTokenType("*=");
  IElementType OPERATOR_NE_NUMERIC = PerlElementTypeFactory.getTokenType("!=");
  IElementType OPERATOR_NE_STR = PerlElementTypeFactory.getTokenType("ne");
  IElementType OPERATOR_NOT = PerlElementTypeFactory.getTokenType("!");
  IElementType OPERATOR_NOT_LP = PerlElementTypeFactory.getTokenType("not");
  IElementType OPERATOR_NOT_RE = PerlElementTypeFactory.getTokenType("!~");
  IElementType OPERATOR_NYI = PerlElementTypeFactory.getTokenType("nyi");
  IElementType OPERATOR_OR = PerlElementTypeFactory.getTokenType("||");
  IElementType OPERATOR_OR_ASSIGN = PerlElementTypeFactory.getTokenType("||=");
  IElementType OPERATOR_OR_DEFINED = PerlElementTypeFactory.getTokenType("//");
  IElementType OPERATOR_OR_DEFINED_ASSIGN = PerlElementTypeFactory.getTokenType("//=");
  IElementType OPERATOR_OR_LP = PerlElementTypeFactory.getTokenType("or");
  IElementType OPERATOR_PLUS = PerlElementTypeFactory.getTokenType("+");
  IElementType OPERATOR_PLUS_ASSIGN = PerlElementTypeFactory.getTokenType("+=");
  IElementType OPERATOR_PLUS_PLUS = PerlElementTypeFactory.getTokenType("++");
  IElementType OPERATOR_POW = PerlElementTypeFactory.getTokenType("**");
  IElementType OPERATOR_POW_ASSIGN = PerlElementTypeFactory.getTokenType("**=");
  IElementType OPERATOR_RE = PerlElementTypeFactory.getTokenType("=~");
  IElementType OPERATOR_REFERENCE = PerlElementTypeFactory.getTokenType("\\\\");
  IElementType OPERATOR_SHIFT_LEFT = PerlElementTypeFactory.getTokenType("<<");
  IElementType OPERATOR_SHIFT_LEFT_ASSIGN = PerlElementTypeFactory.getTokenType("<<=");
  IElementType OPERATOR_SHIFT_RIGHT = PerlElementTypeFactory.getTokenType(">>");
  IElementType OPERATOR_SHIFT_RIGHT_ASSIGN = PerlElementTypeFactory.getTokenType(">>=");
  IElementType OPERATOR_SMARTMATCH = PerlElementTypeFactory.getTokenType("~~");
  IElementType OPERATOR_X = PerlElementTypeFactory.getTokenType("x");
  IElementType OPERATOR_XOR_LP = PerlElementTypeFactory.getTokenType("xor");
  IElementType OPERATOR_X_ASSIGN = PerlElementTypeFactory.getTokenType("x=");
  IElementType PACKAGE = PerlElementTypeFactory.getTokenType("package::name");
  IElementType POD = PerlElementTypeFactory.getTokenType("POD");
  IElementType QUALIFYING_PACKAGE = PerlElementTypeFactory.getTokenType("package::name::");
  IElementType QUESTION = PerlElementTypeFactory.getTokenType("?");
  IElementType QUOTE_DOUBLE = PerlElementTypeFactory.getTokenType("QUOTE_DOUBLE");
  IElementType QUOTE_DOUBLE_CLOSE = PerlElementTypeFactory.getTokenType("QUOTE_DOUBLE_CLOSE");
  IElementType QUOTE_DOUBLE_OPEN = PerlElementTypeFactory.getTokenType("QUOTE_DOUBLE_OPEN");
  IElementType QUOTE_SINGLE = PerlElementTypeFactory.getTokenType("QUOTE_SINGLE");
  IElementType QUOTE_SINGLE_CLOSE = PerlElementTypeFactory.getTokenType("QUOTE_SINGLE_CLOSE");
  IElementType QUOTE_SINGLE_OPEN = PerlElementTypeFactory.getTokenType("QUOTE_SINGLE_OPEN");
  IElementType QUOTE_TICK = PerlElementTypeFactory.getTokenType("QUOTE_TICK");
  IElementType QUOTE_TICK_CLOSE = PerlElementTypeFactory.getTokenType("QUOTE_TICK_CLOSE");
  IElementType QUOTE_TICK_OPEN = PerlElementTypeFactory.getTokenType("QUOTE_TICK_OPEN");
  IElementType REGEX_MODIFIER = PerlElementTypeFactory.getTokenType("/m");
  IElementType REGEX_QUOTE = PerlElementTypeFactory.getTokenType("r/");
  IElementType REGEX_QUOTE_CLOSE = PerlElementTypeFactory.getTokenType("r}");
  IElementType REGEX_QUOTE_E = PerlElementTypeFactory.getTokenType("re/");
  IElementType REGEX_QUOTE_OPEN = PerlElementTypeFactory.getTokenType("r{");
  IElementType REGEX_QUOTE_OPEN_E = PerlElementTypeFactory.getTokenType("re{");
  IElementType REGEX_TOKEN = PerlElementTypeFactory.getTokenType("regex");
  IElementType RESERVED_AFTER_FP = PerlElementTypeFactory.getTokenType("fp_after");
  IElementType RESERVED_AROUND_FP = PerlElementTypeFactory.getTokenType("fp_around");
  IElementType RESERVED_ASYNC = PerlElementTypeFactory.getTokenType("async");
  IElementType RESERVED_AUGMENT_FP = PerlElementTypeFactory.getTokenType("fp_augment");
  IElementType RESERVED_BEFORE_FP = PerlElementTypeFactory.getTokenType("fp_before");
  IElementType RESERVED_BLESS = PerlElementTypeFactory.getTokenType("bless");
  IElementType RESERVED_CASE = PerlElementTypeFactory.getTokenType("case");
  IElementType RESERVED_CATCH = PerlElementTypeFactory.getTokenType("catch");
  IElementType RESERVED_CATCH_WITH = PerlElementTypeFactory.getTokenType("catch_with");
  IElementType RESERVED_CONTINUATION = PerlElementTypeFactory.getTokenType("continuation");
  IElementType RESERVED_CONTINUE = PerlElementTypeFactory.getTokenType("continue");
  IElementType RESERVED_DEFAULT = PerlElementTypeFactory.getTokenType("default");
  IElementType RESERVED_DEFINED = PerlElementTypeFactory.getTokenType("defined");
  IElementType RESERVED_DELETE = PerlElementTypeFactory.getTokenType("delete");
  IElementType RESERVED_DO = PerlElementTypeFactory.getTokenType("do");
  IElementType RESERVED_EACH = PerlElementTypeFactory.getTokenType("each");
  IElementType RESERVED_ELSE = PerlElementTypeFactory.getTokenType("else");
  IElementType RESERVED_ELSIF = PerlElementTypeFactory.getTokenType("elsif");
  IElementType RESERVED_EVAL = PerlElementTypeFactory.getTokenType("eval");
  IElementType RESERVED_EXCEPT = PerlElementTypeFactory.getTokenType("except");
  IElementType RESERVED_EXISTS = PerlElementTypeFactory.getTokenType("exists");
  IElementType RESERVED_EXIT = PerlElementTypeFactory.getTokenType("exit");
  IElementType RESERVED_FINALLY = PerlElementTypeFactory.getTokenType("finally");
  IElementType RESERVED_FOR = PerlElementTypeFactory.getTokenType("for");
  IElementType RESERVED_FOREACH = PerlElementTypeFactory.getTokenType("foreach");
  IElementType RESERVED_FORMAT = PerlElementTypeFactory.getTokenType("format");
  IElementType RESERVED_FUN = PerlElementTypeFactory.getTokenType("fun");
  IElementType RESERVED_FUNC = PerlElementTypeFactory.getTokenType("func");
  IElementType RESERVED_GIVEN = PerlElementTypeFactory.getTokenType("given");
  IElementType RESERVED_GOTO = PerlElementTypeFactory.getTokenType("goto");
  IElementType RESERVED_GREP = PerlElementTypeFactory.getTokenType("grep");
  IElementType RESERVED_IF = PerlElementTypeFactory.getTokenType("if");
  IElementType RESERVED_JOIN = PerlElementTypeFactory.getTokenType("join");
  IElementType RESERVED_KEYS = PerlElementTypeFactory.getTokenType("keys");
  IElementType RESERVED_LAST = PerlElementTypeFactory.getTokenType("last");
  IElementType RESERVED_LENGTH = PerlElementTypeFactory.getTokenType("length");
  IElementType RESERVED_LOCAL = PerlElementTypeFactory.getTokenType("local");
  IElementType RESERVED_M = PerlElementTypeFactory.getTokenType("m");
  IElementType RESERVED_MAP = PerlElementTypeFactory.getTokenType("map");
  IElementType RESERVED_METHOD = PerlElementTypeFactory.getTokenType("method");
  IElementType RESERVED_METHOD_FP = PerlElementTypeFactory.getTokenType("fp_method");
  IElementType RESERVED_MY = PerlElementTypeFactory.getTokenType("my");
  IElementType RESERVED_NEXT = PerlElementTypeFactory.getTokenType("next");
  IElementType RESERVED_NO = PerlElementTypeFactory.getTokenType("no");
  IElementType RESERVED_OTHERWISE = PerlElementTypeFactory.getTokenType("otherwise");
  IElementType RESERVED_OUR = PerlElementTypeFactory.getTokenType("our");
  IElementType RESERVED_OVERRIDE_FP = PerlElementTypeFactory.getTokenType("fp_override");
  IElementType RESERVED_PACKAGE = PerlElementTypeFactory.getTokenType("package");
  IElementType RESERVED_POP = PerlElementTypeFactory.getTokenType("pop");
  IElementType RESERVED_PRINT = PerlElementTypeFactory.getTokenType("print");
  IElementType RESERVED_PRINTF = PerlElementTypeFactory.getTokenType("printf");
  IElementType RESERVED_PUSH = PerlElementTypeFactory.getTokenType("push");
  IElementType RESERVED_Q = PerlElementTypeFactory.getTokenType("q");
  IElementType RESERVED_QQ = PerlElementTypeFactory.getTokenType("qq");
  IElementType RESERVED_QR = PerlElementTypeFactory.getTokenType("qr");
  IElementType RESERVED_QW = PerlElementTypeFactory.getTokenType("qw");
  IElementType RESERVED_QX = PerlElementTypeFactory.getTokenType("qx");
  IElementType RESERVED_REDO = PerlElementTypeFactory.getTokenType("redo");
  IElementType RESERVED_REF = PerlElementTypeFactory.getTokenType("ref");
  IElementType RESERVED_REQUIRE = PerlElementTypeFactory.getTokenType("require");
  IElementType RESERVED_RETURN = PerlElementTypeFactory.getTokenType("return");
  IElementType RESERVED_S = PerlElementTypeFactory.getTokenType("s");
  IElementType RESERVED_SAY = PerlElementTypeFactory.getTokenType("say");
  IElementType RESERVED_SCALAR = PerlElementTypeFactory.getTokenType("scalar");
  IElementType RESERVED_SHIFT = PerlElementTypeFactory.getTokenType("shift");
  IElementType RESERVED_SORT = PerlElementTypeFactory.getTokenType("sort");
  IElementType RESERVED_SPLICE = PerlElementTypeFactory.getTokenType("splice");
  IElementType RESERVED_SPLIT = PerlElementTypeFactory.getTokenType("split");
  IElementType RESERVED_STATE = PerlElementTypeFactory.getTokenType("state");
  IElementType RESERVED_SUB = PerlElementTypeFactory.getTokenType("sub");
  IElementType RESERVED_SWITCH = PerlElementTypeFactory.getTokenType("switch");
  IElementType RESERVED_TR = PerlElementTypeFactory.getTokenType("tr");
  IElementType RESERVED_TRY = PerlElementTypeFactory.getTokenType("try");
  IElementType RESERVED_TRYCATCH = PerlElementTypeFactory.getTokenType("TryCatch::");
  IElementType RESERVED_UNDEF = PerlElementTypeFactory.getTokenType("undef");
  IElementType RESERVED_UNLESS = PerlElementTypeFactory.getTokenType("unless");
  IElementType RESERVED_UNSHIFT = PerlElementTypeFactory.getTokenType("unshift");
  IElementType RESERVED_UNTIL = PerlElementTypeFactory.getTokenType("until");
  IElementType RESERVED_USE = PerlElementTypeFactory.getTokenType("use");
  IElementType RESERVED_VALUES = PerlElementTypeFactory.getTokenType("values");
  IElementType RESERVED_WANTARRAY = PerlElementTypeFactory.getTokenType("wantarray");
  IElementType RESERVED_WHEN = PerlElementTypeFactory.getTokenType("when");
  IElementType RESERVED_WHILE = PerlElementTypeFactory.getTokenType("while");
  IElementType RESERVED_Y = PerlElementTypeFactory.getTokenType("y");
  IElementType RIGHT_ANGLE = PerlElementTypeFactory.getTokenType("RIGHT_ANGLE");
  IElementType RIGHT_BRACE = PerlElementTypeFactory.getTokenType("}");
  IElementType RIGHT_BRACE_ARRAY = PerlElementTypeFactory.getTokenType("@}");
  IElementType RIGHT_BRACE_CODE = PerlElementTypeFactory.getTokenType("&}");
  IElementType RIGHT_BRACE_GLOB = PerlElementTypeFactory.getTokenType("*}");
  IElementType RIGHT_BRACE_HASH = PerlElementTypeFactory.getTokenType("%}");
  IElementType RIGHT_BRACE_SCALAR = PerlElementTypeFactory.getTokenType("$}");
  IElementType RIGHT_BRACKET = PerlElementTypeFactory.getTokenType("]");
  IElementType RIGHT_PAREN = PerlElementTypeFactory.getTokenType(")");
  IElementType SCALAR_NAME = PerlElementTypeFactory.getTokenType("SCALAR_NAME");
  IElementType SEMICOLON = PerlElementTypeFactory.getTokenType(";");
  IElementType SIGIL_ARRAY = PerlElementTypeFactory.getTokenType("$@");
  IElementType SIGIL_CODE = PerlElementTypeFactory.getTokenType("$&");
  IElementType SIGIL_GLOB = PerlElementTypeFactory.getTokenType("$*");
  IElementType SIGIL_HASH = PerlElementTypeFactory.getTokenType("$%");
  IElementType SIGIL_SCALAR = PerlElementTypeFactory.getTokenType("$$");
  IElementType SIGIL_SCALAR_INDEX = PerlElementTypeFactory.getTokenType("$#");
  IElementType STRING_CHAR_NAME = PerlElementTypeFactory.getTokenType("charname");
  IElementType STRING_CONTENT = PerlElementTypeFactory.getTokenType("STRING_CONTENT");
  IElementType STRING_CONTENT_QQ = PerlElementTypeFactory.getTokenType("STRING_CONTENT_QQ");
  IElementType STRING_CONTENT_XQ = PerlElementTypeFactory.getTokenType("STRING_CONTENT_XQ");
  IElementType STRING_SPECIAL_ALARM = PerlElementTypeFactory.getTokenType("\\a");
  IElementType STRING_SPECIAL_BACKREF = PerlElementTypeFactory.getTokenType("\\1");
  IElementType STRING_SPECIAL_BACKSPACE = PerlElementTypeFactory.getTokenType("\\b");
  IElementType STRING_SPECIAL_ESCAPE = PerlElementTypeFactory.getTokenType("\\e");
  IElementType STRING_SPECIAL_ESCAPE_CHAR = PerlElementTypeFactory.getTokenType("\\\\\"");
  IElementType STRING_SPECIAL_FOLDCASE_START = PerlElementTypeFactory.getTokenType("\\F");
  IElementType STRING_SPECIAL_FORMFEED = PerlElementTypeFactory.getTokenType("\\f");
  IElementType STRING_SPECIAL_HEX = PerlElementTypeFactory.getTokenType("\\x");
  IElementType STRING_SPECIAL_LCFIRST = PerlElementTypeFactory.getTokenType("\\l");
  IElementType STRING_SPECIAL_LEFT_BRACE = PerlElementTypeFactory.getTokenType("\"{");
  IElementType STRING_SPECIAL_LOWERCASE_START = PerlElementTypeFactory.getTokenType("\\L");
  IElementType STRING_SPECIAL_MODIFIER_END = PerlElementTypeFactory.getTokenType("\\E");
  IElementType STRING_SPECIAL_NEWLINE = PerlElementTypeFactory.getTokenType("\\n");
  IElementType STRING_SPECIAL_OCT = PerlElementTypeFactory.getTokenType("\\o");
  IElementType STRING_SPECIAL_OCT_AMBIGUOUS = PerlElementTypeFactory.getTokenType("\\0");
  IElementType STRING_SPECIAL_QUOTE_START = PerlElementTypeFactory.getTokenType("\\Q");
  IElementType STRING_SPECIAL_RANGE = PerlElementTypeFactory.getTokenType("\"-");
  IElementType STRING_SPECIAL_RETURN = PerlElementTypeFactory.getTokenType("\\r");
  IElementType STRING_SPECIAL_RIGHT_BRACE = PerlElementTypeFactory.getTokenType("}\"");
  IElementType STRING_SPECIAL_SUBST = PerlElementTypeFactory.getTokenType("\\c*");
  IElementType STRING_SPECIAL_TAB = PerlElementTypeFactory.getTokenType("\\t");
  IElementType STRING_SPECIAL_TCFIRST = PerlElementTypeFactory.getTokenType("\\\\u");
  IElementType STRING_SPECIAL_UNICODE = PerlElementTypeFactory.getTokenType("\\N");
  IElementType STRING_SPECIAL_UNICODE_CODE_PREFIX = PerlElementTypeFactory.getTokenType("U+");
  IElementType STRING_SPECIAL_UPPERCASE_START = PerlElementTypeFactory.getTokenType("\\U");
  IElementType SUB_NAME = PerlElementTypeFactory.getTokenType("subname");
  IElementType SUB_PROTOTYPE_TOKEN = PerlElementTypeFactory.getTokenType("SUB_PROTOTYPE_TOKEN");
  IElementType TAG = PerlElementTypeFactory.getTokenType("TAG");
  IElementType TAG_DATA = PerlElementTypeFactory.getTokenType("__DATA__");
  IElementType TAG_END = PerlElementTypeFactory.getTokenType("__END__");
  IElementType TAG_PACKAGE = PerlElementTypeFactory.getTokenType("__PACKAGE__");
  IElementType TYPE_ARRAYREF = PerlElementTypeFactory.getTokenType("ArrayRef");
  IElementType TYPE_HASHREF = PerlElementTypeFactory.getTokenType("HashRef");
  IElementType VERSION_ELEMENT = PerlElementTypeFactory.getTokenType("VERSION_ELEMENT");
}
