/*
 * Copyright 2015-2021 Alexandr Evstigneev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.grammarkit.tasks.GenerateLexerTask
import org.jetbrains.grammarkit.tasks.GenerateParserTask

intellij {
  type.set('IC')
  intellij.plugins = ['java']
}

task generatePerl5Parser(type: GenerateParserTask) {
  source = "grammar/Perl5.bnf"
  pathToParser = '/com/perl5/lang/perl/parser/PerlParserGenerated.java'
  pathToPsiRoot = '/com/perl5/lang/perl/psi'
}

task generatePodParser(type: GenerateParserTask) {
  source = "grammar/Pod.bnf"
  pathToParser = '/com/perl5/lang/pod/parser/PodParserGenerated.java'
  pathToPsiRoot = '/com/perl5/lang/pod/psi'
}


task generatePerlLexer(type: GenerateLexerTask) {
  dependsOn generatePerl5Parser
  source = "grammar/Perl.flex"
  targetDir = "src/main/gen/com/perl5/lang/perl/lexer/"
  targetClass = "PerlLexer"
}

task generatePodLexer(type: GenerateLexerTask) {
  dependsOn generatePodParser
  source = "grammar/Pod.flex"
  targetDir = "src/main/gen/com/perl5/lang/pod/lexer/"
  targetClass = "PodLexerGenerated"
}

tasks.withType(GenerateLexerTask).each {
  it.skeleton = rootProject.file(lexer_skeleton)
  it.purgeOldFiles = true
}

tasks.withType(GenerateParserTask).each {
  it.targetRoot = genRoot.canonicalPath
  it.purgeOldFiles = true
}

compileJava {
  dependsOn generatePerlLexer
  dependsOn generatePodLexer
}

