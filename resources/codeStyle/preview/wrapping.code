package Foo::Bar{

my $hashref = {
# base comment
    key      => 42, # some comment
    otherkey => 424242, # other comment
    # other base comment
    third    => 4 # final comment
};

sub somesub{
say 'hi';
}

sub :foo : bar{say 'hi'};
map {defined} @INC;

if($a){
  say 'yes'; # this is a very long comment line
}elsif($b){
  say 'no';
}else{
  say 'dunno';
}

my @list = qw/
    this is   a    list
    of   some cool strings which should be wrapped somehow    /;

say $a == 42 ? 'long true'   : 'long expression meaning false';
$a ? $a : $b;

$some = $other_thing = something() || other() && $something;

$other_a = $a;
$some = $b;

$someobject->somemethod()    ->othermethod()    ->andagain()->andlastone();
}

if( $a > $b){
  if( $something_very_long == $something_other){
  }
}

my $variable = ('this', 'is', 'list', 'of', 'strings');

sub foo($variable1, $variable2, $variable3, $variable4) :method :something :something(else) {}
method meth($var1, $var2){}

foo($variable1, $variable2, $variable3, $variable4);
Foo->bar($var1, $var2);

my($variable1, $variable2, $variable3, $variable4);
our($v1,$v2,$v3) :method :something :something(else);