import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

/*
 * Copyright 2015-2018 Alexandr Evstigneev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def genRoot = file('gen')

sourceSets {
  main {
    java.srcDirs project.files('src', genRoot)
    resources.srcDir file('resources')
  }
  test {
    java.srcDir file('test')
    resources.srcDirs file('testData')
  }
}

idea{
  module {
    generatedSourceDirs += genRoot
  }
}

intellij{
  plugins = [project(':perl5.core')]
}

dependencies{
  compileOnly project(":perl5.core")
//  testCompile project(":perl5.core")
  testCompile project(":perl5.core").sourceSets.test.output
}

apply plugin: 'org.jetbrains.grammarkit'

task generateTT2Parser(type: GenerateParser) {
  source = "grammar/TemplateToolkit.bnf"
  pathToParser = '/com/perl5/lang/tt2/parser/TemplateToolkitParserGenerated.java'
  pathToPsiRoot = '/com/perl5/lang/tt2/psi'
  targetRoot = genRoot
  purgeOldFiles = true
}


task generateTT2Lexer(type: GenerateLexer) {
  dependsOn generateTT2Parser
  source = "grammar/TemplateToolkit.flex"
  targetDir = "gen/com/perl5/lang/tt2/lexer/"
  targetClass = "TemplateToolkitLexerGenerated"
  skeleton = rootProject.file(lexer_skeleton)
  purgeOldFiles = true
}

compileJava {
  dependsOn generateTT2Lexer
}
