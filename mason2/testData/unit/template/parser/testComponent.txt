Subtree: HTML (HTML)
HtmlFile:testComponent.mc
  PsiElement(HTML_DOCUMENT)
    PsiElement(XML_PROLOG)
      <empty list>
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('% sub { reverse($_[0]) }, sub { reverse($_[0]) } {{\n     ')
    XmlToken:XML_DATA_CHARACTERS('Hello')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }}\n\n% say 'hi';\n% $self->args;\n\n% $.Trim {{ # start trim\n     ')
    XmlToken:XML_DATA_CHARACTERS('This')
    XmlToken:XML_DATA_CHARACTERS('string')
    XmlToken:XML_DATA_CHARACTERS('will')
    XmlToken:XML_DATA_CHARACTERS('be')
    XmlToken:XML_DATA_CHARACTERS('trimmed')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }}  # end Trim\n\n\n% $.Repeat(3) {{\n\n% }}\n\n% $.Repeat(3) {{\n%   $.Repeat(3) {{\n    ')
    XmlToken:XML_DATA_CHARACTERS('This')
    XmlToken:XML_DATA_CHARACTERS('is')
    XmlToken:XML_DATA_CHARACTERS('repeatable')
    XmlToken:XML_DATA_CHARACTERS('text')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }}\n% }}\n\n<%perl>\n\n</%perl>\n\n\n% $.Repeat(3) {{\n ')
    XmlToken:XML_DATA_CHARACTERS('There's')
    XmlToken:XML_DATA_CHARACTERS('no')
    XmlToken:XML_DATA_CHARACTERS('place')
    XmlToken:XML_DATA_CHARACTERS('like')
    XmlToken:XML_DATA_CHARACTERS('home.')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }}\n\n% my $repeat_three = $.Repeat(3);\n% $repeat_three {{\n     ')
    XmlToken:XML_DATA_CHARACTERS('There's')
    XmlToken:XML_DATA_CHARACTERS('no')
    XmlToken:XML_DATA_CHARACTERS('place')
    XmlToken:XML_DATA_CHARACTERS('like')
    XmlToken:XML_DATA_CHARACTERS('home.')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }}\n\n% sub { s/ //g; $_[0] } {{\n     ')
    XmlToken:XML_DATA_CHARACTERS('A')
    XmlToken:XML_DATA_CHARACTERS('bunch')
    XmlToken:XML_DATA_CHARACTERS('of')
    XmlToken:XML_DATA_CHARACTERS('words')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }}\n\n% $.Trim {{\n%   sub { uc($_[0]) } {{\n     ')
    XmlToken:XML_DATA_CHARACTERS('This')
    XmlToken:XML_DATA_CHARACTERS('string')
    XmlToken:XML_DATA_CHARACTERS('will')
    XmlToken:XML_DATA_CHARACTERS('be')
    XmlToken:XML_DATA_CHARACTERS('trimmed')
    XmlToken:XML_DATA_CHARACTERS('and')
    XmlToken:XML_DATA_CHARACTERS('uppercased')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n%   }}\n% }}\n\n\n% $.Trim, sub { uc($_[0]) } {{\n ')
    XmlToken:XML_DATA_CHARACTERS('This')
    XmlToken:XML_DATA_CHARACTERS('will')
    XmlToken:XML_DATA_CHARACTERS('be')
    XmlToken:XML_DATA_CHARACTERS('trimmed')
    XmlToken:XML_DATA_CHARACTERS('and')
    XmlToken:XML_DATA_CHARACTERS('uppercased')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }}\n\n% my $i = 1;\n% $.Row1(3), $.Cache($key, '1 hour') {{\n     <% $i++ %>\n% }}\n\n% my $i = 1;\n% $.Cache($key, '1 hour'), $.Repeat(3) {{\n     <% $i++ %>\n% }}\n\n<%class>    say "Component is loaded!"; </%class>\n<%init>\nsay "Method inited!";\n</%init>\n\n\n<%doc>\n    This is Mason example file\n    Some thing\n    For Camelcade testing\n</%doc>\n\n<%text>\n    Mason is coming...\n    Coming\n    coming\n</%text>\n\n<%perl>\nsay "Perl code executed!";\n  say $m;\n\n</%perl>\n\n<%before navbar1>\n  ')
    HtmlTag:div
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('div')
      PsiElement(XML_ATTRIBUTE)
        XmlToken:XML_NAME('class')
        XmlToken:XML_EQ('=')
        PsiElement(XML_ATTRIBUTE_VALUE)
          XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
          XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('navbar_special')
          XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
      XmlToken:XML_TAG_END('>')
      PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n    <% 'Navigation:' %>\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n  ')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('div')
      XmlToken:XML_TAG_END('>')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n</%before>\n\n<%after render>\n   <% # Add analytics line after everything has rendered %>\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n</%after>\n\n<%augment wrap>\n  ')
    HtmlTag:html
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('html')
      XmlToken:XML_TAG_END('>')
      XmlText
      HtmlTag:body
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('body')
        XmlToken:XML_TAG_END('>')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n      <% say "hi there!" %>\n    ')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('body')
        XmlToken:XML_TAG_END('>')
      XmlText
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('html')
      XmlToken:XML_TAG_END('>')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n</%augment>\n\n<%around navbar1>\n  ')
    HtmlTag:div
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('div')
      PsiElement(XML_ATTRIBUTE)
        XmlToken:XML_NAME('class')
        XmlToken:XML_EQ('=')
        PsiElement(XML_ATTRIBUTE_VALUE)
          XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
          XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('navbar_special')
          XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
      XmlToken:XML_TAG_END('>')
      PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n    <% 'Very special' %>\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n  ')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('div')
      XmlToken:XML_TAG_END('>')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n</%around>\n\n\n<%perl>\n\n#sub navbar{};\n  sub render {};\n  sub wrap {};\n  use v5.10;\n\n  greet1();\n  MC0::Foo::Bar::test_mc1_mc::greet1();\n  MC0::Foo::Bar::test_mc1_mc::navbar1();\n\n</%perl>\n<%class>\n#sub navbar{};\n  sub render {};\n  sub wrap {};\n  use v5.10;\n\n  greet1();\n  MC0::Foo::Bar::test_mc1_mc::greet1();\n  MC0::Foo::Bar::test_mc1_mc::navbar1();\n</%class>\n\n\n<%init>\n#sub navbar{};\n  sub render {};\n  sub wrap {};\n  use v5.10;\n\n  greet1();\n  MC0::Foo::Bar::test_mc1_mc::greet1();\n  MC0::Foo::Bar::test_mc1_mc::navbar1();\n</%init>\n\n<%method greet1 ($name, $color)>\n')
    HtmlTag:div
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('div')
      PsiElement(XML_ATTRIBUTE)
        XmlToken:XML_NAME('style')
        XmlToken:XML_EQ('=')
        PsiElement(XML_ATTRIBUTE_VALUE)
          XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
          XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('color:')
          PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)(' <% $color %>')
          XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
      XmlToken:XML_TAG_END('>')
      XmlText
        XmlToken:XML_DATA_CHARACTERS('Hello,')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)(' <% $name %>')
        XmlToken:XML_DATA_CHARACTERS('!')
      PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n<%perl>\n  say $self;\n    say $orig;\n  </%perl>\n\n<%perl>\n  say $name;\n    say "Perl code executed!";\n  </%perl>\n')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('div')
      XmlToken:XML_TAG_END('>')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n</%method>\n\n<%filter Row1 ($class)>\n')
    HtmlTag:tr
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('tr')
      PsiElement(XML_ATTRIBUTE)
        XmlToken:XML_NAME('class')
        XmlToken:XML_EQ('=')
        PsiElement(XML_ATTRIBUTE_VALUE)
          XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
          PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('<% $class %>')
          XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
      XmlToken:XML_TAG_END('>')
      PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% foreach my $item (split(/\s/, $yield->())) {\n   ')
      HtmlTag:td
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('td')
        XmlToken:XML_TAG_END('>')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('<% $item %>')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('td')
        XmlToken:XML_TAG_END('>')
      PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }\n')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('tr')
      XmlToken:XML_TAG_END('>')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n</%filter>\n\n<%flags>\n  #    extends => '/foo/bar'\n  </%flags>\n\n<%override navbar1>\n  <% super() %>\n\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n\n  ')
    HtmlTag:a
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('a')
      PsiElement(XML_ATTRIBUTE)
        XmlToken:XML_NAME('href')
        XmlToken:XML_EQ('=')
        PsiElement(XML_ATTRIBUTE_VALUE)
          XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
          XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('extra')
          XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
      XmlToken:XML_TAG_END('>')
      XmlText
        XmlToken:XML_DATA_CHARACTERS('extra')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('a')
      XmlToken:XML_TAG_END('>')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n</%override>\n\n\n<%  # comment... %>\n\n')
    HtmlTag:div
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('div')
      XmlToken:XML_TAG_END('>')
      PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% # comment\n')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('div')
      XmlToken:XML_TAG_END('>')
    PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n\n<%doc>\n</%doc>\n\n\n<& /shared/google_analytics_line.mi &>\n\n<& /Foo/Base.mc, name => "value"  &>\n\n\n<%text></%text>\n\n% say 'proper code';\n\n% say 'not a code';\n\n\n')
    HtmlTag:html
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('html')
      XmlToken:XML_TAG_END('>')
      PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% if ($a == $b) {\n')
      HtmlTag:div
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('div')
        XmlToken:XML_TAG_END('>')
        XmlText
          XmlToken:XML_DATA_CHARACTERS('Say')
          XmlToken:XML_DATA_CHARACTERS('hi')
          XmlToken:XML_DATA_CHARACTERS('to')
          PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)(' <% uc("mason")  %>\n    ')
          XmlToken:XML_DATA_CHARACTERS('Say')
          XmlToken:XML_DATA_CHARACTERS('hi')
          XmlToken:XML_DATA_CHARACTERS('to')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)(' <% uc("mason") | Row1 %>\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('div')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n% }\n\n\n ')
        XmlToken:XML_DATA_CHARACTERS('#')
        XmlToken:XML_DATA_CHARACTERS('relative')
        XmlToken:XML_DATA_CHARACTERS('component')
        XmlToken:XML_DATA_CHARACTERS('paths')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n<& topimage.mi &>\n<& tools/searchbox.mi &>\n\n')
        XmlToken:XML_DATA_CHARACTERS('#')
        XmlToken:XML_DATA_CHARACTERS('absolute')
        XmlToken:XML_DATA_CHARACTERS('component')
        XmlToken:XML_DATA_CHARACTERS('path')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n<& /shared/masthead.mi, color => 'salmon' &>\n\n')
        XmlToken:XML_DATA_CHARACTERS('#')
        XmlToken:XML_DATA_CHARACTERS('this')
        XmlToken:XML_DATA_CHARACTERS('component')
        XmlToken:XML_DATA_CHARACTERS('path')
        XmlToken:XML_DATA_CHARACTERS('MUST')
        XmlToken:XML_DATA_CHARACTERS('have')
        XmlToken:XML_DATA_CHARACTERS('quotes')
        XmlToken:XML_DATA_CHARACTERS('because')
        XmlToken:XML_DATA_CHARACTERS('it')
        XmlToken:XML_DATA_CHARACTERS('contains')
        XmlToken:XML_DATA_CHARACTERS('a')
        XmlToken:XML_DATA_CHARACTERS('comma')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n<& "sugar,eggs.mi", mix => 1 &>\n\n')
        XmlToken:XML_DATA_CHARACTERS('#')
        XmlToken:XML_DATA_CHARACTERS('variable')
        XmlToken:XML_DATA_CHARACTERS('component')
        XmlToken:XML_DATA_CHARACTERS('path')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n<& $comp &>\n\n')
        XmlToken:XML_DATA_CHARACTERS('#')
        XmlToken:XML_DATA_CHARACTERS('variable')
        XmlToken:XML_DATA_CHARACTERS('component')
        XmlToken:XML_DATA_CHARACTERS('and')
        XmlToken:XML_DATA_CHARACTERS('attributes')
        PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n<& $comp, %args &>\n\n')
        XmlToken:XML_DATA_CHARACTERS('#')
        XmlToken:XML_DATA_CHARACTERS('you')
        XmlToken:XML_DATA_CHARACTERS('can')
        XmlToken:XML_DATA_CHARACTERS('use')
        XmlToken:XML_DATA_CHARACTERS('arbitrary')
        XmlToken:XML_DATA_CHARACTERS('expression')
        XmlToken:XML_DATA_CHARACTERS('for')
        XmlToken:XML_DATA_CHARACTERS('component')
        XmlToken:XML_DATA_CHARACTERS('path,')
        XmlToken:XML_DATA_CHARACTERS('but')
        XmlToken:XML_DATA_CHARACTERS('it')
        XmlToken:XML_DATA_CHARACTERS('cannot')
        XmlToken:XML_DATA_CHARACTERS('#')
        XmlToken:XML_DATA_CHARACTERS('begin')
        XmlToken:XML_DATA_CHARACTERS('with')
        XmlToken:XML_DATA_CHARACTERS('a')
        XmlToken:XML_DATA_CHARACTERS('letter')
        XmlToken:XML_DATA_CHARACTERS('or')
        XmlToken:XML_DATA_CHARACTERS('number;')
        XmlToken:XML_DATA_CHARACTERS('delimit')
        XmlToken:XML_DATA_CHARACTERS('with')
        XmlToken:XML_DATA_CHARACTERS('()')
        XmlToken:XML_DATA_CHARACTERS('to')
        XmlToken:XML_DATA_CHARACTERS('remedy')
        XmlToken:XML_DATA_CHARACTERS('this')
  PsiElement(Mason2: MASON_OUTER_ELEMENT_TYPE)('\n<& (int(rand(2)) ? 'thiscomp.mi' : 'thatcomp.mi'), id => 123 &>')
--------------------------------------------------------------------------------
Subtree: Mason2 Templating Language (Mason2 Templating Language)
Mason2 template file
  MasonNamespaceDefinitionImpl(MASON_PACKAGE)@/MC0::testComponent_mc
    PsiPerlNamespaceContentImpl(Perl5: NAMESPACE_CONTENT)
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlSubExprImpl(Perl5: SUB_EXPR)
            PsiElement(Perl5: sub)('sub')
            PsiPerlBlockImpl(Perl5: BLOCK)
              PsiElement(Perl5: {)('{')
              PsiPerlStatementImpl(Perl5: STATEMENT)
                PsiPerlSubCallImpl(SUB_CALL)
                  PsiPerlMethodImpl(Perl5: METHOD)
                    PerlSubNameElementImpl(Perl5: unary)('reverse')
                  PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                    PsiElement(Perl5: ()('(')
                    PsiPerlArrayElementImpl(Perl5: ARRAY_ELEMENT)
                      PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                        PsiElement(Perl5: $$)('$')
                        PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('_')
                      PsiPerlArrayIndexImpl(Perl5: ARRAY_INDEX)
                        PsiElement(Perl5: [)('[')
                        PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                          PsiElement(Perl5: NUMBER)('0')
                        PsiElement(Perl5: ])(']')
                    PsiElement(Perl5: ))(')')
              PsiElement(Perl5: })('}')
          PsiElement(Perl5: ,)(',')
          PsiPerlSubExprImpl(Perl5: SUB_EXPR)
            PsiElement(Perl5: sub)('sub')
            PsiPerlBlockImpl(Perl5: BLOCK)
              PsiElement(Perl5: {)('{')
              PsiPerlStatementImpl(Perl5: STATEMENT)
                PsiPerlSubCallImpl(SUB_CALL)
                  PsiPerlMethodImpl(Perl5: METHOD)
                    PerlSubNameElementImpl(Perl5: unary)('reverse')
                  PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                    PsiElement(Perl5: ()('(')
                    PsiPerlArrayElementImpl(Perl5: ARRAY_ELEMENT)
                      PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                        PsiElement(Perl5: $$)('$')
                        PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('_')
                      PsiPerlArrayIndexImpl(Perl5: ARRAY_INDEX)
                        PsiElement(Perl5: [)('[')
                        PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                          PsiElement(Perl5: NUMBER)('0')
                        PsiElement(Perl5: ])(']')
                    PsiElement(Perl5: ))(')')
              PsiElement(Perl5: })('}')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('Hello')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
          PsiElement(Perl5: say)('say')
          PsiPerlStringSqImpl(Perl5: STRING_SQ)
            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('hi')
            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Perl5: ;)(';')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('self')
          PsiElement(Perl5: ->)('->')
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlSubNameElementImpl(Perl5: subname)('args')
        PsiElement(Perl5: ;)(';')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlTermExprImpl(Perl5: TERM_EXPR)
          MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
            PsiElement(Mason2: $.)('$.')
            PsiPerlSubCallImpl(SUB_CALL)
              PsiPerlMethodImpl(Perl5: METHOD)
                PerlSubNameElementImpl(Perl5: subname)('Trim')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiComment(Perl5: COMMENT_LINE)('# start trim')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('This string will be trimmed')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiComment(Perl5: COMMENT_LINE)('# end Trim')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlTermExprImpl(Perl5: TERM_EXPR)
          MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
            PsiElement(Mason2: $.)('$.')
            PsiPerlSubCallImpl(SUB_CALL)
              PsiPerlMethodImpl(Perl5: METHOD)
                PerlSubNameElementImpl(Perl5: subname)('Repeat')
              PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                PsiElement(Perl5: ()('(')
                PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                  PsiElement(Perl5: NUMBER)('3')
                PsiElement(Perl5: ))(')')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlTermExprImpl(Perl5: TERM_EXPR)
          MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
            PsiElement(Mason2: $.)('$.')
            PsiPerlSubCallImpl(SUB_CALL)
              PsiPerlMethodImpl(Perl5: METHOD)
                PerlSubNameElementImpl(Perl5: subname)('Repeat')
              PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                PsiElement(Perl5: ()('(')
                PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                  PsiElement(Perl5: NUMBER)('3')
                PsiElement(Perl5: ))(')')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: %)('% ')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiPerlTermExprImpl(Perl5: TERM_EXPR)
              MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
                PsiElement(Mason2: $.)('$.')
                PsiPerlSubCallImpl(SUB_CALL)
                  PsiPerlMethodImpl(Perl5: METHOD)
                    PerlSubNameElementImpl(Perl5: subname)('Repeat')
                  PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                    PsiElement(Perl5: ()('(')
                    PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                      PsiElement(Perl5: NUMBER)('3')
                    PsiElement(Perl5: ))(')')
            MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
              PsiElement(Mason2: {{)('{{')
              PsiElement(Perl5: ;)('\n')
              PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('This is repeatable text')
              PsiComment(Mason2: %)('% ')
              PsiElement(Mason2: }})('}}')
            PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
        PsiElement(Mason2: <%perl>)('<%perl>')
        PsiElement(Mason2: </%perl>)('</%perl>')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlTermExprImpl(Perl5: TERM_EXPR)
          MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
            PsiElement(Mason2: $.)('$.')
            PsiPerlSubCallImpl(SUB_CALL)
              PsiPerlMethodImpl(Perl5: METHOD)
                PerlSubNameElementImpl(Perl5: subname)('Repeat')
              PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                PsiElement(Perl5: ()('(')
                PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                  PsiElement(Perl5: NUMBER)('3')
                PsiElement(Perl5: ))(')')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('There's no place like home.')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)
          PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)
            PsiElement(Perl5: my)('my')
            PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('repeat_three')
          PsiElement(Perl5: =)('=')
          PsiPerlTermExprImpl(Perl5: TERM_EXPR)
            MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
              PsiElement(Mason2: $.)('$.')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: subname)('Repeat')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                    PsiElement(Perl5: NUMBER)('3')
                  PsiElement(Perl5: ))(')')
        PsiElement(Perl5: ;)(';')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('repeat_three')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('There's no place like home.')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlSubExprImpl(Perl5: SUB_EXPR)
          PsiElement(Perl5: sub)('sub')
          PsiPerlBlockImpl(Perl5: BLOCK)
            PsiElement(Perl5: {)('{')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlReplacementRegexImpl(Perl5: REPLACEMENT_REGEX)
                PsiElement(Perl5: s)('s')
                PsiElement(Perl5: r{)('/')
                PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)
                  PsiElement(Perl5: regex)(' ')
                PsiElement(Perl5: r/)('/')
                PsiPerlRegexReplacementImpl(Perl5: REGEX_REPLACEMENT)
                  <empty list>
                PsiElement(Perl5: r})('/')
                PsiPerlPerlRegexModifiersImpl(Perl5: PERL_REGEX_MODIFIERS)
                  PsiElement(Perl5: /m)('g')
              PsiElement(Perl5: ;)(';')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlArrayElementImpl(Perl5: ARRAY_ELEMENT)
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('_')
                PsiPerlArrayIndexImpl(Perl5: ARRAY_INDEX)
                  PsiElement(Perl5: [)('[')
                  PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                    PsiElement(Perl5: NUMBER)('0')
                  PsiElement(Perl5: ])(']')
            PsiElement(Perl5: })('}')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('A bunch of words')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlTermExprImpl(Perl5: TERM_EXPR)
          MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
            PsiElement(Mason2: $.)('$.')
            PsiPerlSubCallImpl(SUB_CALL)
              PsiPerlMethodImpl(Perl5: METHOD)
                PerlSubNameElementImpl(Perl5: subname)('Trim')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: %)('% ')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiPerlSubExprImpl(Perl5: SUB_EXPR)
              PsiElement(Perl5: sub)('sub')
              PsiPerlBlockImpl(Perl5: BLOCK)
                PsiElement(Perl5: {)('{')
                PsiPerlStatementImpl(Perl5: STATEMENT)
                  PsiPerlSubCallImpl(SUB_CALL)
                    PsiPerlMethodImpl(Perl5: METHOD)
                      PerlSubNameElementImpl(Perl5: unary)('uc')
                    PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                      PsiElement(Perl5: ()('(')
                      PsiPerlArrayElementImpl(Perl5: ARRAY_ELEMENT)
                        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                          PsiElement(Perl5: $$)('$')
                          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('_')
                        PsiPerlArrayIndexImpl(Perl5: ARRAY_INDEX)
                          PsiElement(Perl5: [)('[')
                          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                            PsiElement(Perl5: NUMBER)('0')
                          PsiElement(Perl5: ])(']')
                      PsiElement(Perl5: ))(')')
                PsiElement(Perl5: })('}')
            MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
              PsiElement(Mason2: {{)('{{')
              PsiElement(Perl5: ;)('\n')
              PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('This string will be trimmed and uppercased')
              PsiComment(Mason2: %)('% ')
              PsiElement(Mason2: }})('}}')
            PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlTermExprImpl(Perl5: TERM_EXPR)
            MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
              PsiElement(Mason2: $.)('$.')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: subname)('Trim')
          PsiElement(Perl5: ,)(',')
          PsiPerlSubExprImpl(Perl5: SUB_EXPR)
            PsiElement(Perl5: sub)('sub')
            PsiPerlBlockImpl(Perl5: BLOCK)
              PsiElement(Perl5: {)('{')
              PsiPerlStatementImpl(Perl5: STATEMENT)
                PsiPerlSubCallImpl(SUB_CALL)
                  PsiPerlMethodImpl(Perl5: METHOD)
                    PerlSubNameElementImpl(Perl5: unary)('uc')
                  PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                    PsiElement(Perl5: ()('(')
                    PsiPerlArrayElementImpl(Perl5: ARRAY_ELEMENT)
                      PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                        PsiElement(Perl5: $$)('$')
                        PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('_')
                      PsiPerlArrayIndexImpl(Perl5: ARRAY_INDEX)
                        PsiElement(Perl5: [)('[')
                        PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                          PsiElement(Perl5: NUMBER)('0')
                        PsiElement(Perl5: ])(']')
                    PsiElement(Perl5: ))(')')
              PsiElement(Perl5: })('}')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('This will be trimmed and uppercased')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)
          PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)
            PsiElement(Perl5: my)('my')
            PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('i')
          PsiElement(Perl5: =)('=')
          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
            PsiElement(Perl5: NUMBER)('1')
        PsiElement(Perl5: ;)(';')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlTermExprImpl(Perl5: TERM_EXPR)
            MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
              PsiElement(Mason2: $.)('$.')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: subname)('Row1')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                    PsiElement(Perl5: NUMBER)('3')
                  PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ,)(',')
          PsiPerlTermExprImpl(Perl5: TERM_EXPR)
            MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
              PsiElement(Mason2: $.)('$.')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: subname)('Cache')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
                    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                      PsiElement(Perl5: $$)('$')
                      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('key')
                    PsiElement(Perl5: ,)(',')
                    PsiPerlStringSqImpl(Perl5: STRING_SQ)
                      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
                      PerlStringContentElementImpl(Perl5: STRING_CONTENT)('1 hour')
                      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
                  PsiElement(Perl5: ))(')')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlSuffPpExprImpl(Perl5: SUFF_PP_EXPR)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('i')
              PsiElement(Perl5: ++)('++')
            PsiElement(Mason2:  %>)(' %>')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)
          PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)
            PsiElement(Perl5: my)('my')
            PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('i')
          PsiElement(Perl5: =)('=')
          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
            PsiElement(Perl5: NUMBER)('1')
        PsiElement(Perl5: ;)(';')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlTermExprImpl(Perl5: TERM_EXPR)
            MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
              PsiElement(Mason2: $.)('$.')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: subname)('Cache')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
                    PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                      PsiElement(Perl5: $$)('$')
                      PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('key')
                    PsiElement(Perl5: ,)(',')
                    PsiPerlStringSqImpl(Perl5: STRING_SQ)
                      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
                      PerlStringContentElementImpl(Perl5: STRING_CONTENT)('1 hour')
                      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
                  PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ,)(',')
          PsiPerlTermExprImpl(Perl5: TERM_EXPR)
            MasonSimpleDerefExpressionImpl(Mason2: MASON_DEREF_EXPRESSION)
              PsiElement(Mason2: $.)('$.')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: subname)('Repeat')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                    PsiElement(Perl5: NUMBER)('3')
                  PsiElement(Perl5: ))(')')
        MasonFilteredBlockImpl(Mason2: MASON_FILTERED_BLOCK)
          PsiElement(Mason2: {{)('{{')
          PsiElement(Perl5: ;)('\n')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlSuffPpExprImpl(Perl5: SUFF_PP_EXPR)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('i')
              PsiElement(Perl5: ++)('++')
            PsiElement(Mason2:  %>)(' %>')
          PsiComment(Mason2: %)('% ')
          PsiElement(Mason2: }})('}}')
        PsiElement(Perl5: ;)('\n')
      MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
        PsiElement(Mason2: <%class>)('<%class>')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
            PsiElement(Perl5: say)('say')
            PsiPerlStringDqImpl(Perl5: STRING_DQ)
              PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
              PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('Component is loaded!')
              PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ;)(';')
        PsiElement(Mason2: </%class>)('</%class>')
      MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
        PsiElement(Mason2: <%init>)('<%init>')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
            PsiElement(Perl5: say)('say')
            PsiPerlStringDqImpl(Perl5: STRING_DQ)
              PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
              PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('Method inited!')
              PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ;)(';')
        PsiElement(Mason2: </%init>)('</%init>')
      PsiElement(Mason2: <%doc>)('<%doc>')
      PsiComment(Perl5: COMMENT_BLOCK)('\n    This is Mason example file\n    Some thing\n    For Camelcade testing\n')
      PsiElement(Mason2: </%doc>)('</%doc>')
      PsiElement(Mason2: <%text>)('<%text>')
      MasonTextBlockImpl(Mason2: MASON_TEXT_BLOCK)
        PerlStringContentElementImpl(Perl5: STRING_CONTENT)('\n    Mason is coming...\n    Coming\n    coming\n')
      PsiElement(Mason2: </%text>)('</%text>')
      MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
        PsiElement(Mason2: <%perl>)('<%perl>')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
            PsiElement(Perl5: say)('say')
            PsiPerlStringDqImpl(Perl5: STRING_DQ)
              PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
              PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('Perl code executed!')
              PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
            PsiElement(Perl5: say)('say')
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('m')
          PsiElement(Perl5: ;)(';')
        PsiElement(Mason2: </%perl>)('</%perl>')
      MasonMethodModifierImpl(Mason2: MASON_BEFOE_MODIFIER)
        PsiElement(Mason2: <%before)('<%before')
        PerlSubNameElementImpl(Perl5: subname)('navbar1')
        PsiElement(Mason2: >)('>')
        PsiPerlBlockBracelessImpl(Perl5: BLOCK_BRACELESS)
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<div class="navbar_special">')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlStringSqImpl(Perl5: STRING_SQ)
              PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
              PerlStringContentElementImpl(Perl5: STRING_CONTENT)('Navigation:')
              PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
            PsiElement(Mason2:  %>)(' %>')
          MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
            PsiElement(Mason2: <%perl>)('<%perl>')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('self')
              PsiElement(Perl5: ;)(';')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('orig')
              PsiElement(Perl5: ;)(';')
            PsiElement(Mason2: </%perl>)('</%perl>')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('</div>')
        PsiElement(Mason2: </%before>)('</%before>')
      MasonMethodModifierImpl(Mason2: MASON_AFTER_MODIFIER)
        PsiElement(Mason2: <%after)('<%after')
        PerlSubNameElementImpl(Perl5: subname)('render')
        PsiElement(Mason2: >)('>')
        PsiPerlBlockBracelessImpl(Perl5: BLOCK_BRACELESS)
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiComment(Perl5: COMMENT_LINE)('# Add analytics line after everything has rendered')
            PsiElement(Mason2:  %>)(' %>')
          MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
            PsiElement(Mason2: <%perl>)('<%perl>')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('self')
              PsiElement(Perl5: ;)(';')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('orig')
              PsiElement(Perl5: ;)(';')
            PsiElement(Mason2: </%perl>)('</%perl>')
        PsiElement(Mason2: </%after>)('</%after>')
      MasonAugmentMethodModifierImpl(MASON_AUGMENT_MODIFIER)
        PsiElement(Mason2: <%augment)('<%augment')
        PerlSubNameElementImpl(Perl5: subname)('wrap')
        PsiElement(Mason2: >)('>')
        PsiPerlBlockBracelessImpl(Perl5: BLOCK_BRACELESS)
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<html>\n    <body>')
          MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
            PsiElement(Mason2: <%perl>)('<%perl>')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('self')
              PsiElement(Perl5: ;)(';')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('orig')
              PsiElement(Perl5: ;)(';')
            PsiElement(Mason2: </%perl>)('</%perl>')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
              PsiElement(Perl5: say)('say')
              PsiPerlStringDqImpl(Perl5: STRING_DQ)
                PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
                PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('hi there!')
                PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
            PsiElement(Mason2:  %>)(' %>')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('</body>\n  </html>')
        PsiElement(Mason2: </%augment>)('</%augment>')
      MasonAroundMethodModifierImpl(Mason2: MASON_AROUND_MODIFIER)
        PsiElement(Mason2: <%around)('<%around')
        PerlSubNameElementImpl(Perl5: subname)('navbar1')
        PsiElement(Mason2: >)('>')
        PsiPerlBlockBracelessImpl(Perl5: BLOCK_BRACELESS)
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<div class="navbar_special">')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlStringSqImpl(Perl5: STRING_SQ)
              PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
              PerlStringContentElementImpl(Perl5: STRING_CONTENT)('Very special')
              PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
            PsiElement(Mason2:  %>)(' %>')
          MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
            PsiElement(Mason2: <%perl>)('<%perl>')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('self')
              PsiElement(Perl5: ;)(';')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('orig')
              PsiElement(Perl5: ;)(';')
            PsiElement(Mason2: </%perl>)('</%perl>')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('</div>')
        PsiElement(Mason2: </%around>)('</%around>')
      MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
        PsiElement(Mason2: <%perl>)('<%perl>')
        PsiComment(Perl5: COMMENT_LINE)('#sub navbar{};')
        PsiPerlSubDefinitionImpl(SUB_DEFINITION)@/MC0::testComponent_mc::render
          PsiElement(Perl5: sub)('sub')
          PerlSubNameElementImpl(Perl5: subname)('render')
          PsiPerlBlockImpl(Perl5: BLOCK)
            PsiElement(Perl5: {)('{')
            PsiElement(Perl5: })('}')
        PsiElement(Perl5: ;)(';')
        PsiPerlSubDefinitionImpl(SUB_DEFINITION)@/MC0::testComponent_mc::wrap
          PsiElement(Perl5: sub)('sub')
          PerlSubNameElementImpl(Perl5: subname)('wrap')
          PsiPerlBlockImpl(Perl5: BLOCK)
            PsiElement(Perl5: {)('{')
            PsiElement(Perl5: })('}')
        PsiElement(Perl5: ;)(';')
        PerlUseStatementElement(USE_STATEMENT)
          PsiElement(Perl5: use)('use')
          PerlVersionElementImpl(Perl5: VERSION_ELEMENT)('v5.10')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlSubNameElementImpl(Perl5: subname)('greet1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlNamespaceElementImpl(Perl5: package::name::)('MC0::Foo::Bar::test_mc1_mc::')
              PerlSubNameElementImpl(Perl5: subname)('greet1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlNamespaceElementImpl(Perl5: package::name::)('MC0::Foo::Bar::test_mc1_mc::')
              PerlSubNameElementImpl(Perl5: subname)('navbar1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiElement(Mason2: </%perl>)('</%perl>')
      MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
        PsiElement(Mason2: <%class>)('<%class>')
        PsiComment(Perl5: COMMENT_LINE)('#sub navbar{};')
        PsiPerlSubDefinitionImpl(SUB_DEFINITION)@/MC0::testComponent_mc::render
          PsiElement(Perl5: sub)('sub')
          PerlSubNameElementImpl(Perl5: subname)('render')
          PsiPerlBlockImpl(Perl5: BLOCK)
            PsiElement(Perl5: {)('{')
            PsiElement(Perl5: })('}')
        PsiElement(Perl5: ;)(';')
        PsiPerlSubDefinitionImpl(SUB_DEFINITION)@/MC0::testComponent_mc::wrap
          PsiElement(Perl5: sub)('sub')
          PerlSubNameElementImpl(Perl5: subname)('wrap')
          PsiPerlBlockImpl(Perl5: BLOCK)
            PsiElement(Perl5: {)('{')
            PsiElement(Perl5: })('}')
        PsiElement(Perl5: ;)(';')
        PerlUseStatementElement(USE_STATEMENT)
          PsiElement(Perl5: use)('use')
          PerlVersionElementImpl(Perl5: VERSION_ELEMENT)('v5.10')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlSubNameElementImpl(Perl5: subname)('greet1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlNamespaceElementImpl(Perl5: package::name::)('MC0::Foo::Bar::test_mc1_mc::')
              PerlSubNameElementImpl(Perl5: subname)('greet1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlNamespaceElementImpl(Perl5: package::name::)('MC0::Foo::Bar::test_mc1_mc::')
              PerlSubNameElementImpl(Perl5: subname)('navbar1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiElement(Mason2: </%class>)('</%class>')
      MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
        PsiElement(Mason2: <%init>)('<%init>')
        PsiComment(Perl5: COMMENT_LINE)('#sub navbar{};')
        PsiPerlSubDefinitionImpl(SUB_DEFINITION)@/MC0::testComponent_mc::render
          PsiElement(Perl5: sub)('sub')
          PerlSubNameElementImpl(Perl5: subname)('render')
          PsiPerlBlockImpl(Perl5: BLOCK)
            PsiElement(Perl5: {)('{')
            PsiElement(Perl5: })('}')
        PsiElement(Perl5: ;)(';')
        PsiPerlSubDefinitionImpl(SUB_DEFINITION)@/MC0::testComponent_mc::wrap
          PsiElement(Perl5: sub)('sub')
          PerlSubNameElementImpl(Perl5: subname)('wrap')
          PsiPerlBlockImpl(Perl5: BLOCK)
            PsiElement(Perl5: {)('{')
            PsiElement(Perl5: })('}')
        PsiElement(Perl5: ;)(';')
        PerlUseStatementElement(USE_STATEMENT)
          PsiElement(Perl5: use)('use')
          PerlVersionElementImpl(Perl5: VERSION_ELEMENT)('v5.10')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlSubNameElementImpl(Perl5: subname)('greet1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlNamespaceElementImpl(Perl5: package::name::)('MC0::Foo::Bar::test_mc1_mc::')
              PerlSubNameElementImpl(Perl5: subname)('greet1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiPerlStatementImpl(Perl5: STATEMENT)
          PsiPerlSubCallImpl(SUB_CALL)
            PsiPerlMethodImpl(Perl5: METHOD)
              PerlNamespaceElementImpl(Perl5: package::name::)('MC0::Foo::Bar::test_mc1_mc::')
              PerlSubNameElementImpl(Perl5: subname)('navbar1')
            PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
              PsiElement(Perl5: ()('(')
              PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ;)(';')
        PsiElement(Mason2: </%init>)('</%init>')
      MasonMethodDefinition(MASON_METHOD_DEFINITION)@/MC0::testComponent_mc::greet1
        PsiElement(Mason2: <%method)('<%method')
        PerlSubNameElementImpl(Perl5: subname)('greet1')
        PsiElement(Perl5: ()('(')
        PsiPerlSignatureContentImpl(Perl5: SIGNATURE_CONTENT)
          PsiPerlSignatureElementImpl(Perl5: SIGNATURE_ELEMENT)
            PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('name')
          PsiElement(Perl5: ,)(',')
          PsiPerlSignatureElementImpl(Perl5: SIGNATURE_ELEMENT)
            PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('color')
        PsiElement(Perl5: ))(')')
        PsiElement(Mason2: >)('>')
        PsiPerlBlockBracelessImpl(Perl5: BLOCK_BRACELESS)
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<div style="color:')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('color')
            PsiElement(Mason2:  %>)(' %>')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('">\n  Hello,')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('name')
            PsiElement(Mason2:  %>)(' %>')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('!')
          MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
            PsiElement(Mason2: <%perl>)('<%perl>')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('self')
              PsiElement(Perl5: ;)(';')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('orig')
              PsiElement(Perl5: ;)(';')
            PsiElement(Mason2: </%perl>)('</%perl>')
          MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
            PsiElement(Mason2: <%perl>)('<%perl>')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('name')
              PsiElement(Perl5: ;)(';')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlStringDqImpl(Perl5: STRING_DQ)
                  PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
                  PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('Perl code executed!')
                  PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
              PsiElement(Perl5: ;)(';')
            PsiElement(Mason2: </%perl>)('</%perl>')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('</div>')
        PsiElement(Mason2: </%method>)('</%method>')
      MasonFilterDefinition(MASON_FILTER_DEFINITION)@/MC0::testComponent_mc::Row1
        PsiElement(Mason2: <%filter)('<%filter')
        PerlSubNameElementImpl(Perl5: subname)('Row1')
        PsiElement(Perl5: ()('(')
        PsiPerlSignatureContentImpl(Perl5: SIGNATURE_CONTENT)
          PsiPerlSignatureElementImpl(Perl5: SIGNATURE_ELEMENT)
            PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('class')
        PsiElement(Perl5: ))(')')
        PsiElement(Mason2: >)('>')
        PsiPerlBlockBracelessImpl(Perl5: BLOCK_BRACELESS)
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<tr class="')
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
              PsiElement(Perl5: $$)('$')
              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('class')
            PsiElement(Mason2:  %>)(' %>')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('">')
          PsiComment(Mason2: %)('% ')
          PsiPerlForeachCompoundImpl(Perl5: FOREACH_COMPOUND)
            PsiElement(Perl5: foreach)('foreach')
            PsiPerlForeachIteratorImpl(Perl5: FOREACH_ITERATOR)
              PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)
                PsiElement(Perl5: my)('my')
                PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)
                  PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                    PsiElement(Perl5: $$)('$')
                    PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('item')
            PsiPerlConditionExprImpl(Perl5: CONDITION_EXPR)
              PsiElement(Perl5: ()('(')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: list)('split')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
                    PsiPerlMatchRegexImpl(Perl5: MATCH_REGEX)
                      PsiElement(Perl5: r{)('/')
                      PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)
                        PsiElement(Perl5: regex)('\s')
                      PsiElement(Perl5: r})('/')
                    PsiElement(Perl5: ,)(',')
                    PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)
                      PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                        PsiElement(Perl5: $$)('$')
                        PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('yield')
                      PsiElement(Perl5: ->)('->')
                      PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                        PsiElement(Perl5: ()('(')
                        PsiElement(Perl5: ))(')')
                  PsiElement(Perl5: ))(')')
              PsiElement(Perl5: ))(')')
            PsiPerlBlockImpl(Perl5: BLOCK)
              PsiElement(Perl5: {)('{')
              PsiElement(Perl5: ;)('\n')
              PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<td>')
              PsiPerlStatementImpl(Perl5: STATEMENT)
                PsiElement(Mason2: <% )('<% ')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('item')
                PsiElement(Mason2:  %>)(' %>')
              PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('</td>')
              PsiComment(Mason2: %)('% ')
              PsiElement(Perl5: })('}')
          PsiElement(Perl5: ;)('\n')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('</tr>')
        PsiElement(Mason2: </%filter>)('</%filter>')
      PsiElement(Mason2: <%flags>)('<%flags>')
      PsiComment(Perl5: COMMENT_LINE)('#    extends => '/foo/bar'')
      MasonFlagsStatementImpl(Mason2: FLAGS_STATEMENT)
        <empty list>
      PsiElement(Mason2: </%flags>)('</%flags>')
      MasonOverrideDefinition(MASON_OVERRIDE_DEFINITION)@/MC0::testComponent_mc::navbar1
        PsiElement(Mason2: <%override)('<%override')
        PerlSubNameElementImpl(Perl5: subname)('navbar1')
        PsiElement(Mason2: >)('>')
        PsiPerlBlockBracelessImpl(Perl5: BLOCK_BRACELESS)
          PsiPerlStatementImpl(Perl5: STATEMENT)
            PsiElement(Mason2: <% )('<% ')
            PsiPerlSubCallImpl(SUB_CALL)
              PsiPerlMethodImpl(Perl5: METHOD)
                PerlMooseKeywordSubNameElementImpl(Perl5: super)('super')
              PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                PsiElement(Perl5: ()('(')
                PsiElement(Perl5: ))(')')
            PsiElement(Mason2:  %>)(' %>')
          MasonAbstractBlockImpl(Mason2: MASON_ABSTRACT_BLOCK)
            PsiElement(Mason2: <%perl>)('<%perl>')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('self')
              PsiElement(Perl5: ;)(';')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
                PsiElement(Perl5: say)('say')
                PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                  PsiElement(Perl5: $$)('$')
                  PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('orig')
              PsiElement(Perl5: ;)(';')
            PsiElement(Mason2: </%perl>)('</%perl>')
          PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<a href="extra">extra</a>')
        PsiElement(Mason2: </%override>)('</%override>')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiElement(Mason2: <% )('<% ')
        PsiComment(Perl5: COMMENT_LINE)('# comment...')
        PsiElement(Mason2:  %>)(' %>')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<div>')
      PsiComment(Mason2: %)('% ')
      PsiComment(Perl5: COMMENT_LINE)('# comment')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('</div>')
      PsiElement(Mason2: <%doc>)('<%doc>')
      PsiComment(Perl5: COMMENT_BLOCK)('\n')
      PsiElement(Mason2: </%doc>)('</%doc>')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('/shared/google_analytics_line.mi')
        PsiElement(Mason2:  &>)(' &>')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('/Foo/Base.mc')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('name')
          PsiElement(Perl5: =>)('=>')
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('value')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
        PsiElement(Mason2:  &>)(' &>')
      PsiElement(Mason2: <%text>)('<%text>')
      PsiElement(Mason2: </%text>)('</%text>')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
          PsiElement(Perl5: say)('say')
          PsiPerlStringSqImpl(Perl5: STRING_SQ)
            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('proper code')
            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Perl5: ;)(';')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: %)('% ')
      PsiPerlStatementImpl(Perl5: STATEMENT)
        PsiPerlPrintExprImpl(Perl5: PRINT_EXPR)
          PsiElement(Perl5: say)('say')
          PsiPerlStringSqImpl(Perl5: STRING_SQ)
            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('not a code')
            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Perl5: ;)(';')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<html>')
      PsiComment(Mason2: %)('% ')
      PsiPerlIfCompoundImpl(Perl5: IF_COMPOUND)
        PsiElement(Perl5: if)('if')
        PsiPerlConditionalBlockImpl(Perl5: CONDITIONAL_BLOCK)
          PsiPerlConditionExprImpl(Perl5: CONDITION_EXPR)
            PsiElement(Perl5: ()('(')
            PsiPerlEqualExprImpl(Perl5: EQUAL_EXPR)
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('a')
              PsiElement(Perl5: ==)('==')
              PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
                PsiElement(Perl5: $$)('$')
                PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('b')
            PsiElement(Perl5: ))(')')
          PsiPerlBlockImpl(Perl5: BLOCK)
            PsiElement(Perl5: {)('{')
            PsiElement(Perl5: ;)('\n')
            PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('<div>\n    Say hi to')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiElement(Mason2: <% )('<% ')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: unary)('uc')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlStringDqImpl(Perl5: STRING_DQ)
                    PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
                    PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('mason')
                    PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
                  PsiElement(Perl5: ))(')')
              PsiElement(Mason2:  %>)(' %>')
            PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('Say hi to')
            PsiPerlStatementImpl(Perl5: STATEMENT)
              PsiElement(Mason2: <% )('<% ')
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: unary)('uc')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlStringDqImpl(Perl5: STRING_DQ)
                    PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
                    PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('mason')
                    PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
                  PsiElement(Perl5: ))(')')
              PsiElement(Mason2: |)('|')
              PsiPerlMethodImpl(Perl5: METHOD)
                PerlSubNameElementImpl(Perl5: subname)('Row1')
              PsiElement(Mason2:  %>)(' %>')
            PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('</div>')
            PsiComment(Mason2: %)('% ')
            PsiElement(Perl5: })('}')
      PsiElement(Perl5: ;)('\n')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('# relative component paths')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('topimage.mi')
        PsiElement(Mason2:  &>)(' &>')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlStringBareImpl(Perl5: STRING_BARE)
          PerlStringContentElementImpl(Perl5: STRING_CONTENT)('tools/searchbox.mi')
        PsiElement(Mason2:  &>)(' &>')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('# absolute component path')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('/shared/masthead.mi')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('color')
          PsiElement(Perl5: =>)('=>')
          PsiPerlStringSqImpl(Perl5: STRING_SQ)
            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('salmon')
            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
        PsiElement(Mason2:  &>)(' &>')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('# this component path MUST have quotes because it contains a comma')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlStringDqImpl(Perl5: STRING_DQ)
            PsiElement(Perl5: QUOTE_DOUBLE_OPEN)('"')
            PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)('sugar,eggs.mi')
            PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)('"')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('mix')
          PsiElement(Perl5: =>)('=>')
          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
            PsiElement(Perl5: NUMBER)('1')
        PsiElement(Mason2:  &>)(' &>')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('# variable component path')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
          PsiElement(Perl5: $$)('$')
          PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('comp')
        PsiElement(Mason2:  &>)(' &>')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('# variable component and attributes')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)
            PsiElement(Perl5: $$)('$')
            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)('comp')
          PsiElement(Perl5: ,)(',')
          PsiPerlHashVariableImpl(Perl5: HASH_VARIABLE)
            PsiElement(Perl5: $%)('%')
            PerlVariableNameElementImpl(Perl5: HASH_NAME)('args')
        PsiElement(Mason2:  &>)(' &>')
      PsiComment(Mason2: MASON_TEMPLATE_BLOCK_HTML)('# you can use arbitrary expression for component path, but it cannot\n# begin with a letter or number; delimit with () to remedy this')
      MasonCallStatementImpl(Mason2: MASON_CALL_STATEMENT)
        PsiElement(Mason2: <& )('<& ')
        PsiPerlCommaSequenceExprImpl(Perl5: COMMA_SEQUENCE_EXPR)
          PsiPerlParenthesisedExprImpl(Perl5: PARENTHESISED_EXPR)
            PsiElement(Perl5: ()('(')
            PsiPerlTernaryExprImpl(Perl5: TERNARY_EXPR)
              PsiPerlSubCallImpl(SUB_CALL)
                PsiPerlMethodImpl(Perl5: METHOD)
                  PerlSubNameElementImpl(Perl5: unary)('int')
                PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                  PsiElement(Perl5: ()('(')
                  PsiPerlSubCallImpl(SUB_CALL)
                    PsiPerlMethodImpl(Perl5: METHOD)
                      PerlSubNameElementImpl(Perl5: unary)('rand')
                    PsiPerlParenthesisedCallArgumentsImpl(Perl5: PARENTHESISED_CALL_ARGUMENTS)
                      PsiElement(Perl5: ()('(')
                      PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
                        PsiElement(Perl5: NUMBER)('2')
                      PsiElement(Perl5: ))(')')
                  PsiElement(Perl5: ))(')')
              PsiElement(Perl5: ?)('?')
              PsiPerlStringSqImpl(Perl5: STRING_SQ)
                PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
                PerlStringContentElementImpl(Perl5: STRING_CONTENT)('thiscomp.mi')
                PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
              PsiElement(Perl5: :)(':')
              PsiPerlStringSqImpl(Perl5: STRING_SQ)
                PsiElement(Perl5: QUOTE_SINGLE_OPEN)(''')
                PerlStringContentElementImpl(Perl5: STRING_CONTENT)('thatcomp.mi')
                PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(''')
            PsiElement(Perl5: ))(')')
          PsiElement(Perl5: ,)(',')
          PsiPerlStringBareImpl(Perl5: STRING_BARE)
            PerlStringContentElementImpl(Perl5: STRING_CONTENT)('id')
          PsiElement(Perl5: =>)('=>')
          PsiPerlNumberConstantImpl(Perl5: NUMBER_CONSTANT)
            PsiElement(Perl5: NUMBER)('123')
        PsiElement(Mason2:  &>)(' &>')
--------------------------------------------------------------------------------
Subtree: Perl5 POD (Perl5 POD)
POD file
  PsiElement(Perl5 POD: POD_OUTER)('% sub { reverse($_[0]) }, sub { reverse($_[0]) } {{\n     Hello\n% }}\n\n% say 'hi';\n% $self->args;\n\n% $.Trim {{ # start trim\n     This string will be trimmed\n% }}  # end Trim\n\n\n% $.Repeat(3) {{\n\n% }}\n\n% $.Repeat(3) {{\n%   $.Repeat(3) {{\n    This is repeatable text\n% }}\n% }}\n\n<%perl>\n\n</%perl>\n\n\n% $.Repeat(3) {{\n There's no place like home.\n% }}\n\n% my $repeat_three = $.Repeat(3);\n% $repeat_three {{\n     There's no place like home.\n% }}\n\n% sub { s/ //g; $_[0] } {{\n     A bunch of words\n% }}\n\n% $.Trim {{\n%   sub { uc($_[0]) } {{\n     This string will be trimmed and uppercased\n%   }}\n% }}\n\n\n% $.Trim, sub { uc($_[0]) } {{\n This will be trimmed and uppercased\n% }}\n\n% my $i = 1;\n% $.Row1(3), $.Cache($key, '1 hour') {{\n     <% $i++ %>\n% }}\n\n% my $i = 1;\n% $.Cache($key, '1 hour'), $.Repeat(3) {{\n     <% $i++ %>\n% }}\n\n<%class>    say "Component is loaded!"; </%class>\n<%init>\nsay "Method inited!";\n</%init>\n\n\n<%doc>\n    This is Mason example file\n    Some thing\n    For Camelcade testing\n</%doc>\n\n<%text>\n    Mason is coming...\n    Coming\n    coming\n</%text>\n\n<%perl>\nsay "Perl code executed!";\n  say $m;\n\n</%perl>\n\n<%before navbar1>\n  <div class="navbar_special">\n    <% 'Navigation:' %>\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n  </div>\n</%before>\n\n<%after render>\n   <% # Add analytics line after everything has rendered %>\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n</%after>\n\n<%augment wrap>\n  <html>\n    <body>\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n      <% say "hi there!" %>\n    </body>\n  </html>\n</%augment>\n\n<%around navbar1>\n  <div class="navbar_special">\n    <% 'Very special' %>\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n  </div>\n</%around>\n\n\n<%perl>\n\n#sub navbar{};\n  sub render {};\n  sub wrap {};\n  use v5.10;\n\n  greet1();\n  MC0::Foo::Bar::test_mc1_mc::greet1();\n  MC0::Foo::Bar::test_mc1_mc::navbar1();\n\n</%perl>\n<%class>\n#sub navbar{};\n  sub render {};\n  sub wrap {};\n  use v5.10;\n\n  greet1();\n  MC0::Foo::Bar::test_mc1_mc::greet1();\n  MC0::Foo::Bar::test_mc1_mc::navbar1();\n</%class>\n\n\n<%init>\n#sub navbar{};\n  sub render {};\n  sub wrap {};\n  use v5.10;\n\n  greet1();\n  MC0::Foo::Bar::test_mc1_mc::greet1();\n  MC0::Foo::Bar::test_mc1_mc::navbar1();\n</%init>\n\n<%method greet1 ($name, $color)>\n<div style="color: <% $color %>">\n  Hello, <% $name %>!\n<%perl>\n  say $self;\n    say $orig;\n  </%perl>\n\n<%perl>\n  say $name;\n    say "Perl code executed!";\n  </%perl>\n</div>\n</%method>\n\n<%filter Row1 ($class)>\n<tr class="<% $class %>">\n% foreach my $item (split(/\s/, $yield->())) {\n   <td><% $item %></td>\n% }\n</tr>\n</%filter>\n\n<%flags>\n  #    extends => '/foo/bar'\n  </%flags>\n\n<%override navbar1>\n  <% super() %>\n\n  <%perl>\n    say $self;\n      say $orig;\n    </%perl>\n\n  <a href="extra">extra</a>\n</%override>\n\n\n<%  # comment... %>\n\n<div>\n% # comment\n</div>\n\n<%doc>\n</%doc>\n\n\n<& /shared/google_analytics_line.mi &>\n\n<& /Foo/Base.mc, name => "value"  &>\n\n\n<%text></%text>\n\n% say 'proper code';\n\n% say 'not a code';\n\n\n<html>\n% if ($a == $b) {\n<div>\n    Say hi to <% uc("mason")  %>\n    Say hi to <% uc("mason") | Row1 %>\n</div>\n% }\n\n\n # relative component paths\n<& topimage.mi &>\n<& tools/searchbox.mi &>\n\n# absolute component path\n<& /shared/masthead.mi, color => 'salmon' &>\n\n# this component path MUST have quotes because it contains a comma\n<& "sugar,eggs.mi", mix => 1 &>\n\n# variable component path\n<& $comp &>\n\n# variable component and attributes\n<& $comp, %args &>\n\n# you can use arbitrary expression for component path, but it cannot\n# begin with a letter or number; delimit with () to remedy this\n<& (int(rand(2)) ? 'thiscomp.mi' : 'thatcomp.mi'), id => 123 &>')
--------------------------------------------------------------------------------